{"pageProps":{"frontmatter":{},"content":"<!DOCTYPE html>\n<html>\n\n<head>\n    <meta charset=\"utf-8\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"/>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0\">\n    <meta name=\"description\" content=\"This module provides the functionality required to access and manipulate data stored in any type of relational database\nthat is accessible via Java Database Connectivity (JDBC).\n\">\n    <meta name=\"keywords\" content=\"ballerina,ballerina lang,api docs,java.jdbc\">\n\n    <title>API Docs - ballerina/java.jdbc</title>\n    <script src=\"../html-template-resources/jquery.min.js\"></script>\n\n    <!-- BIO THEME START -->\n<link rel=\"stylesheet\" href=\"/css/latest-bootstrap.css\">\n<!-- Optional theme -->\n<link rel=\"stylesheet\" href=\"/css/latest-bootstrap-theme.css\">\n<!-- Latest compiled and minified JavaScript -->\n<script src=\"/js/latest-bootstrap.js\"></script>\n\n<script type=\"text/javascript\" src=\"/js/api-doc-template.js\"></script>\n<script type=\"text/javascript\" src=\"/js/ballerina-common.js\"></script>\n<link rel=\"stylesheet\" href=\"/css/ballerina-io.css\">\n<link rel=\"stylesheet\" href=\"/css/ballerina-io-docs.css\">\n<link rel=\"stylesheet\" href=\"/css/ballerina-io-api-new.css\">\n\n<style>\n    .line-numbers-wrap {\n        display: none;\n    }\n     .cVersionChangeBanner{\n    color: #000000;\n    background-color: #fcdf4a !important;\n    width: 100%;\n    display: inline-block;\n    padding: 10px 0px;\n    text-align: center;\n    font-weight: 500;\n    font-size: 20px;\n    transition : all 0.3s;\n    position: fixed;\n    top: 0;\n    width: 100%;\n    height: 50px;\n    z-index: 9;\n    }\n    .cInfoBannerLink{\n        color: #000000;\n        text-decoration: underline;\n    }\n     .cInfoBannerLink:hover{\n        color: #545454 !important;\n        text-decoration: underline !important;\n    }\n   \n    .content-wrapper{\n        padding-top: 2em !important;\n    }\n    @media only screen and (max-width: 992px) {\n        .content-wrapper {padding-top: 7em !important}\n\n    }\n</style>\n<!-- BIO THEME END -->\n\n    <link rel=\"stylesheet\" href=\"../html-template-resources/semantic.min.css\">\n    <link rel=\"stylesheet\" href=\"../html-template-resources/styles/css/styles.css\">\n    <link rel=\"stylesheet\" href=\"../html-template-resources/styles/css/font.css\">\n    <script src=\"../html-template-resources/semantic.min.js\"></script>\n    <script src=\"../syntax-highlighter/highlighter.js\"></script>\n\n</head>\n\n\n<body class=\"cBallerina-io\">\n    <div class=\"row cBallerina-io-top-row\">\n    <div class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\"></div>\n    <div class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6 cTopLineContainer\">\n        <div class=\"cTopLine\"></div>\n    </div>\n</div>\n<div class=\"cVersionChangeBanner\">\n       This API documentation is for Ballerina 1.2.0. <a href=\"https://lib.ballerina.io\" class=\"cInfoBannerLink\">View API documentation for the latest release</a>.\n    </div>\n    <div class=\"row cBallerina-io-Nav\" id=\"iMainNavigation\" style=\"top:50px\">\n\n</div>\n<div class=\"clearfix\"></div>\n    <div class=\"navi-wrapper\">\n        <div class=\"navi-wrapper-content\">\n            <a href=\"\n    ../index.html\">\n    <img class=\"logo\" src=\"../html-template-resources/images/ballerina-logo.png\">\n</a>\n\n            \n\n    \n        <div class=\"version\">v1.2.14</div>\n    \n\n\n<div class=\"primary-list module\">\n    \n        <a href=\"../java.jdbc/index.html\" onclick=\"menuLinkClick()\">\n            <h3>java.jdbc</h3>\n        </a>\n    \n    <ul>\n        \n        <li>\n            <a data=\"records\" href=\"../java.jdbc/index.html#records\" onclick=\"menuLinkClick()\">Records</a>\n        </li>\n        \n        \n        \n            <li>\n                <a data=\"clients\" href=\"../java.jdbc/index.html#clients\" onclick=\"menuLinkClick()\">Clients</a>\n            </li>\n        \n        \n        \n        \n            <li>\n                <a data=\"constants\" href=\"../java.jdbc/index.html#constants\" onclick=\"menuLinkClick()\">Constants</a>\n            </li>\n        \n        \n        \n            <li>\n                <a data=\"types\" href=\"../java.jdbc/index.html#types\" onclick=\"menuLinkClick()\">Types</a>\n            </li>\n        \n        \n            <li>\n                <a data=\"errors\" href=\"../java.jdbc/index.html#errors\" onclick=\"menuLinkClick()\">Errors</a>\n            </li>\n        \n    </ul>\n    <div class=\"ui divider\"></div>\n</div>\n\n            <div class=\"primary-list module-list\">\n    \n        <h3>All Modules</h3>\n        <ul>\n            \n                <li>\n                    <a href=\"../auth/index.html\">auth</a>\n                </li>\n            \n                <li>\n                    <a href=\"../cache/index.html\">cache</a>\n                </li>\n            \n                <li>\n                    <a href=\"../config/index.html\">config</a>\n                </li>\n            \n                <li>\n                    <a href=\"../crypto/index.html\">crypto</a>\n                </li>\n            \n                <li>\n                    <a href=\"../email/index.html\">email</a>\n                </li>\n            \n                <li>\n                    <a href=\"../encoding/index.html\">encoding</a>\n                </li>\n            \n                <li>\n                    <a href=\"../file/index.html\">file</a>\n                </li>\n            \n                <li>\n                    <a href=\"../filepath/index.html\">filepath</a>\n                </li>\n            \n                <li>\n                    <a href=\"../grpc/index.html\">grpc</a>\n                </li>\n            \n                <li>\n                    <a href=\"../http/index.html\">http</a>\n                </li>\n            \n                <li>\n                    <a href=\"../io/index.html\">io</a>\n                </li>\n            \n                <li>\n                    <a href=\"../java/index.html\">java</a>\n                </li>\n            \n                <li>\n                    <a href=\"../java.arrays/index.html\">java.arrays</a>\n                </li>\n            \n                <li>\n                    <a href=\"../java.jdbc/index.html\">java.jdbc</a>\n                </li>\n            \n                <li>\n                    <a href=\"../jsonutils/index.html\">jsonutils</a>\n                </li>\n            \n                <li>\n                    <a href=\"../jwt/index.html\">jwt</a>\n                </li>\n            \n                <li>\n                    <a href=\"../kafka/index.html\">kafka</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.array/index.html\">lang.array</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.boolean/index.html\">lang.boolean</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.decimal/index.html\">lang.decimal</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.error/index.html\">lang.error</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.float/index.html\">lang.float</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.future/index.html\">lang.future</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.int/index.html\">lang.int</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.map/index.html\">lang.map</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.object/index.html\">lang.object</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.stream/index.html\">lang.stream</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.string/index.html\">lang.string</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.table/index.html\">lang.table</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.typedesc/index.html\">lang.typedesc</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.value/index.html\">lang.value</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.xml/index.html\">lang.xml</a>\n                </li>\n            \n                <li>\n                    <a href=\"../ldap/index.html\">ldap</a>\n                </li>\n            \n                <li>\n                    <a href=\"../log/index.html\">log</a>\n                </li>\n            \n                <li>\n                    <a href=\"../math/index.html\">math</a>\n                </li>\n            \n                <li>\n                    <a href=\"../mime/index.html\">mime</a>\n                </li>\n            \n                <li>\n                    <a href=\"../nats/index.html\">nats</a>\n                </li>\n            \n                <li>\n                    <a href=\"../oauth2/index.html\">oauth2</a>\n                </li>\n            \n                <li>\n                    <a href=\"../observe/index.html\">observe</a>\n                </li>\n            \n                <li>\n                    <a href=\"../openapi/index.html\">openapi</a>\n                </li>\n            \n                <li>\n                    <a href=\"../rabbitmq/index.html\">rabbitmq</a>\n                </li>\n            \n                <li>\n                    <a href=\"../reflect/index.html\">reflect</a>\n                </li>\n            \n                <li>\n                    <a href=\"../runtime/index.html\">runtime</a>\n                </li>\n            \n                <li>\n                    <a href=\"../socket/index.html\">socket</a>\n                </li>\n            \n                <li>\n                    <a href=\"../stringutils/index.html\">stringutils</a>\n                </li>\n            \n                <li>\n                    <a href=\"../system/index.html\">system</a>\n                </li>\n            \n                <li>\n                    <a href=\"../task/index.html\">task</a>\n                </li>\n            \n                <li>\n                    <a href=\"../test/index.html\">test</a>\n                </li>\n            \n                <li>\n                    <a href=\"../time/index.html\">time</a>\n                </li>\n            \n                <li>\n                    <a href=\"../transactions/index.html\">transactions</a>\n                </li>\n            \n                <li>\n                    <a href=\"../websub/index.html\">websub</a>\n                </li>\n            \n                <li>\n                    <a href=\"../xmlutils/index.html\">xmlutils</a>\n                </li>\n            \n                <li>\n                    <a href=\"../xslt/index.html\">xslt</a>\n                </li>\n            \n        </ul>\n        <div class=\"ui divider\"></div>\n    \n</div>\n        </div>\n    </div>\n    <div class=\"content-wrapper pusher\">\n        <div>\n    <a id=\"toc\" class=\"toc item\" onclick=\"displayMenu()\">\n        <img src=\"../html-template-resources/images/menu.svg\">\n    </a>\n</div>\n        <div class=\"main-wrapper module-wrapper\">\n                <h1>\n                    <a class=\"breadcrumb-home\" href=\"\n    ../index.html\">\n    <img class=\"breadcrumb-home-icon\" src=\"../html-template-resources/images/home.svg\">\n</a>\n                    \n                        Module : <span class=\"modules\">java.jdbc</span>\n                    \n                </h1>\n                    <h2>Module overview</h2>\n<p>This module provides the functionality required to access and manipulate data stored in any type of relational database\nthat is accessible via Java Database Connectivity (JDBC).</p>\n<p><strong>Prerequisite:</strong> Please add the JDBC driver corresponding to the database you are trying to interact with,\nas a native library dependency in your Ballerina project. Then, once you build the project with <code>ballerina build</code>\ncommand, you should be able to run the resultant jar with, the <code>java -jar</code> command.</p>\n<p>e.g. Ballerina.toml content.\nPlease change the path to the JDBC driver appropriately.</p>\n<pre><code class=\"language-toml\">[project]\norg-name= &quot;sample&quot;\nversion= &quot;0.1.0&quot;\n\n[platform]\ntarget = &quot;java8&quot;\n\n    [[platform.libraries]]\n    artafactId = &quot;mysql-connector-java&quot;\n    version = &quot;8.0.17&quot;\n    path = &quot;/path/to/mysql-connector-java-8.0.17.jar&quot;\n    groupId = &quot;mysql&quot;\n    modules = [&quot;samplemodule&quot;]\n</code></pre>\n<p>Or, if you're trying to run a single bal file, you can copy the JDBC driver into <code>&lt;BALLERINA_HOME&gt;/bre/lib/distributions/jballerina-&lt;VERSION&gt;/bre/lib</code> and\nrun the bal file with <code>ballerina run</code> command.</p>\n<h3>Client</h3>\n<p>To access a database, you must first create a <code>Client</code> object. The code for creating a JDBC client can be found below.</p>\n<h4>Creating a client</h4>\n<pre><code class=\"language-ballerina\">jdbc:Client testDB = new ({\n    url: &quot;jdbc:mysql://localhost:3306/testdb&quot;,\n    username: &quot;root&quot;,\n    password: &quot;root&quot;,\n    dbOptions: {useSSL: false}\n});\n</code></pre>\n<p>The full list of client properties can be found listed under the <code>jdbc:PoolOptions</code> type.</p>\n<h3>Connection pool handling</h3>\n<p>There are 3 possible scenarios for connection pool handling.</p>\n<ol>\n<li>\n<p>Global, shareable default connection pool</p>\n<p>If you do not provide the <code>poolOptions</code> field, a globally shareable pool will be created for your database unless\na connection pool matching with the properties you provided already exists.</p>\n<pre><code class=\"language-ballerina\">jdbc:Client testDB = new ({\n    url: &quot;jdbc:mysql://localhost:3306/testdb&quot;,\n    username: &quot;root&quot;,\n    password: &quot;root&quot;,\n    dbOptions: {useSSL: false}\n});\n</code></pre>\n</li>\n<li>\n<p>Client owned, unsharable connection pool</p>\n<p>If you define the <code>poolOptions</code> field inline, an unshareable connection pool will be created.</p>\n<pre><code class=\"language-ballerina\">jdbc:Client testDB = new ({\n    url: &quot;jdbc:mysql://localhost:3306/testdb&quot;,\n    username: &quot;root&quot;,\n    password: &quot;root&quot;,\n    poolOptions: {maximumPoolSize: 5},\n    dbOptions: {useSSL: false}\n});\n</code></pre>\n</li>\n<li>\n<p>Local shareable connection pool</p>\n<p>If you create a record of type <code>jdbc:PoolOptions</code> and reuse that in the configuration of multiple clients, for each\nset of clients that connects to the same database instance with the same set of properties, a shared connection pool\nwill be created.</p>\n<pre><code class=\"language-ballerina\">jdbc:PoolOptions poolOptions1 = {maximumPoolSize: 5};\n\njdbc:Client testDB1 = new ({\n    url: &quot;jdbc:mysql://localhost:3306/testdb1&quot;,\n    username: &quot;root&quot;,\n    password: &quot;root&quot;,\n    poolOptions: poolOptions1,\n    dbOptions: {useSSL: false}\n});\n\njdbc:Client testDB2 = new ({\n    url: &quot;jdbc:mysql://localhost:3306/testdb1&quot;,\n    username: &quot;root&quot;,\n    password: &quot;root&quot;,\n    poolOptions: poolOptions1,\n    dbOptions: {useSSL: false}\n});\n\njdbc:Client testDB3 = new ({\n    url: &quot;jdbc:mysql://localhost:3306/testdb2&quot;,\n    username: &quot;root&quot;,\n    password: &quot;root&quot;,\n    poolOptions: poolOptions1,\n    dbOptions: {useSSL: false}\n});\n</code></pre>\n</li>\n</ol>\n<h3>Database operations</h3>\n<p>Once the client is created, database operations can be executed through that client. This module provides support for\ncreating tables and executing stored procedures. It also supports selecting, inserting, deleting, updating, and batch\nupdating data. Samples for these operations can be found below.</p>\n<h4>Creating tables</h4>\n<p>This sample creates a table with two columns. One column is of type <code>int</code>, and the other is of type <code>varchar</code>.\nThe CREATE statement is executed via the <code>update</code> remote function of the client.</p>\n<pre><code class=\"language-ballerina\">// Create the ‘Students’ table with fields ‘id’, 'name' and ‘age’.\nvar ret = testDB-&gt;update(&quot;CREATE TABLE student(id INT AUTO_INCREMENT, &quot; +\n                         &quot;age INT, name VARCHAR(255), PRIMARY KEY (id))&quot;);\nif (ret is jdbc:UpdateResult) {\n    io:println(&quot;Students table create status in DB: &quot;, ret.updatedRowCount);\n} else {\n    error err = ret;\n    io:println(&quot;Students table creation failed: &quot;,\n                &lt;string&gt;err.detail()[&quot;message&quot;]);\n}\n</code></pre>\n<h4>Inserting data</h4>\n<p>This sample shows three examples of data insertion by executing an INSERT statement using the <code>update</code> remote function\nof the client.</p>\n<p>In the first example, query parameter values are passed directly into the query statement of the <code>update</code>  remote function:</p>\n<pre><code class=\"language-ballerina\">var ret = testDB-&gt;update(&quot;INSERT INTO student(age, name) &quot; +\n                         &quot;values (23, 'john')&quot;);\nif (ret is jdbc:UpdateResult) {\n    io:println(&quot;Inserted row count to Students table: &quot;, ret.updatedRowCount);\n} else {\n    error err = ret;\n    io:println(&quot;Insert to Students table failed: &quot;,\n                &lt;string&gt;err.detail()[&quot;message&quot;]);\n}\n</code></pre>\n<p>In the second example, the parameter values, which are in local variables, are passed directly as parameters to\nthe <code>update</code> remote function. This direct parameter passing can be done for any primitive Ballerina type like <code>string</code>,\n<code>int</code>, <code>float</code>, or <code>boolean</code>. The SQL type of the parameter is derived from the type of the Ballerina variable that\nis passed in.</p>\n<pre><code class=\"language-ballerina\">string name = &quot;Anne&quot;;\nint age = 8;\nvar ret = testDB-&gt;update(&quot;INSERT INTO student(age, name) values (?, ?)&quot;,\n                          age, name);\nif (ret is jdbc:UpdateResult) {\n    io:println(&quot;Inserted row count to Students table: &quot;, ret.updatedRowCount);\n} else {\n    error err = ret;\n    io:println(&quot;Insert to Students table failed: &quot;,\n                &lt;string&gt;err.detail()[&quot;message&quot;]);\n}\n</code></pre>\n<p>In the third example, parameter values are passed as a <code>jdbc:Parameter</code> to the <code>update</code> remote function. Use\n<code>jdbc:Parameter</code> when you need to provide more details such as the exact SQL type of the parameter, or the parameter\ndirection. The default parameter direction is <code>IN</code>.</p>\n<pre><code class=\"language-ballerina\">jdbc:Parameter p1 = {sqlType: jdbc:TYPE_VARCHAR, value: &quot;James&quot;};\njdbc:Parameter p2 = {sqlType: jdbc:TYPE_INTEGER, value: 10};\n\nvar ret = testDB-&gt;update(&quot;INSERT INTO student(age, name) values (?, ?)&quot;,\n                          p2, p1);\nif (ret is jdbc:UpdateResult) {\n    io:println(&quot;Inserted row count to Students table: &quot;, ret.updatedRowCount);\n} else {\n    error err = ret;\n    io:println(&quot;Insert to Students table failed: &quot;,\n                &lt;string&gt;err.detail()[&quot;message&quot;]);\n}\n</code></pre>\n<h4>Inserting data with auto-generated keys</h4>\n<p>This example demonstrates inserting data while returning the auto-generated keys. It achieves this by using the\n<code>update</code> remote function to execute the INSERT statement.</p>\n<pre><code class=\"language-ballerina\">int age = 31;\nstring name = &quot;Kate&quot;;\nvar ret = testDB-&gt;update(&quot;INSERT INTO student (age, name) values (?, ?)&quot;,\n                          age, name);\nif (ret is jdbc:UpdateResult) {\n    int count = ret.updatedRowCount;\n    int generatedKey = &lt;int&gt;ret.generatedKeys[&quot;GENERATED_KEY&quot;];\n    io:println(&quot;Inserted row count: &quot;, count);\n    io:println(&quot;Generated key: &quot;, generatedKey);\n} else {\n    error err = ret;\n    io:println(&quot;Insert to table failed: &quot;, &lt;string&gt;err.detail()[&quot;message&quot;]);\n}\n</code></pre>\n<h4>Selecting data</h4>\n<p>This example demonstrates selecting data. First, a type is created to represent the returned result set. Next, the\nSELECT query is executed via the <code>select</code> remote function of the client by passing that result set type. Once the\nquery is executed, each data record can be retrieved by looping the result set. The <code>table</code> returned by the select\noperation holds a pointer to the actual data in the database and it loads data from the table only when it is accessed.\nThis table can be iterated only once.</p>\n<pre><code class=\"language-ballerina\">// Define a type to represent the results.\ntype Student record {\n    int id;\n    int age;\n    string name;\n};\n\n// Select the data from the table. Query Parameters are passed directly. Similar to `update` examples,\n// parameters can be passed as `jdbc:Parameter`s as well.\nvar ret = testDB-&gt;select(&quot;SELECT * FROM student WHERE id &lt; ? AND age &gt; ?&quot;,\n                          Student, 10, 12);\nif (ret is table&lt;Student&gt;) {\n    // Iterating returned table.\n    foreach var row in ret {\n        io:println(&quot;Student:&quot;, row.id, &quot;|&quot;, row.name, &quot;|&quot;, row.age);\n    }\n} else {\n    error err = ret;\n    io:println(&quot;Select data from student table failed: &quot;,\n                &lt;string&gt;err.detail()[&quot;message&quot;]);\n}\n</code></pre>\n<h4>Updating data</h4>\n<p>This example demonstrates modifying data by executing an UPDATE statement via the <code>update</code> remote function of\nthe client.</p>\n<pre><code class=\"language-ballerina\">var ret = testDB-&gt;update(&quot;UPDATE student SET name = 'John' WHERE age = ?&quot;, 23);\nif (ret is jdbc:UpdateResult) {\n    io:println(&quot;Updated row count in Students table: &quot;, ret.updatedRowCount);\n} else {\n    error err = ret;\n    io:println(&quot;Insert to Students table failed: &quot;,\n                &lt;string&gt;err.detail()[&quot;message&quot;]);\n}\n</code></pre>\n<h4>Batch updating data</h4>\n<p>This example demonstrates how to insert multiple records with a single INSERT statement that is executed via the\n<code>batchUpdate</code> remote function of the client. This is done by first creating multiple parameter arrays, each\nrepresenting a single record, and then passing those arrays to the <code>batchUpdate</code> operation. Similarly, multiple\nUPDATE statements can also be executed via <code>batchUpdate</code>.</p>\n<pre><code class=\"language-ballerina\">// Create the first batch of parameters.\njdbc:Parameter para1 = {sqlType: jdbc:TYPE_VARCHAR, value: &quot;Alex&quot;};\njdbc:Parameter para2 = {sqlType: jdbc:TYPE_INTEGER, value: 12};\njdbc:Parameter[] parameters1 = [para1, para2];\n\n// Create the second batch of parameters.\njdbc:Parameter para3 = {sqlType: jdbc:TYPE_VARCHAR, value: &quot;Peter&quot;};\njdbc:Parameter para4 = {sqlType: jdbc:TYPE_INTEGER, value: 6};\njdbc:Parameter[] parameters2 = [para3, para4];\n\n// Do the batch update by passing the batches.\njdbc:BatchUpdateResult ret = testDB-&gt;batchUpdate(&quot;INSERT INTO &quot; +\n                             &quot;Student(name, age) values (?, ?)&quot;,\n                             false, parameters1, parameters2);\nerror? e = ret.returnedError;\nif (e is error) {\n    io:println(&quot;Error occurred:&quot;, &lt;string&gt;e.detail()[&quot;message&quot;]);\n} else {\n    io:println(&quot;Batch item 1 update count: &quot;, ret.updatedRowCount[0]);\n    io:println(&quot;Batch item 2 update count: &quot;, ret.updatedRowCount[1]);\n}\n</code></pre>\n<h4>Calling stored procedures</h4>\n<p>The following examples demonstrate executing stored procedures via the <code>call</code> remote function of the client.</p>\n<p>The first example shows how to create and call a simple stored procedure that inserts data.</p>\n<pre><code class=\"language-ballerina\">// Create the stored procedure.\nvar ret = testDB-&gt;update(&quot;CREATE PROCEDURE INSERTDATA &quot; +\n                            &quot;(IN pName VARCHAR(255), IN pAge INT) &quot; +\n                            &quot;BEGIN &quot; +\n                            &quot;INSERT INTO Student(name, age) &quot; +\n                            &quot;values (pName, pAge); &quot; +\n                            &quot;END&quot;);\nif (ret is jdbc:UpdateResult) {\n    io:println(&quot;Stored proc creation status: : &quot;, ret.updatedRowCount);\n} else {\n    error err = ret;\n    io:println(&quot;Stored proc creation failed: &quot;,\n                &lt;string&gt;err.detail()[&quot;message&quot;]);\n}\n\n// Call the stored procedure.\nvar retCall = testDB-&gt;call(&quot;{CALL INSERTDATA(?,?)}&quot;, (), &quot;George&quot;, 15);\nif (retCall is () | table&lt;record {}&gt;[]) {\n    io:println(&quot;Call operation successful&quot;);\n} else {\n    error err = retCall;\n    io:println(&quot;Stored procedure call failed: &quot;,\n                &lt;string&gt;err.detail()[&quot;message&quot;]);\n}\n</code></pre>\n<p>This next example shows how to create and call a stored procedure that accepts <code>INOUT</code> and <code>OUT</code> parameters.</p>\n<pre><code class=\"language-ballerina\">// Create the stored procedure.\nvar ret = testDB-&gt;update(&quot;CREATE PROCEDURE GETCOUNT &quot; +\n                            &quot;(INOUT pID INT, OUT pCount INT) &quot; +\n                            &quot;BEGIN &quot; +\n                            &quot;SELECT COUNT(*) INTO pID FROM Student &quot; +\n                                &quot;WHERE id = pID; &quot; +\n                            &quot;SELECT COUNT(*) INTO pCount FROM Student &quot; +\n                                &quot;WHERE id = 2; &quot; +\n                            &quot;END&quot;);\nif (ret is jdbc:UpdateResult) {\n    io:println(&quot;Stored proc creation status: : &quot;, ret.updatedRowCount);\n} else {\n    error err = ret;\n    io:println(&quot;Stored procedure creation failed:  &quot;,\n                &lt;string&gt;err.detail()[&quot;message&quot;]);\n}\n\n// Call the stored procedure.\njdbc:Parameter param1 = {sqlType: jdbc:TYPE_INTEGER, value: 3,\n                         direction: jdbc:DIRECTION_INOUT};\njdbc:Parameter param2 = {sqlType: jdbc:TYPE_INTEGER,\n                         direction: jdbc:DIRECTION_OUT};\nvar retCall = testDB-&gt;call(&quot;{CALL GETCOUNT(?,?)}&quot;, (), param1, param2);\nif (retCall is () | table&lt;record {}&gt;[]) {\n    io:println(&quot;Call operation successful&quot;);\n    io:print(&quot;Student count with ID = 3: &quot;);\n    io:println(param1.value);\n    io:print(&quot;Student count with ID = 2: &quot;);\n    io:println(param2.value);\n} else {\n    error err = retCall;\n    io:println(&quot;Stored procedure call failed: &quot;,\n                &lt;string&gt;err.detail()[&quot;message&quot;]);\n}\n</code></pre>\n<blockquote>\n<p><strong>Note:</strong> The default thread pool size used in Ballerina is the number of processors available * 2. You can configure\nthe thread pool size by using the <code>BALLERINA_MAX_POOL_SIZE</code> environment variable.</p>\n</blockquote>\n\n\n            \n            <section class=\"method-content\" id=\"records\">\n                <div class=\"main-method-title here\">\n                    <a class=\"url-link\" href=\"#records\">\n                        <img class=\"url-link-img\" src=\"../html-template-resources/images/link.svg\">\n                    </a>\n                <h2> Records </h2>\n                </div>\n                <table>\n                    \n                        <tr>\n                            <td class=\"module-title truncate records\" id=\"ApplicationErrorData\" title=\"ApplicationErrorData\">\n                                <a class=\"records \" href=\"records/ApplicationErrorData.html\">ApplicationErrorData</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Represents the properties belonging to an <code>ApplicationError</code></p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate records\" id=\"BatchUpdateResult\" title=\"BatchUpdateResult\">\n                                <a class=\"records \" href=\"records/BatchUpdateResult.html\">BatchUpdateResult</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Represents the output of the <code>batchUpdate</code> remote function.\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate records\" id=\"ClientConfiguration\" title=\"ClientConfiguration\">\n                                <a class=\"records \" href=\"records/ClientConfiguration.html\">ClientConfiguration</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Provides a set of configurations for the JDBC Client.\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate records\" id=\"DatabaseErrorData\" title=\"DatabaseErrorData\">\n                                <a class=\"records \" href=\"records/DatabaseErrorData.html\">DatabaseErrorData</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Represents the properties belonging to a <code>DatabaseError</code>.\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate records\" id=\"Parameter\" title=\"Parameter\">\n                                <a class=\"records \" href=\"records/Parameter.html\">Parameter</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Represents a parameter for the JDBC Client remote functions when a variable needs to be passed\nto the remote function.\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate records\" id=\"PoolOptions\" title=\"PoolOptions\">\n                                <a class=\"records \" href=\"records/PoolOptions.html\">PoolOptions</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Represents the properties which are used to configure DB connection pool.\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate records\" id=\"UpdateResult\" title=\"UpdateResult\">\n                                <a class=\"records \" href=\"records/UpdateResult.html\">UpdateResult</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Represents the output of the <code>update</code> remote function.\n                            </td>\n                        </tr>\n                    \n                </table>\n            </section>\n            \n\n            \n\n            \n             <section class=\"method-content\" id=\"clients\">\n                <div class=\"main-method-title here\">\n                    <a class=\"url-link\" href=\"#clients\">\n                        <img class=\"url-link-img\" src=\"../html-template-resources/images/link.svg\">\n                    </a>\n                <h2> Clients </h2>\n                </div>\n                <table>\n                    \n                        <tr>\n                            <td class=\"module-title truncate clients\" id=\"Client\" title=\"Client\">\n                                <a class=\"clients \" href=\"clients/Client.html\">Client</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Represents a JDBC client endpoint.\n                            </td>\n                        </tr>\n                    \n                </table>\n             </section>\n            \n\n            \n           \n\n            \n\n\n            \n            <section class=\"method-content\" id=\"constants\">\n                <div class=\"main-method-title here\">\n                    <a class=\"url-link\" href=\"#constants\">\n                        <img class=\"url-link-img\" src=\"../html-template-resources/images/link.svg\">\n                    </a>\n                <h2> Constants </h2>\n                </div>\n                <table>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"DATABASE_ERROR_REASON\" title=\"DATABASE_ERROR_REASON\">\n                                <a class=\"constant \" href=\"constants.html#DATABASE_ERROR_REASON\">DATABASE_ERROR_REASON</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Identifies the issues related to database accessibility, erroneous queries, constraint violations,\ndatabase resource clean-up, and other similar scenarios.\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"APPLICATION_ERROR_REASON\" title=\"APPLICATION_ERROR_REASON\">\n                                <a class=\"constant \" href=\"constants.html#APPLICATION_ERROR_REASON\">APPLICATION_ERROR_REASON</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Identifies the errors originating from application-level causes.\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TYPE_VARCHAR\" title=\"TYPE_VARCHAR\">\n                                <a class=\"constant \" href=\"constants.html#TYPE_VARCHAR\">TYPE_VARCHAR</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Small variable-length character string</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TYPE_CHAR\" title=\"TYPE_CHAR\">\n                                <a class=\"constant \" href=\"constants.html#TYPE_CHAR\">TYPE_CHAR</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Small fixed-length character string</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TYPE_LONGVARCHAR\" title=\"TYPE_LONGVARCHAR\">\n                                <a class=\"constant \" href=\"constants.html#TYPE_LONGVARCHAR\">TYPE_LONGVARCHAR</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Large variable-length character string</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TYPE_NCHAR\" title=\"TYPE_NCHAR\">\n                                <a class=\"constant \" href=\"constants.html#TYPE_NCHAR\">TYPE_NCHAR</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Small fixed-length character string with Unicode support</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TYPE_LONGNVARCHAR\" title=\"TYPE_LONGNVARCHAR\">\n                                <a class=\"constant \" href=\"constants.html#TYPE_LONGNVARCHAR\">TYPE_LONGNVARCHAR</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Large variable-length character string with Unicode support</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TYPE_NVARCHAR\" title=\"TYPE_NVARCHAR\">\n                                <a class=\"constant \" href=\"constants.html#TYPE_NVARCHAR\">TYPE_NVARCHAR</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Large variable-length character string with Unicode support</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TYPE_BIT\" title=\"TYPE_BIT\">\n                                <a class=\"constant \" href=\"constants.html#TYPE_BIT\">TYPE_BIT</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Single bit value, which can be zero, one, or nil</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TYPE_BOOLEAN\" title=\"TYPE_BOOLEAN\">\n                                <a class=\"constant \" href=\"constants.html#TYPE_BOOLEAN\">TYPE_BOOLEAN</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Boolean value being either True or false</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TYPE_TINYINT\" title=\"TYPE_TINYINT\">\n                                <a class=\"constant \" href=\"constants.html#TYPE_TINYINT\">TYPE_TINYINT</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>8-bit integer value, which may be unsigned or signed</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TYPE_SMALLINT\" title=\"TYPE_SMALLINT\">\n                                <a class=\"constant \" href=\"constants.html#TYPE_SMALLINT\">TYPE_SMALLINT</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>16-bit signed integer value, which may be unsigned or signed</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TYPE_INTEGER\" title=\"TYPE_INTEGER\">\n                                <a class=\"constant \" href=\"constants.html#TYPE_INTEGER\">TYPE_INTEGER</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>32-bit signed integer value, which may be unsigned or signed</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TYPE_BIGINT\" title=\"TYPE_BIGINT\">\n                                <a class=\"constant \" href=\"constants.html#TYPE_BIGINT\">TYPE_BIGINT</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>64-bit signed integer value, which may be unsigned or signed</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TYPE_NUMERIC\" title=\"TYPE_NUMERIC\">\n                                <a class=\"constant \" href=\"constants.html#TYPE_NUMERIC\">TYPE_NUMERIC</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Fixed-precision and scaled decimal values</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TYPE_DECIMAL\" title=\"TYPE_DECIMAL\">\n                                <a class=\"constant \" href=\"constants.html#TYPE_DECIMAL\">TYPE_DECIMAL</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Fixed-precision and scaled decimal values</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TYPE_REAL\" title=\"TYPE_REAL\">\n                                <a class=\"constant \" href=\"constants.html#TYPE_REAL\">TYPE_REAL</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Single precision floating point number</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TYPE_FLOAT\" title=\"TYPE_FLOAT\">\n                                <a class=\"constant \" href=\"constants.html#TYPE_FLOAT\">TYPE_FLOAT</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Double precision floating point number</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TYPE_DOUBLE\" title=\"TYPE_DOUBLE\">\n                                <a class=\"constant \" href=\"constants.html#TYPE_DOUBLE\">TYPE_DOUBLE</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Double precision floating point number</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TYPE_BINARY\" title=\"TYPE_BINARY\">\n                                <a class=\"constant \" href=\"constants.html#TYPE_BINARY\">TYPE_BINARY</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Small fixed-length binary value</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TYPE_BLOB\" title=\"TYPE_BLOB\">\n                                <a class=\"constant \" href=\"constants.html#TYPE_BLOB\">TYPE_BLOB</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Large Binary object</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TYPE_LONGVARBINARY\" title=\"TYPE_LONGVARBINARY\">\n                                <a class=\"constant \" href=\"constants.html#TYPE_LONGVARBINARY\">TYPE_LONGVARBINARY</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Large variable-length binary value</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TYPE_VARBINARY\" title=\"TYPE_VARBINARY\">\n                                <a class=\"constant \" href=\"constants.html#TYPE_VARBINARY\">TYPE_VARBINARY</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Small variable-length binary value</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TYPE_CLOB\" title=\"TYPE_CLOB\">\n                                <a class=\"constant \" href=\"constants.html#TYPE_CLOB\">TYPE_CLOB</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Large Character object</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TYPE_NCLOB\" title=\"TYPE_NCLOB\">\n                                <a class=\"constant \" href=\"constants.html#TYPE_NCLOB\">TYPE_NCLOB</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Large Character objects in a multibyte national character set</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TYPE_DATE\" title=\"TYPE_DATE\">\n                                <a class=\"constant \" href=\"constants.html#TYPE_DATE\">TYPE_DATE</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Both DATE and TIME with an additional nanosecond field</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TYPE_TIME\" title=\"TYPE_TIME\">\n                                <a class=\"constant \" href=\"constants.html#TYPE_TIME\">TYPE_TIME</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Both DATE and TIME with an additional nanosecond field</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TYPE_DATETIME\" title=\"TYPE_DATETIME\">\n                                <a class=\"constant \" href=\"constants.html#TYPE_DATETIME\">TYPE_DATETIME</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Both DATE and TIME with an additional nanosecond field</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TYPE_TIMESTAMP\" title=\"TYPE_TIMESTAMP\">\n                                <a class=\"constant \" href=\"constants.html#TYPE_TIMESTAMP\">TYPE_TIMESTAMP</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Both DATE and TIME with an additional nanosecond field</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TYPE_ARRAY\" title=\"TYPE_ARRAY\">\n                                <a class=\"constant \" href=\"constants.html#TYPE_ARRAY\">TYPE_ARRAY</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Composite data value, which consists of zero or more elements of a specified data type</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TYPE_STRUCT\" title=\"TYPE_STRUCT\">\n                                <a class=\"constant \" href=\"constants.html#TYPE_STRUCT\">TYPE_STRUCT</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>User-defined structured type, which consists of one or more attributes</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TYPE_REFCURSOR\" title=\"TYPE_REFCURSOR\">\n                                <a class=\"constant \" href=\"constants.html#TYPE_REFCURSOR\">TYPE_REFCURSOR</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Cursor value</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"DIRECTION_IN\" title=\"DIRECTION_IN\">\n                                <a class=\"constant \" href=\"constants.html#DIRECTION_IN\">DIRECTION_IN</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p><code>IN</code> parameters are used to send values to stored procedures</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"DIRECTION_OUT\" title=\"DIRECTION_OUT\">\n                                <a class=\"constant \" href=\"constants.html#DIRECTION_OUT\">DIRECTION_OUT</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p><code>OUT</code> parameters are used to get values from stored procedures</p>\n\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"DIRECTION_INOUT\" title=\"DIRECTION_INOUT\">\n                                <a class=\"constant \" href=\"constants.html#DIRECTION_INOUT\">DIRECTION_INOUT</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p><code>INOUT</code> parameters are used to both send and get values to/from stored procedures</p>\n\n                            </td>\n                        </tr>\n                    \n                </table>\n            </section>\n            \n\n\n            \n\n            \n            <section class=\"method-content\" id=\"types\">\n                <div class=\"main-method-title here\">\n                    <a class=\"url-link\" href=\"#types\">\n                        <img class=\"url-link-img\" src=\"../html-template-resources/images/link.svg\">\n                    </a>\n                <h2> Types </h2>\n                </div>\n                <table>\n                    \n                        <tr>\n                            <td class=\"module-title truncate types\" id=\"Direction\" title=\"Direction\">\n                                <a class=\"types \" href=\"types.html#Direction\">Direction</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>The direction of the parameter.\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate types\" id=\"Error\" title=\"Error\">\n                                <a class=\"types \" href=\"types.html#Error\">Error</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Represents a database or application level error returned from JDBC client remote functions.\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate types\" id=\"Param\" title=\"Param\">\n                                <a class=\"types \" href=\"types.html#Param\">Param</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>The parameter passed into the operations.\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate types\" id=\"SQLType\" title=\"SQLType\">\n                                <a class=\"types \" href=\"types.html#SQLType\">SQLType</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>The SQL Datatype of the parameter.\n                            </td>\n                        </tr>\n                    \n                </table>\n            </section>\n            \n\n            \n             <section class=\"method-content\" id=\"errors\">\n                <div class=\"main-method-title here\">\n                    <a class=\"url-link\" href=\"#errors\">\n                        <img class=\"url-link-img\" src=\"../html-template-resources/images/link.svg\">\n                    </a>\n                <h2> Errors </h2>\n                </div>\n                <table>\n                    \n                        <tr>\n                            <td class=\"module-title truncate errors\" id=\"ApplicationError\" title=\"ApplicationError\">\n                                <a class=\"errors \" href=\"errors.html#ApplicationError\">ApplicationError</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Represents an error originating from application-level causes.\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate errors\" id=\"DatabaseError\" title=\"DatabaseError\">\n                                <a class=\"errors \" href=\"errors.html#DatabaseError\">DatabaseError</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Represents an error caused by an issue related to database accessibility, erroneous queries, constraint violations,\ndatabase resource clean-up, and other similar scenarios.\n                            </td>\n                        </tr>\n                    \n                </table>\n            </section>\n            \n        </div>\n    </div>\n\n</body>\n\n<script>\nlet mainNavLinks = document.querySelectorAll(\".primary-list.module ul li a\");\nlet mainSections = document.querySelectorAll(\".main-wrapper section.method-content\");\n\nlet lastId;\nlet cur = [];\n\nlet contentWrapper = document.querySelector(\".content-wrapper\");\ncontentWrapper.addEventListener(\"scroll\", event => {\n  let fromTop = contentWrapper.scrollTop;\n\n  mainNavLinks.forEach(link => {\n    let section = document.querySelector(\"#\" + link.attributes.getNamedItem(\"data\").textContent);\n\n    if (\n      section.offsetTop <= fromTop &&\n      section.offsetTop + section.offsetHeight > fromTop\n    ) {\n      link.classList.add(\"current\");\n    } else {\n      link.classList.remove(\"current\");\n    }\n  });\n});\n\n</script>\n<script>\nfunction menuLinkClick() {\n  if(window.matchMedia(\"(max-width: 600px)\").matches) {\n    document.getElementsByClassName(\"navi-wrapper\")[0].style.display = \"none\";\n  }\n}\nfunction displayMenu() {\n  var nav = document.getElementsByClassName(\"navi-wrapper\")[0];\n  var content = document.getElementsByClassName(\"content-wrapper\")[0];\n  if (nav.style.display === \"none\" || nav.style.display === \"\") {\n    nav.style.display = \"block\";\n    content.style.marginLeft = \"210px\";\n  } else {\n    nav.style.display = \"none\";\n    content.style.marginLeft = \"0px\";\n  }\n}\n</script>\n<script>\nfunction menuLinkClick() {\n  if(window.matchMedia(\"(max-width: 600px)\").matches) {\n    document.getElementsByClassName(\"navi-wrapper\")[0].style.display = \"none\";\n  }\n}\nfunction displayMenu() {\n  var nav = document.getElementsByClassName(\"navi-wrapper\")[0];\n  var content = document.getElementsByClassName(\"content-wrapper\")[0];\n  if (nav.style.display === \"none\" || nav.style.display === \"\") {\n    nav.style.display = \"block\";\n    content.style.marginLeft = \"210px\";\n  } else {\n    nav.style.display = \"none\";\n    content.style.marginLeft = \"0px\";\n  }\n}\n</script>\n\n<script>\n    window.onload = (event) => {\n        ballerinaHighlighter.highlightSnippets();\n    };\n</script>\n\n\n","id":"index"},"__N_SSG":true}