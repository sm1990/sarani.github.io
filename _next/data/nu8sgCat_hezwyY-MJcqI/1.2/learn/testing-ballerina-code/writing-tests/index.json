{"pageProps":{"frontmatter":{"redirect_from":["/1.2/learn/testing-ballerina-code/writing-tests/","/1.2/learn/testing-ballerina-code/writing-tests"]},"content":"\n<!DOCTYPE html>\n<html class=\"no-js\">\n   <head>\n      <meta charset=\"utf-8\">\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n<meta name=\"description\" content=\"Learn how to use Ballerina's built-in test framework to write tests. The test framework provides a set of annotations and assertions to help write and run tests.\" />\n\n<meta name=\"author\" content=\"WSO2, Inc.\">\n\n<meta name=\"keywords\" content=\"ballerina, programming language, testing\" />\n\n<link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n<title>Writing Tests</title>\n<!-- Global site tag (gtag.js) - Google Analytics -->\n<script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-92163714-2\"></script>\n<!--FB-->\n<meta property=\"og:type\" content=\"article\" />\n<meta property=\"og:title\" content=\"Ballerina - Writing Tests\" />\n\n<meta property=\"og:description\" content=\"Learn how to use Ballerina's built-in test framework to write tests. The test framework provides a set of annotations and assertions to help write and run tests.\" />\n\n \n<meta property=\"og:image\" itemprop=\"image\" content=\"https://ballerina.io/img/ballerina-swan-lake-sm-banner-general.png\" />\n\n\n<!-- <meta name=\"twitter:image:width\" content=\"610\"> -->\n<!--LINKED IN  -->\n<meta property='og:title' content=\"Ballerina\"/>\n<meta property='og:image' content=\"https://ballerina.io/img/ballerina-swan-lake-sm-banner-general.png\n\"/>\n<meta property='og:description' itemprop=\"image\" content=\"Learn how to use Ballerina's built-in test framework to write tests. The test framework provides a set of annotations and assertions to help write and run tests.\"/>\n\n<!--TWITTER-->\n<meta name=\"twitter:card\" content=\"summary\" />\n<meta name=\"twitter:site\" content=\"@ballerinalang\">\n<meta name=\"twitter:creator\" content=\"@ballerinalang\">\n<meta name=\"twitter:title\" content=\"Ballerina\"> \n<meta name=\"twitter:card\" content=\"summary_large_image\"> \n\n<meta property=\"twitter:description\" content=\"Learn how to use Ballerina's built-in test framework to write tests. The test framework provides a set of annotations and assertions to help write and run tests.\" />\n\n<meta name=\"twitter:image\" content=\"https://ballerina.io/img/ballerina-swan-lake-sm-banner-general.png\n \">\n\n<meta property=\"twitter:text:description\" content=\"Learn how to use Ballerina's built-in test framework to write tests. The test framework provides a set of annotations and assertions to help write and run tests.\" />\n\n<meta property='twitter:image' content=\"https://ballerina.io/img/ballerina-swan-lake-sm-banner-general.png\"/>\n\n\n<script>\n   window.dataLayer = window.dataLayer || [];\n   function gtag() {\n       dataLayer.push(arguments);\n   }\n   gtag('js', new Date());\n   gtag('config', 'UA-92163714-2');\n</script>\n<!-- Google Tag Manager -->\n<script>\n   (function(w, d, s, l, i) {\n       w[l] = w[l] || [];\n       w[l].push({\n           'gtm.start': new Date().getTime(),\n           event: 'gtm.js'\n       });\n       var f = d.getElementsByTagName(s)[0],\n           j = d.createElement(s),\n           dl = l != 'dataLayer' ? '&l=' + l : '';\n       j.async = true;\n       j.src =\n           'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n       f.parentNode.insertBefore(j, f);\n   })(window, document, 'script', 'dataLayer', 'GTM-PSL2TX4');\n</script>\n<!-- End Google Tag Manager -->\n<script src=\"/js/moment-2.22.0/moment.min.js\"></script>\n<script src=\"/js/latest-jquery.js\"></script>\n<script>\n   var base_url = \"\";\n</script>\n<link rel=\"stylesheet\" href=\"/css/latest-bootstrap.css\">\n<!-- Optional theme -->\n<link rel=\"stylesheet\" href=\"/css/latest-bootstrap-theme.css\">\n<!-- Latest compiled and minified JavaScript -->\n<script src=\"/js/latest-bootstrap.js\"></script>\n<!-- Fonts -->\n<link href=\"https://fonts.googleapis.com/css?family=Roboto:100,100i,300,300i,400,400i,500,500i,700,700i,900,900i&display=swap\" rel=\"stylesheet\">\n\n<!-- \n<link type=\"text/css\" rel=\"stylesheet\" href=\"https://use.typekit.net/son4ymv.css\"> -->\n\n\n\n\n<!-- <link rel=\"stylesheet\" href=\"./js/vs/editor/editor.main.css\">-->\n<!-- <link rel=\"stylesheet\" href=\"https://use.typekit.net/son4ymv.css\" /> -->\n<!-- <link rel=\"stylesheet\" href=\"/css/theme.css\" type=\"text/css\" />\n<link rel=\"stylesheet\" href=\"/css/theme_extra.css\" type=\"text/css\" /> -->\n<!-- <script type=\"text/javascript\" src=\"/js/highlight.pack.js\"></script> -->\n\n<link rel=\"stylesheet\" href=\"/css/prism.css\">\n\n<script src=\"/js/ballerina-common.js?100\"></script>\n<script src=\"/js/handlebars/4.7.6/handlebars.js\"></script>\n<link rel=\"stylesheet\" href=\"/css/ballerina-io.css\">\n<script>\n   // Current page data\n   var mkdocs_page_name = '\"Home\"'.replace(/^\"|\"$/g, '');\n   var mkdocs_page_input_path = '\"index.md\"'.replace(/^\"|\"$/g, '');\n   var mkdocs_page_url = '\"/\"'.replace(/^\"|\"$/g, '');\n   \n   var releaseNoteFilename = 'RELEASE_NOTE.html';\n\n   var nightly_download_url = 'https://product-dist.ballerina.io/nightly';\n   var dev_download_url = 'https://product-dist.ballerina.io/dev';\n   var base_download_url = 'https://dist.ballerina.io/downloads';\n   \n   var base_releasenote_url = ''.concat('/downloads/1.2.x-release-notes');\n   var base_swanlake_releasenote_url = ''.concat('/downloads/swan-lake-release-notes');\n</script>\n\n<link href=\"/css/prism.css\" rel=\"stylesheet\" />\n\n      <link rel=\"stylesheet\" href=\"/css/ballerina-io-docs.css?200618\">\n      <link rel=\"stylesheet\" href=\"/css/ballerina-io-learn-v2.css\">\n   \n      \n   \n      \n\n      <link href=\"/css/abixTreeList.css\" rel=\"stylesheet\">\n\n   </head>\n   <body class=\"cBallerina-io\" id=\"top\">\n      <style>\n    .cVersionChangeBanner{\n    color: #000000;\n    background-color: #fcdf4a !important;\n    width: 100%;\n    display: inline-block;\n    padding: 10px 0px;\n    text-align: center;\n    font-weight: 500;\n    font-size: 20px;\n    transition : all 0.3s;\n    position: fixed;\n    top: 0;\n    width: 100%;\n    height: 50px;\n    z-index: 9;\n    }\n    .cInfoBannerLink{\n        color: #000000;\n        text-decoration: underline;\n    }\n    .cInfoBannerLink:hover{\n        color: #545454 !important;\n        text-decoration: underline !important;\n    }\n    .cBallerina-io-Gray-row {\n       padding-top: 70px !important;\n    }\n    @media only screen and (max-width: 992px) {\n        .cBallerina-io-Gray-row {\n       padding-top: 140px !important;\n    }\n\n    #noscript-warning{\n        position: relative;\n    text-align: center;\n    padding: 7px 15px;\n    background-color: #57595d;\n    color: #fff;\n    font-weight: 500;\n    letter-spacing: 0.5px;\n    }\n</style>\n<noscript>\n    <div id=\"noscript-warning\">Ballerina works best with JavaScript enabled.</div>\n</noscript>\n     <div class=\"cVersionChangeBanner\">\n        This documentation is for Ballerina 1.2.0. <a href=\"https://ballerina.io/learn/\" class=\"cInfoBannerLink\">View documentation for the latest release</a>.\n    </div>\n<div class=\"row cBallerina-io-Nav\" id=\"iMainNavigation\" style=\"top:50px\">\n\n    <div class=\"container\">\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n            <nav class=\"navbar\">\n                <div>\n                    <div class=\"navbar-header\">\n                        <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\"\n                            data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\">\n                            <span class=\"sr-only\">&#9776</span>\n                            <span class=\"icon-bar\"></span>\n                            <span class=\"icon-bar\"></span>\n                            <span class=\"icon-bar\"></span>\n                        </button>\n                        <a class=\"cMobileLogo\" href=\"/\"><img src=\"/img/ballerina-logo.svg\" alt=\"Ballerina\" /></a>\n                    </div>\n                    <div id=\"navbar\" class=\"collapse navbar-collapse\">\n                        <ul class=\"nav navbar-nav cTopNav\">\n                            <li class=\"toctree-l1\" id=\"playli\"><a class=\"cBioTopLink\" href=\"/downloads/\">Download</a>\n                            </li>\n                            <li class=\"toctree-l1\" id=\"playli\"><a class=\"cBioTopLink\" href=\"https://play.ballerina.io/\"\n                                    target=\"_blank\">Playground</a>\n                            </li>\n                            <li class=\"active toctree-l1\" id=\"learnli\"><a class=\"cBioTopLink\" href=\"/learn\">Learn</a>\n                            </li>\n                            <!--<li class=\"active toctree-l1\" id=\"eventsli\"><a class=\"cBioTopLink\" href=\"/learn/events\">Events</a>\n                            </li>-->\n                            <li class=\"toctree-l1\"><a class=\"cBioTopLink\" href=\"https://central.ballerina.io/\"\n                                    target=\"_blank\">Central</a></li>\n                            <li class=\"toctree-l1\" id=\"openli\"><a class=\"cBioTopLink\" href=\"/community\">Community</a>\n                            </li>\n                            <li class=\"toctree-l1\" id=\"helpli\"><a class=\"cBioTopLink\"\n                                    href=\"https://blog.ballerina.io\">Blog</a>\n                            </li>\n                            <li class=\"cVersionItem\">\n                                <div class=\"cVersionContainer\">\n                                    <!-- <lable class=\"cVlable\">Version</lable> -->\n                                    <select name=\"versions\" id=\"versions\" class=\"select-css\">\n                                        <option value=\"swan-lake\" data-value=\"latest\">Swan Lake</option>\n                                        <option value=\"1.2\">v1.2</option>\n                                        <option value=\"1.1\">v1.1</option>\n                                        <option value=\"1.0\">v1.0</option>\n\n                                    </select>\n                                </div>\n                            </li>\n                            <li class=\"cSearchMenu\">\n                               \n                                <!-- at the end of the HEAD -->\n<link\n  rel=\"stylesheet\"\n  href=\"https://cdn.jsdelivr.net/npm/docsearch.js@2/dist/cdn/docsearch.min.css\"\n/>\n<style>\n  .algolia-search-cont {\n    margin-top: -10px;\n  }\n  .algolia-search-wrap {\n    display: flex;\n    align-items: center;\n  }\n  .algolia-search-cont .search-icon {\n    margin-right: 10px;\n  }\n  .algolia-search-cont .algolia-search-box {\n    border: none;\n    background-image: none;\n    background-color: transparent;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n    box-shadow: none;\n    outline: none;\n  }\n</style>\n<div class=\"algolia-search-cont\">\n  <div class=\"algolia-search-wrap form-control\">\n    <span\n      class=\"glyphicon glyphicon-search search-icon\"\n      aria-hidden=\"true\"\n    ></span>\n    <input\n      autocapitalize=\"off\"\n      autocomplete=\"off\"\n      autocorrect=\"off\"\n      placeholder=\"Search...\"\n      role=\"textbox\"\n      spellcheck=\"false\"\n      type=\"text\"\n      value=\"\"\n      class=\"algolia-search-box\"\n      id=\"algolia-search-box\"\n    />\n  </div>\n</div>\n\n<!-- at the end of the BODY -->\n<script\n  type=\"text/javascript\"\n  src=\"https://cdn.jsdelivr.net/npm/docsearch.js@2/dist/cdn/docsearch.min.js\"\n></script>\n<script type=\"text/javascript\">\n  docsearch({\n    apiKey: \"6a63d4bcf6378ddf3f8724185ddcf626\",\n    indexName: \"ballerina\",\n    inputSelector: \"#algolia-search-box\",\n    debug: false, // Set debug to true if you want to inspect the dropdown\n  });\n</script>\n\n                                <!-- <form class=\"cSearch-form-inline\"><input id=\"searchTxt\" class=\"form-control-field\"\n                                        type=\"search\" placeholder=\"Search\" aria-label=\"Search\"><a id=\"searchBtn\"\n                                        href=\"#\" class=\"cSearchButton\"><img src=\"/img/search.svg\" /></a></form> -->\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n        </div>\n    </div>\n</div>\n\n      <div class=\"row cBallerina-io-Gray-row\">\n         <div class=\"container\">\n            <div class=\"row\">\n               <div class=\"col-xs-12 col-sm-12 col-md-3 col-lg-3 cBallerina-io-Home-Middle-col\">\n                  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!-- Then we build the nav bar. -->\n<nav class=\"cLeftNavContainer\">\n   <ul class=\"cMainLeftNav\">\n      \n      \n      <!-- We have to declare it 'null' to ensure it doesn't propagate. -->\n      <!--  -->\n      \n      \n      \n      <li class=\"sub-menu cTopicURL\">\n         <div class=\"cLeftMenuLink cTopiAtag\">Setting up Ballerina</div>\n         <ul class=\"sub-ul\">\n            \n            <!--  -->\n            \n            \n            \n            <!-- <li  ><a href=\"/1.2/learn/installing-ballerina/\">- Installing Ballerina</a></li> -->\n            <li><a href=\"/1.2/learn/installing-ballerina/\">Installing Ballerina</a></li>\n            \n            <!-- <li  ><a href=\"/1.2/learn/setting-up-visual-studio-code/\">- Setting up Visual Studio Code</a></li> -->\n            <li><a href=\"/1.2/learn/setting-up-visual-studio-code/\">Setting up Visual Studio Code</a></li>\n            \n            <!-- <li  ><a href=\"/1.2/learn/setting-up-intellij-idea/\">- Setting up IntelliJ IDEA</a></li> -->\n            <li><a href=\"/1.2/learn/setting-up-intellij-idea/\">Setting up IntelliJ IDEA</a></li>\n            \n         </ul>\n      </li>\n      \n      \n      \n      <!-- We have to declare it 'null' to ensure it doesn't propagate. -->\n      <!--  -->\n      \n      \n      \n      <li class=\"sub-menu cTopicURL\">\n         <div class=\"cLeftMenuLink cTopiAtag\">Ballerina CLI Tools</div>\n         <ul class=\"sub-ul\">\n            \n            <!--  -->\n            \n            \n            \n            <!-- <li  ><a href=\"/1.2/learn/using-the-cli-tools/\">- Using the CLI Tools</a></li> -->\n            <li><a href=\"/1.2/learn/using-the-cli-tools/\">Using the CLI Tools</a></li>\n            \n            <!-- <li  ><a href=\"/1.2/learn/keeping-ballerina-up-to-date\">- Keeping Ballerina Up To Date</a></li> -->\n            <li><a href=\"/1.2/learn/keeping-ballerina-up-to-date\">Keeping Ballerina Up To Date</a></li>\n            \n            <!-- <li  ><a href=\"/1.2/learn/using-the-openapi-tools/\">- Using the OpenAPI Tools</a></li> -->\n            <li><a href=\"/1.2/learn/using-the-openapi-tools/\">Using the OpenAPI Tools</a></li>\n            \n            <!-- <li  ><a href=\"/1.2/learn/generating-ballerina-code-for-protocol-buffer-definitions\">- Generating Ballerina Code for Protocol Buffer Definitions</a></li> -->\n            <li><a href=\"/1.2/learn/generating-ballerina-code-for-protocol-buffer-definitions\">Generating Ballerina Code for Protocol Buffer Definitions</a></li>\n            \n         </ul>\n      </li>\n      \n      \n      \n      <!-- We have to declare it 'null' to ensure it doesn't propagate. -->\n      <!--  -->\n      \n      \n      \n      <li class=\"sub-menu cTopicURL\">\n         <div class=\"cLeftMenuLink cTopiAtag\">Code Organization</div>\n         <ul class=\"sub-ul\">\n            \n            <!--  -->\n            \n            \n            \n            <!-- <li  ><a href=\"/1.2/learn/structuring-ballerina-code/\">- Structuring Ballerina Code</a></li> -->\n            <li><a href=\"/1.2/learn/structuring-ballerina-code/\">Structuring Ballerina Code</a></li>\n            \n            <!-- <li  ><a href=\"/1.2/learn/documenting-ballerina-code/\">- Documenting Ballerina Code</a></li> -->\n            <li><a href=\"/1.2/learn/documenting-ballerina-code/\">Documenting Ballerina Code</a></li>\n            \n            <!-- <li  ><a href=\"/1.2/learn/coding-conventions/\">- Coding Conventions</a></li> -->\n            <li><a href=\"/1.2/learn/coding-conventions/\">Coding Conventions</a></li>\n            \n            <!-- <li  ><a href=\"/1.2/learn/running-ballerina-code/\">- Running Ballerina Code</a></li> -->\n            <li><a href=\"/1.2/learn/running-ballerina-code/\">Running Ballerina Code</a></li>\n            \n            <!-- <li  ><a href=\"/1.2/learn/publishing-modules-to-ballerina-central\">- Publishing Modules to Ballerina Central</a></li> -->\n            <li><a href=\"/1.2/learn/publishing-modules-to-ballerina-central\">Publishing Modules to Ballerina Central</a></li>\n            \n         </ul>\n      </li>\n      \n      \n      \n      <!-- We have to declare it 'null' to ensure it doesn't propagate. -->\n      <!--  -->\n      \n      \n      \n      <li class=\"sub-menu cTopicURL\">\n         <div class=\"cLeftMenuLink cTopiAtag\">Deployment</div>\n         <ul class=\"sub-ul\">\n            \n            <!--  -->\n            \n            \n            \n            <!-- <li  ><a href=\"/1.2/learn/deployment/docker/\">- Docker</a></li> -->\n            <li><a href=\"/1.2/learn/deployment/docker/\">Docker</a></li>\n            \n            <!-- <li  ><a href=\"/1.2/learn/deployment/kubernetes/\">- Kubernetes</a></li> -->\n            <li><a href=\"/1.2/learn/deployment/kubernetes/\">Kubernetes</a></li>\n            \n            <!-- <li  ><a href=\"/1.2/learn/deployment/aws-lambda/\">- AWS Lambda</a></li> -->\n            <li><a href=\"/1.2/learn/deployment/aws-lambda/\">AWS Lambda</a></li>\n            \n            <!-- <li  ><a href=\"/1.2/learn/deployment/azure-functions/\">- Azure Functions</a></li> -->\n            <li><a href=\"/1.2/learn/deployment/azure-functions/\">Azure Functions</a></li>\n            \n         </ul>\n      </li>\n      \n      \n      \n      <!-- We have to declare it 'null' to ensure it doesn't propagate. -->\n      <!--  -->\n      \n      \n      \n      <li class=\"sub-menu cTopicURL\">\n         <div class=\"cLeftMenuLink cTopiAtag\">Observability</div>\n         <ul class=\"sub-ul\">\n            \n            <!--  -->\n            \n            \n            \n            <!-- <li  ><a href=\"/1.2/learn/observing-ballerina-code\">- Observing Ballerina Code</a></li> -->\n            <li><a href=\"/1.2/learn/observing-ballerina-code\">Observing Ballerina Code</a></li>\n            \n         </ul>\n      </li>\n      \n      \n      \n      <!-- We have to declare it 'null' to ensure it doesn't propagate. -->\n      <!--  -->\n      \n      \n      \n      <li class=\"sub-menu cTopicURL\">\n         <div class=\"cLeftMenuLink cTopiAtag\">Interoperability</div>\n         <ul class=\"sub-ul\">\n            \n            <!--  -->\n            \n            \n            \n            <!-- <li  ><a href=\"/1.2/learn/calling-java-code-from-ballerina/\">- Calling Java Code from Ballerina</a></li> -->\n            <li><a href=\"/1.2/learn/calling-java-code-from-ballerina/\">Calling Java Code from Ballerina</a></li>\n            \n         </ul>\n      </li>\n      \n      \n      \n      <!-- We have to declare it 'null' to ensure it doesn't propagate. -->\n      <!--  -->\n      \n      \n      \n      <li class=\"sub-menu cTopicURL\">\n         <div class=\"cLeftMenuLink cTopiAtag\">Security</div>\n         <ul class=\"sub-ul\">\n            \n            <!--  -->\n            \n            \n            \n            <!-- <li  ><a href=\"/1.2/learn/writing-secure-ballerina-code\">- Writing Secure Ballerina Code</a></li> -->\n            <li><a href=\"/1.2/learn/writing-secure-ballerina-code\">Writing Secure Ballerina Code</a></li>\n            \n         </ul>\n      </li>\n      \n      \n      \n      <!-- We have to declare it 'null' to ensure it doesn't propagate. -->\n      <!--  -->\n      \n      \n      \n      <li class=\"sub-menu cTopicURL\">\n         <div class=\"cLeftMenuLink cTopiAtag\">Testing Ballerina Code</div>\n         <ul class=\"sub-ul\">\n            \n            <!--  -->\n            \n            \n            \n            <!-- <li  ><a href=\"/1.2/learn/testing-ballerina-code/testing-quick-start\">- Quick Start</a></li> -->\n            <li><a href=\"/1.2/learn/testing-ballerina-code/testing-quick-start\">Quick Start</a></li>\n            \n            <!-- <li  ><a href=\"/1.2/learn/testing-ballerina-code/writing-tests\">- Writing Tests</a></li> -->\n            <li class=\"current-sub\"><a href=\"/1.2/learn/testing-ballerina-code/writing-tests\">Writing Tests</a></li>\n            \n            <!-- <li  ><a href=\"/1.2/learn/testing-ballerina-code/mocking\">- Mocking</a></li> -->\n            <li><a href=\"/1.2/learn/testing-ballerina-code/mocking\">Mocking</a></li>\n            \n            <!-- <li  ><a href=\"/1.2/learn/testing-ballerina-code/executing-tests\">- Executing Tests</a></li> -->\n            <li><a href=\"/1.2/learn/testing-ballerina-code/executing-tests\">Executing Tests</a></li>\n            \n         </ul>\n      </li>\n      \n      \n      \n      <!-- We have to declare it 'null' to ensure it doesn't propagate. -->\n      <!--  -->\n      \n      \n      \n      <li class=\"sub-menu cTopicURL\">\n         <div class=\"cLeftMenuLink cTopiAtag\">Extending Ballerina</div>\n         <ul class=\"sub-ul\">\n            \n            <!--  -->\n            \n            \n            \n            <!-- <li  ><a href=\"/1.2/learn/extending-with-compiler-extensions\">- Extending with Compiler Extensions</a></li> -->\n            <li><a href=\"/1.2/learn/extending-with-compiler-extensions\">Extending with Compiler Extensions</a></li>\n            \n         </ul>\n      </li>\n      \n      \n   </ul>\n</nav>\n\n               </div>\n               <div class=\"col-xs-12 col-sm-12 col-md-9 col-lg-9 cBallerina-io-Home-Middle-col\">\n                  <div class=\"col-xs-12 col-sm-12\" style=\"padding: 0;\">\n                     <div class=\"col-md-12 col-lg-12 cBallerina-io-breadcrumbs\">\n                        <nav class=\"breadcrumbs bootstrap hidden-sm-down\"\n  >\n  <ul id=\"breadcrumb-list\" class=\" cBalleinaBreadcrumbs list-unstyled  wy-breadcrumbs\" vocab=\"http://schema.org/\"\n    typeof=\"BreadcrumbList\">\n\n\n    \n    <li><a href=\"/\">Home</a></li>\n    \n    \n    <li>/</li>\n    <li><a\n        href=\"/1.2/\">1.2</a>\n    </li>\n    \n    \n    \n    <li>/</li>\n    <li><a\n        href=\"/1.2/learn/\">Learn</a>\n    </li>\n    \n    \n    \n    <li>/</li>\n    <li><a\n        href=\"/1.2/learn/testing-ballerina-code/\">Testing ballerina code</a>\n    </li>\n    \n    \n    \n    <li>/</li> Writing Tests\n    \n    \n\n  </ul>\n</nav>\n<style type=\"text/css\">\n  .cBalleinaBreadcrumbs li {\n    margin-right: 10px;\n  }\n</style>\n                        <div class=\"cVersionContainer\"></div>\n                     </div>\n                     <!-- <div class=\"col-md-12 col-lg-2 cBallerina-io-breadcrumbs cGitLink\">\n                        \n                     </div> -->\n                  </div>\n                  <div class=\"cBlallerina-io-docs-content-container cPositionRelative\">\n                     <div class=\"wy-nav-content\">\n                        <div class=\"rst-content\">\n                           <div role=\"main\">\n                              <div class=\"section\">\n\n\n                                 <div class=\"col-xs-11 col-md-11 col-lg-11 cNoPadding\">\n                                    <h1>Writing Tests</h1>\n                                 </div>\n                                 <!-- <div class=\"col-xs-1 col-md-1 col-lg-1 cNoPadding cGithubContainer\">\n                                    <a class=\"icon icon-github\" target=\"_blank\" href=\"https://www.github.com/ballerina-platform/ballerina-dev-website/blob/master/1.2/learn/testing-ballerina-code/writing-tests.md\"></a>\n                                 </div> -->\n                                 <div class=\"col-xs-12 col-md-12 col-lg-12 cNoPadding\">\n                                    <p>The sections below include information about writing tests in Ballerina.</p>\n                                    <div class=\"cBallerinaTocContainer\" id=\"table-of-content\">\n                                       <ul id=\"tree\">\n  <li><a href=\"#project-structure\">Project Structure</a></li>\n  <li><a href=\"#test-source-files\">Test Source Files</a></li>\n  <li><a href=\"#test-resources\">Test Resources</a></li>\n  <li><a href=\"#defining-a-test\">Defining a Test</a>\n    <ul>\n      <li><a href=\"#testconfig-\">@test:Config {}</a></li>\n    </ul>\n  </li>\n  <li><a href=\"#visibility-of-symbols\">Visibility of Symbols</a></li>\n  <li><a href=\"#using-assertions\">Using Assertions</a>\n    <ul>\n      <li><a href=\"#asserttrueboolean-expression-string-message\"><strong>assertTrue(boolean expression, string message)</strong></a></li>\n      <li><a href=\"#assertfalseboolean-expression-string-message\"><strong>assertFalse(boolean expression, string message)</strong></a></li>\n      <li><a href=\"#assertequalsany-actual-any-expected-string-message\"><strong>assertEquals(Any actual, Any expected, string message)</strong></a></li>\n      <li><a href=\"#assertnotequalsany-actual-any-expected-string-message\"><strong>assertNotEquals(Any actual, Any expected, string message)</strong></a></li>\n      <li><a href=\"#assertfailstring-message\"><strong>assertFail(string message)</strong></a></li>\n    </ul>\n  </li>\n  <li><a href=\"#setup-and-teardown\">Setup and Teardown</a>\n    <ul>\n      <li><a href=\"#testbeforesuite-\">@test:BeforeSuite {}</a></li>\n      <li><a href=\"#testbeforeeach-\">@test:BeforeEach {}</a></li>\n      <li><a href=\"#testaftersuite-\">@test:AfterSuite {}</a></li>\n    </ul>\n  </li>\n  <li><a href=\"#test-configurations\">Test Configurations</a></li>\n  <li><a href=\"#whats-next\">What’s Next?</a></li>\n</ul>\n\n                                    </div>\n                                    <h2 id=\"project-structure\">Project Structure</h2>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>project-name/\n  Ballerina.toml\n    src/\n      module1/\n        main.bal\n        Module.md \n        [resources/]   \n        tests/       \t  # Module-specific tests\n          main_test.bal   # The test file for main.bal\n          [resources]\t  # Resources for the tests\n</code></pre></div></div>\n\n<h2 id=\"test-source-files\">Test Source Files</h2>\n\n<p>Unit tests bound to a module need to be placed in a sub folder called <strong><em>tests/</em></strong> within the module. In a standard\n Ballerina project, a module is mapped to a test suite. All tests within a module’s <em>tests/</em> subfolder are considered to be part of the same test suite.</p>\n\n<p>The test source files could have any name. The test functions are just Ballerina functions, which use a special annotation to mark the function as a test. Test functions must be specified with the <code class=\"language-plaintext highlighter-rouge\">@test:Config {}</code> annotation and there is no restriction on the test function name.</p>\n\n<h2 id=\"test-resources\">Test Resources</h2>\n\n<p>The resources sub directory found within the <em>tests/</em> directory is meant to contain any files or resources that are exclusively required for testing. You can access the resource files either using the absolute path or using the path relative to the project root.</p>\n\n<h2 id=\"defining-a-test\">Defining a Test</h2>\n\n<p>The test module provides the necessary annotations to construct a test suite. Therefore, importing the test module is essential in order to write Ballerina tests.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>import ballerina/test;\n</code></pre></div></div>\n\n<p>Once the test module is imported, the following annotation can be used to write a test function.</p>\n\n<h3 id=\"testconfig-\">@test:Config {}</h3>\n\n<p>The function specified after the annotation is a test function. This annotation supports the following value fields.</p>\n\n<ul>\n  <li><strong><em>enable: {true|false}</em></strong> - Enable/disable the test. The default value is <code class=\"language-plaintext highlighter-rouge\">true</code>.</li>\n  <li><strong><em>before: “&lt;function name&gt;“</em></strong> - Name of the function to be run just before the test is run. The default value is <code class=\"language-plaintext highlighter-rouge\">none</code>.</li>\n  <li><strong><em>after: “&lt;function name&gt;“</em></strong> - Name of the function to be run just after the test is run.</li>\n  <li><strong><em>dependsOn: [“&lt;function names&gt;”, …]</em></strong> - List of function names on which the test function depends. The\n order in\n which the comma-separated list appears has no prominence. In case there needs to be an order, define a sequence of test functions with one pointing to another based on the dependencies using the <code class=\"language-plaintext highlighter-rouge\">dependsOn</code> parameter in each one’s config to control the order of the test execution.</li>\n  <li><strong><em>dataProvider: “&lt;function name&gt;”</em></strong> - Specifies the name of the function that will be used to provide the value\n sets to execute the test against.</li>\n  <li><strong><em>groups: [“&lt;test group name”, …]</em></strong> - A comma-separated list of test group names (one or more) to which this test\n belongs.</li>\n</ul>\n\n<p><strong><em>Example:</em></strong></p>\n\n<pre><code class=\"language-ballerina\">import ballerina/io;\nimport ballerina/test;\n\nfunction beforeFunc() {\n    // This is the function, which will be executed before the Test functions.\n}\n\nfunction afterFunc() {\n    // This is the function, which will be executed after the Test functions.\n}\n\n// This test function will not be executed.\n@test:Config {\n    enable: false\n}\nfunction testFunction1() {\n    io:println(\"I'm in test function 1!\");\n    test:assertTrue(true, msg = \"Failed!\");\n}\n\n// This test function depends on the `testFunction3`.\n@test:Config{  \n    before: \"beforeFunc\",\n    after: \"afterFunc\",\n    dependsOn: [\"testFunction3\"],\n    dataProvider:\"dataGen\",\n    groups: [\"g1\"]\n}\nfunction testFunction2 (int value) returns error? {\n    test:assertEquals(value, 1, msg = \"value is not correct\");\n}\n\n\nfunction dataGen() returns (int[][]) {\n    return [[1]];\n}\n\n// This is a random test function. This will randomly execute without depending on the other functions.\n// However, note that `testFunction3` depends on this.\n@test:Config {\n    groups: [\"g1\", \"g2\"]\n}\nfunction testFunction3() {\n    io:println(\"I'm in test function 3!\");\n    test:assertTrue(true, msg = \"Failed!\");\n}\n</code></pre>\n\n<h2 id=\"visibility-of-symbols\">Visibility of Symbols</h2>\n\n<p>The functions, services, and the global variables defined in a module are accessible from within the test files. Hence, you cannot redefine a symbol in the test files if it is already declared in the module.</p>\n\n<p>On the other hand, symbols defined in the test files will not be visible inside the module source files. When running tests, the symbols in the module source files will be initialized first followed by the ones in the test files.</p>\n\n<h2 id=\"using-assertions\">Using Assertions</h2>\n\n<p>The Ballerina test framework supports the following assertions, which help to verify the expected behaviour of a piece of code. These assertions can be used to decide if the test is passing or failing based on the condition.</p>\n\n<h3 id=\"asserttrueboolean-expression-string-message\"><strong>assertTrue(boolean expression, string message)</strong></h3>\n\n<p>Asserts that the expression is true with an optional message.</p>\n\n<p><strong><em>Example:</em></strong></p>\n<pre><code class=\"language-ballerina\">import ballerina/test;\n\n@test:Config {}\nfunction testAssertTrue() {\n    boolean value = false;\n    test:assertTrue(value, msg = \"AssertTrue failed\");\n}\n</code></pre>\n\n<h3 id=\"assertfalseboolean-expression-string-message\"><strong>assertFalse(boolean expression, string message)</strong></h3>\n\n<p>Asserts that the expression is false with an optional message.</p>\n\n<p><strong><em>Example:</em></strong></p>\n<pre><code class=\"language-ballerina\">import ballerina/test;\n\n@test:Config {}\nfunction testAssertFalse() {\n    boolean value = false;\n    test:assertFalse(value, msg = \"AssertFalse failed\");\n}\n</code></pre>\n\n<h3 id=\"assertequalsany-actual-any-expected-string-message\"><strong>assertEquals(Any actual, Any expected, string message)</strong></h3>\n\n<p>Asserts that the actual is equal to the expected with an optional message.</p>\n\n<p><strong><em>Example:</em></strong></p>\n<pre><code class=\"language-ballerina\">import ballerina/test;\n\n@test:Config {}\nfunction testAssertIntEquals() {\n\n    int answer = 0;\n    int a = 5;\n    int b = 3;\n    answer = intAdd(a, b);\n    test:assertEquals(answer, 8, msg = \"IntAdd function failed\");\n}\n\nfunction intAdd(int a, int b) returns (int) {\n    return (a + b);\n}\n</code></pre>\n\n<h3 id=\"assertnotequalsany-actual-any-expected-string-message\"><strong>assertNotEquals(Any actual, Any expected, string message)</strong></h3>\n\n<p>Asserts that the actual is not equal to the expected with an optional message.</p>\n\n<p><strong><em>Example:</em></strong></p>\n\n<pre><code class=\"language-ballerina\">import ballerina/test;\n\n@test:Config {}\nfunction testAssertIntEquals() {\n\n    int answer = 0;\n    int a = 5;\n    int b = 3;\n    answer = intAdd(a, b);\n    test:assertNotEquals(answer, 8, msg = \"Matches\");\n}\n\nfunction intAdd(int a, int b) returns (int) {\n    return (a + b);\n}\n</code></pre>\n\n<h3 id=\"assertfailstring-message\"><strong>assertFail(string message)</strong></h3>\n\n<p>Fails the test. This is useful to fail a test based on a check for a condition while it is in execution.</p>\n\n<p><strong><em>Example:</em></strong></p>\n\n<pre><code class=\"language-ballerina\">import ballerina/test;\n\n@test:Config {}\nfunction foo() {\n    error? e = trap bar(); // Expecting `bar()` to panic\n    if (e is error) {\n        test:assertEquals(e.reason(), \"Invalid Operation\", msg = \"Invalid error reason\"); // Some other assertions\n    } else {\n        test:assertFail(msg = \"Expected an error\");\n    }\n}\n</code></pre>\n\n<h2 id=\"setup-and-teardown\">Setup and Teardown</h2>\n\n<p>The following test annotations can be used for setup and teardown instructions. These annotations enable executing instructions at different levels.</p>\n\n<h3 id=\"testbeforesuite-\">@test:BeforeSuite {}</h3>\n\n<p>The function specified after the annotation will be run once before any of the tests in the test suite is run. This can be used for initializing the test suite level aspects.</p>\n\n<p><strong><em>Example:</em></strong></p>\n\n<pre><code class=\"language-ballerina\">import ballerina/io;\nimport ballerina/test;\n\n// The `BeforeSuite` function is executed before running all the test functions in this module. \n@test:BeforeSuite\nfunction beforeFunc() {\n    io:println(\"I'm the before suite function!\");\n}\n\n// Test function.\n@test:Config {}\nfunction testFunction1() {\n    io:println(\"I'm in test function 1!\");\n    test:assertTrue(true, msg = \"Failed\");\n}\n\n// Test function.\n@test:Config {}\nfunction testFunction2() {\n    io:println(\"I'm in test function 2!\");\n    test:assertTrue(true, msg = \"Failed\");\n}\n</code></pre>\n\n<h3 id=\"testbeforeeach-\">@test:BeforeEach {}</h3>\n\n<p>The function specified after the annotation will be run before every test within the test suite is run. This can be used for initializing test-level aspects repeatedly before every test function.</p>\n\n<p><strong><em>Example:</em></strong></p>\n\n<pre><code class=\"language-ballerina\">import ballerina/io;\nimport ballerina/test;\n\n// The `BeforeEach` function, which is executed before each test function\n@test:BeforeEach\nfunction beforeFunc() {\n    io:println(\"I'm the before function!\");\n}\n\n// Test function.\n@test:Config {}\nfunction testFunction1() {\n    io:println(\"I'm in test function 1!\");\n    test:assertTrue(true, msg = \"Failed!\");\n}\n\n// Test function.\n@test:Config {}\nfunction testFunction2() {\n    io:println(\"I'm in test function 2!\");\n    test:assertTrue(true, msg = \"Failed!\");\n}\n\n// Test function.\n@test:Config {}\nfunction testFunction3() {\n    io:println(\"I'm in test function 3!\");\n    test:assertTrue(true, msg = \"Failed!\");\n}\n</code></pre>\n\n<h3 id=\"testaftersuite-\">@test:AfterSuite {}</h3>\n\n<p>The function specified after the annotation will be run once after all of the tests in the test suite is run. This can be used for cleaning up the test suite level aspects. The test suite covers tests related to a module.</p>\n\n<p><strong><em>Example:</em></strong></p>\n\n<pre><code class=\"language-ballerina\">import ballerina/io;\nimport ballerina/test;\n\n// Test function.\n@test:Config {}\nfunction testFunction1() {\n    io:println(\"I'm in test function 1!\");\n    test:assertTrue(true, msg = \"Failed\");\n}\n\n// The `AfterSuite` function is executed after all the test functions in this module.\n@test:AfterSuite {}\nfunction afterFunc() {\n    io:println(\"I'm the after suite function!\");\n}\n</code></pre>\n\n<h2 id=\"test-configurations\">Test Configurations</h2>\n\n<p>Configurations for testing can be provided using the Config API. For information on using the config library, see\n <a href=\"/1.2/learn/api-docs/ballerina/config/index.html\">Config Module</a>.</p>\n\n<h2 id=\"whats-next\">What’s Next?</h2>\n\n<p>As an integration language, you will be using lots of connectors when writing Ballerina code. Setting up mock\n backends for these external endpoints will be a tedious task (e.g., email client, Salesforce client).\n The mocking support in Ballerina will allow you to unit test your code without needing to set up mock backends by\n allowing you to control what the client objects return without actually sending requests to backends.</p>\n\n<p>To learn about the mocking API, see <a href=\"/1.2/learn/testing-ballerina-code/mocking\">Mocking</a>.</p>\n\n   \n                                 </div>\n\n                                \n\n\n                         \n\n\n\n                              </div>\n                           </div>\n                        </div>\n                     </div>\n                     <a class=\"cTopLink\" href=\"#top\">Back to Top &#x2934;</a>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n      <div id=\"iBallerinaFooter\" class=\"row cBallerina-io-White-row\">\n    <div class=\"container\">\n    <div class=\"col-xs-12 col-sm-12 col-md-3 col-lg-3 cBallerina-io-left-col cBallerinaFooterLinks\">\n        <ul>\n            <li><a class=\"cBioFooterLink\" href=\"/downloads\">DOWNLOAD</a></li>\n            <!--<li><a class=\"cBioFooterLink\" href=\"/community/#report-issues\">REPORT ISSUES</a></li>-->\n            <li data-toggle=\"modal\" data-target=\"#reportissues\" data-whatever=\"@mdo\"><a href=\"/community/#report-issues\">REPORT ISSUES</a></li>\n            <li><a class=\"cBioFooterLink\" href=\"https://github.com/ballerina-lang/ballerina/blob/master/LICENSE\">CODE LICENSE</a></li>\n            <li><a class=\"cBioFooterLink\" href=\"/license-of-site\">SITE LICENSE</a></li>\n            <li><a class=\"cBioFooterLink\" href=\"/terms-of-service\">TERMS OF SERVICE</a></li>\n            <li><a class=\"cBioFooterLink\" href=\"/privacy-policy\">PRIVACY POLICY</a></li>\n            <li><a class=\"cBioFooterLink\" href=\"/trademark-usage-policy/\">TRADEMARK USAGE POLICY</a></li>\n            </ul>\n        </div>\n    <div class=\"col-xs-12 col-sm-12 col-md-3 col-lg-3 cBallerina-io-middle-col cBallerinaFooterSignUp\">\n        <div class=\"cSocialmedia\">\n            <ul>\n                <li>\n                    <a class=\"cBioFooterLink\" href=\"https://github.com/ballerina-platform\" target=\"_blank\"><img src=\"/img/github.svg\"/></a>\n                    </li>\n                <li><a class=\"cBioFooterLink\" href=\"https://stackoverflow.com/questions/tagged/ballerina\" target=\"_blank\"><img src=\"/img/stackoverflow.svg\"/></a></li>\n                <li><a class=\"cBioFooterLink\" href=\"https://twitter.com/ballerinalang\" target=\"_blank\"><img src=\"/img/twitter.svg\"/></a></li>\n                <li><a class=\"cBioFooterLink\" href=\"/community/slack/\"><img src=\"/img/slack.svg\"/></a></li>\n                <li><a class=\"cBioFooterLink\" href=\"https://www.youtube.com/c/Ballerinalang\"><img style=\"width: 15px;\" src=\"/img/youtube-icon.svg\"/></a></li>\n                </ul>\n            <div class=\"pdframe\"></div>\n            </div>\n\n\n           <a class=\"cNLButton\" href=\"/community/#subscribe-to-the-newsletter\">Subscribe to the newsletter</a> \n\n           <div class=\"modal fade\" id=\"reportissues\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"reportissueslabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog\" role=\"document\">\n              <div class=\"modal-content\" style=\"padding:15px;border-radius:0px;\">\n                <div class=\"modal-header\">\n                  <h3 class=\"modal-title\" style=\"color: #20b6b0;\">Report Issues</h3>\n                  <p style=\"padding: 10px 0px ;\">Report issues in the GitHub repositories of the areas and components listed below.\n                  </p>\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <div class=\"modal-body\" style=\"background-color: #fff; font-size: 20; color: #465867;font-size: 20px;\">\n                  <ul class=\"b\">\n                    <li><a class=\"linkText\" href=\"https://github.com/ballerina-platform/ballerina-lang/issues/new/choose\" target=\"_blank\"> Compiler, runtime, or tooling</a></li>\n                    <li><a class=\"linkText\" href=\"https://github.com/ballerina-platform/ballerina-standard-library/issues\" target=\"_blank\"> Standard Library</a></li>\n                    <li><a class=\"linkText\" href=\"https://github.com/ballerina-platform/ballerina-standard-library/issues/new/choose\" target=\"_blank\">  Language specification</a></li>\n                    <li><a class=\"linkText\" href=\"https://github.com/ballerina-platform/ballerina-dev-website/issues/new/choose\" target=\"_blank\">  Website</a></li>\n                    <li><a class=\"linkText\" href=\"mailto:security@ballerina.io\" target=\"_blank\">Security</a> <span style=\"font-size: 16px;\">(For details, see the</span> <a class=\"linkText\" href=\"/security\" target=\"_blank\">security policy</a>.)</li>\n                  </ul>  \n                \n                </div>\n                <div class=\"modal-footer\">\n                 \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n    <div class=\"col-xs-12 col-sm-10 col-md-6 col-lg-6 cBallerina-io-right-col\">\n        <p>In the creation of Ballerina, we were inspired by so many technologies. Thank you to all that have come before us (and forgive us if we missed one): Java, Go, C, C++, D, Rust, Haskell, Kotlin, Dart, TypeScript, JavaScript, Python, Perl, Flow, Swift, Elm, RelaxNG, NPM, Crates, Maven, Gradle, Kubernetes, Docker, Envoy, Markdown, GitHub and WSO2.</p></div>\n    </div>\n</div>\n\n<div class=\"cCookie-Policy\">\n    <div class=\"container\">\n        <div class=\"col-xs-12 col-sm-12 col-lg-12\">\n            <!-- <div class=\"closebuttoon\"><img src=\"/img/close-w.svg\"/></div> -->\n<h4>Cookie policy</h4>\n<p>This website uses cookies so that we can provide you with the best user experience. Read our <a href=\"https://ballerina.io/cookie-policy/\">Cookie policy</a></a> to find out more.</p>\n<p>If you wish to disable cookies you can do so from your browser. </p>\n  \n<!-- <a href=\"https://ballerina.io/cookie-policy/\"></a> -->\n<a class=\"cIUnderstand \">I understand </a>\n        </div>\n    </div>\n</div>\n\n\n\n\n\n<script src=\"/js/prism.js\"></script>\n<!-- <script src=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.14.0/components/prism-core.min.js\"></script> -->\n<script src=\"/js/prism-ballerina.js\"></script>\n\n\n\n<script>\n\n$(\".cIUnderstand \").click(function() {\n    $(\".cCookie-Policy\").addClass('cHide-Policy');\n   \n    \n});\n\n\n\n</script>\n\n\n<!-- \n<script>\n    (function () {\n\nif (typeof self === 'undefined' || !self.Prism || !self.document) {\n    return;\n}\n\n/**\n * Plugin name which is used as a class name for <pre> which is activating the plugin\n * @type {String}\n */\nvar PLUGIN_NAME = 'line-numbers';\n\n/**\n * Regular expression used for determining line breaks\n * @type {RegExp}\n */\nvar NEW_LINE_EXP = /\\n(?!$)/g;\n\n/**\n * Resizes line numbers spans according to height of line of code\n * @param {Element} element <pre> element\n */\nvar _resizeElement = function (element) {\n    var codeStyles = getStyles(element);\n    var whiteSpace = codeStyles['white-space'];\n\n    if (whiteSpace === 'pre-wrap' || whiteSpace === 'pre-line') {\n        var codeElement = element.querySelector('code');\n        var lineNumbersWrapper = element.querySelector('.line-numbers-rows');\n        if (!codeElement || !lineNumbersWrapper) {\n            return;\n        }\n        var lineNumberSizer = element.querySelector('.line-numbers-sizer');\n        var codeLines = codeElement.textContent.split(NEW_LINE_EXP);\n\n        if (!lineNumberSizer) {\n            lineNumberSizer = document.createElement('span');\n            lineNumberSizer.className = 'line-numbers-sizer';\n\n            codeElement.appendChild(lineNumberSizer);\n        }\n\n        lineNumberSizer.style.display = 'block';\n\n        codeLines.forEach(function (line, lineNumber) {\n            lineNumberSizer.textContent = line || '\\n';\n            var lineSize = lineNumberSizer.getBoundingClientRect().height;\n            lineNumbersWrapper.children[lineNumber].style.height = lineSize + 'px';\n        });\n\n        lineNumberSizer.textContent = '';\n        lineNumberSizer.style.display = 'none';\n    }\n};\n\n/**\n * Returns style declarations for the element\n * @param {Element} element\n */\nvar getStyles = function (element) {\n    if (!element) {\n        return null;\n    }\n\n    return window.getComputedStyle ? getComputedStyle(element) : (element.currentStyle || null);\n};\n\nwindow.addEventListener('resize', function () {\n    Array.prototype.forEach.call(document.querySelectorAll('pre.' + PLUGIN_NAME), _resizeElement);\n});\n\nPrism.hooks.add('complete', function (env) {\n    if (!env.code) {\n        return;\n    }\n\n    var code = env.element;\n    var pre = code.parentNode;\n\n    // works only for <code> wrapped inside <pre> (not inline)\n    if (!pre || !/pre/i.test(pre.nodeName)) {\n        return;\n    }\n\n    // Abort if line numbers already exists\n    if (code.querySelector('.line-numbers-rows')) {\n        return;\n    }\n\n    var addLineNumbers = false;\n    var lineNumbersRegex = /(?:^|\\s)line-numbers(?:\\s|$)/;\n\n    for (var element = code; element; element = element.parentNode) {\n        if (lineNumbersRegex.test(element.className)) {\n            addLineNumbers = true;\n            break;\n        }\n    }\n\n    // only add line numbers if <code> or one of its ancestors has the `line-numbers` class\n    if (!addLineNumbers) {\n        return;\n    }\n\n    // Remove the class 'line-numbers' from the <code>\n    code.className = code.className.replace(lineNumbersRegex, ' ');\n    // Add the class 'line-numbers' to the <pre>\n    if (!lineNumbersRegex.test(pre.className)) {\n        pre.className += ' line-numbers';\n    }\n\n    var match = env.code.match(NEW_LINE_EXP);\n    var linesNum = match ? match.length + 1 : 1;\n    var lineNumbersWrapper;\n\n    var lines = new Array(linesNum + 1).join('<span></span>');\n\n    lineNumbersWrapper = document.createElement('span');\n    lineNumbersWrapper.setAttribute('aria-hidden', 'true');\n    lineNumbersWrapper.className = 'line-numbers-rows';\n    lineNumbersWrapper.innerHTML = lines;\n\n    if (pre.hasAttribute('data-start')) {\n        pre.style.counterReset = 'linenumber ' + (parseInt(pre.getAttribute('data-start'), 10) - 1);\n    }\n\n    env.element.appendChild(lineNumbersWrapper);\n\n    _resizeElement(pre);\n\n    Prism.hooks.run('line-numbers', env);\n});\n\nPrism.hooks.add('line-numbers', function (env) {\n    env.plugins = env.plugins || {};\n    env.plugins.lineNumbers = true;\n});\n\n/**\n * Global exports\n */\nPrism.plugins.lineNumbers = {\n    /**\n     * Returns the node of the given line number in the given element.\n     * @param {Element} element A `<pre>` element with line numbers.\n     * @param {Number} number\n     * @returns {Element | undefined}\n     */\n    getLine: function (element, number) {\n        if (element.tagName !== 'PRE' || !element.classList.contains(PLUGIN_NAME)) {\n            return;\n        }\n\n        var lineNumberRows = element.querySelector('.line-numbers-rows');\n        var lineNumberStart = parseInt(element.getAttribute('data-start'), 10) || 1;\n        var lineNumberEnd = lineNumberStart + (lineNumberRows.children.length - 1);\n\n        if (number < lineNumberStart) {\n            number = lineNumberStart;\n        }\n        if (number > lineNumberEnd) {\n            number = lineNumberEnd;\n        }\n\n        var lineIndex = number - lineNumberStart;\n\n        return lineNumberRows.children[lineIndex];\n    },\n    /**\n     * Resizes the line numbers of the given element.\n     *\n     * This function will not add line numbers. It will only resize existing ones.\n     * @param {Element} element A `<pre>` element with line numbers.\n     * @returns {void}\n     */\n    resize: function (element) {\n        _resizeElement(element);\n    }\n};\n\n}());\n</script> -->\n\n<!-- \n<style>\n    pre[class*=\"language-\"].line-numbers {\n\tposition: relative;\n\tpadding-left: 3.8em;\n\tcounter-reset: linenumber;\n}\n\npre[class*=\"language-\"].line-numbers > code {\n\tposition: relative;\n\twhite-space: inherit;\n}\n\n.line-numbers .line-numbers-rows {\n\tposition: absolute;\n\tpointer-events: none;\n\ttop: 0;\n\tfont-size: 100%;\n\tleft: -3.8em;\n\twidth: 3em; /* works for line-numbers below 1000 lines */\n\tletter-spacing: -1px;\n\tborder-right: 1px solid #999;\n\n\t-webkit-user-select: none;\n\t-moz-user-select: none;\n\t-ms-user-select: none;\n\tuser-select: none;\n\n}\n\n\t.line-numbers-rows > span {\n\t\tdisplay: block;\n\t\tcounter-increment: linenumber;\n\t}\n\n\t\t.line-numbers-rows > span:before {\n\t\t\tcontent: counter(linenumber);\n\t\t\tcolor: #999;\n\t\t\tdisplay: block;\n\t\t\tpadding-right: 0.8em;\n\t\t\ttext-align: right;\n\t\t}\n</style> -->\n\n      <script src=\"/js/theme.js\"></script>\n      <script>\n         $(document).ready(function () {\n            var gitstar = '<iframe id=\"iGitStarIframe\" src=\"https://ghbtns.com/github-btn.html?user=ballerina-platform&repo=ballerina-lang&type=star&count=true&size=small\" frameborder=\"0\" scrolling=\"0\"></iframe>';\n            $('[data-button=\"iGitStarText\"]').replaceWith(gitstar);\n         \n            var gitwatch = '<iframe id=\"iGitWatchIframe\" src=\"https://ghbtns.com/github-btn.html?user=ballerina-platform&repo=ballerina-lang&type=watch&count=true&size=lsmalle&v=2\" frameborder=\"0\" scrolling=\"0\"></iframe>';\n            $('[data-button=\"iGitWatchText\"]').replaceWith(gitwatch);\n         \n         });\n         \n     </script>\n     <script src=\"/js/ballerina-leftnav.js\"></script>\n\n     <script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\n     <script src=\"/js/abixTreeList.min.js\"></script>\n     <script>\n         $(document).ready(function() {\n             $('#tree').abixTreeList();\n         });\n\n\n\n\n\n         $(window).scroll(function () {\n        var bodyclass = document.body;\n\n        if ($(this).scrollTop() > 200) {\n            $('.cTopLink').removeClass('dispalaynone');\n          \n        } else {\n            $('.cTopLink').addClass('dispalaynone');\n          \n        }\n\n   \n\n\n    });\n\n     </script>\n\n\n\n\n   </body>\n</html>\n\n","id":"index"},"__N_SSG":true}