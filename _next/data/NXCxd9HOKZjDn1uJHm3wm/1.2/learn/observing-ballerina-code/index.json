{"pageProps":{"frontmatter":{"redirect_from":["/1.2/learn/observing-ballerina-programs/observing-your-application-with-prometheus-grafana-and-jaeger/","/1.2/learn/observing-ballerina-programs/observing-your-application-with-prometheus-grafana-and-jaeger"]},"content":"\n<!DOCTYPE html>\n<html class=\"no-js\">\n   <head>\n      <meta charset=\"utf-8\">\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n<meta name=\"description\" content=\"See how Ballerina supports observability by exposing itself via metrics, tracing, and logs to external systems.\" />\n\n<meta name=\"author\" content=\"WSO2, Inc.\">\n\n<meta name=\"keywords\" content=\"ballerina, observability, metrics, tracing, logs\" />\n\n<link rel=\"shortcut icon\" href=\"/img/favicon.ico\">\n<title>Observing Ballerina Code</title>\n<!-- Global site tag (gtag.js) - Google Analytics -->\n<script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-92163714-2\"></script>\n<!--FB-->\n<meta property=\"og:type\" content=\"article\" />\n<meta property=\"og:title\" content=\"Ballerina - Observing Ballerina Code\" />\n\n<meta property=\"og:description\" content=\"See how Ballerina supports observability by exposing itself via metrics, tracing, and logs to external systems.\" />\n\n \n<meta property=\"og:image\" itemprop=\"image\" content=\"https://ballerina.io/img/ballerina-swan-lake-sm-banner-general.png\" />\n\n\n<!-- <meta name=\"twitter:image:width\" content=\"610\"> -->\n<!--LINKED IN  -->\n<meta property='og:title' content=\"Ballerina\"/>\n<meta property='og:image' content=\"https://ballerina.io/img/ballerina-swan-lake-sm-banner-general.png\n\"/>\n<meta property='og:description' itemprop=\"image\" content=\"See how Ballerina supports observability by exposing itself via metrics, tracing, and logs to external systems.\"/>\n\n<!--TWITTER-->\n<meta name=\"twitter:card\" content=\"summary\" />\n<meta name=\"twitter:site\" content=\"@ballerinalang\">\n<meta name=\"twitter:creator\" content=\"@ballerinalang\">\n<meta name=\"twitter:title\" content=\"Ballerina\"> \n<meta name=\"twitter:card\" content=\"summary_large_image\"> \n\n<meta property=\"twitter:description\" content=\"See how Ballerina supports observability by exposing itself via metrics, tracing, and logs to external systems.\" />\n\n<meta name=\"twitter:image\" content=\"https://ballerina.io/img/ballerina-swan-lake-sm-banner-general.png\n \">\n\n<meta property=\"twitter:text:description\" content=\"See how Ballerina supports observability by exposing itself via metrics, tracing, and logs to external systems.\" />\n\n<meta property='twitter:image' content=\"https://ballerina.io/img/ballerina-swan-lake-sm-banner-general.png\"/>\n\n\n<script>\n   window.dataLayer = window.dataLayer || [];\n   function gtag() {\n       dataLayer.push(arguments);\n   }\n   gtag('js', new Date());\n   gtag('config', 'UA-92163714-2');\n</script>\n<!-- Google Tag Manager -->\n<script>\n   (function(w, d, s, l, i) {\n       w[l] = w[l] || [];\n       w[l].push({\n           'gtm.start': new Date().getTime(),\n           event: 'gtm.js'\n       });\n       var f = d.getElementsByTagName(s)[0],\n           j = d.createElement(s),\n           dl = l != 'dataLayer' ? '&l=' + l : '';\n       j.async = true;\n       j.src =\n           'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n       f.parentNode.insertBefore(j, f);\n   })(window, document, 'script', 'dataLayer', 'GTM-PSL2TX4');\n</script>\n<!-- End Google Tag Manager -->\n<script src=\"/js/moment-2.22.0/moment.min.js\"></script>\n<script src=\"/js/latest-jquery.js\"></script>\n<script>\n   var base_url = \"\";\n</script>\n<link rel=\"stylesheet\" href=\"/css/latest-bootstrap.css\">\n<!-- Optional theme -->\n<link rel=\"stylesheet\" href=\"/css/latest-bootstrap-theme.css\">\n<!-- Latest compiled and minified JavaScript -->\n<script src=\"/js/latest-bootstrap.js\"></script>\n<!-- Fonts -->\n<link href=\"https://fonts.googleapis.com/css?family=Roboto:100,100i,300,300i,400,400i,500,500i,700,700i,900,900i&display=swap\" rel=\"stylesheet\">\n\n<!-- \n<link type=\"text/css\" rel=\"stylesheet\" href=\"https://use.typekit.net/son4ymv.css\"> -->\n\n\n\n\n<!-- <link rel=\"stylesheet\" href=\"./js/vs/editor/editor.main.css\">-->\n<!-- <link rel=\"stylesheet\" href=\"https://use.typekit.net/son4ymv.css\" /> -->\n<!-- <link rel=\"stylesheet\" href=\"/css/theme.css\" type=\"text/css\" />\n<link rel=\"stylesheet\" href=\"/css/theme_extra.css\" type=\"text/css\" /> -->\n<!-- <script type=\"text/javascript\" src=\"/js/highlight.pack.js\"></script> -->\n\n<link rel=\"stylesheet\" href=\"/css/prism.css\">\n\n<script src=\"/js/ballerina-common.js?100\"></script>\n<script src=\"/js/handlebars/4.7.6/handlebars.js\"></script>\n<link rel=\"stylesheet\" href=\"/css/ballerina-io.css\">\n<script>\n   // Current page data\n   var mkdocs_page_name = '\"Home\"'.replace(/^\"|\"$/g, '');\n   var mkdocs_page_input_path = '\"index.md\"'.replace(/^\"|\"$/g, '');\n   var mkdocs_page_url = '\"/\"'.replace(/^\"|\"$/g, '');\n   \n   var releaseNoteFilename = 'RELEASE_NOTE.html';\n\n   var nightly_download_url = 'https://product-dist.ballerina.io/nightly';\n   var dev_download_url = 'https://product-dist.ballerina.io/dev';\n   var base_download_url = 'https://dist.ballerina.io/downloads';\n   \n   var base_releasenote_url = ''.concat('/downloads/1.2.x-release-notes');\n   var base_swanlake_releasenote_url = ''.concat('/downloads/swan-lake-release-notes');\n</script>\n\n<link href=\"/css/prism.css\" rel=\"stylesheet\" />\n\n      <link rel=\"stylesheet\" href=\"/css/ballerina-io-docs.css?200618\">\n      <link rel=\"stylesheet\" href=\"/css/ballerina-io-learn-v2.css\">\n   \n      \n   \n      \n\n      <link href=\"/css/abixTreeList.css\" rel=\"stylesheet\">\n\n   </head>\n   <body class=\"cBallerina-io\" id=\"top\">\n      <style>\n    .cVersionChangeBanner{\n    color: #000000;\n    background-color: #fcdf4a !important;\n    width: 100%;\n    display: inline-block;\n    padding: 10px 0px;\n    text-align: center;\n    font-weight: 500;\n    font-size: 20px;\n    transition : all 0.3s;\n    position: fixed;\n    top: 0;\n    width: 100%;\n    height: 50px;\n    z-index: 9;\n    }\n    .cInfoBannerLink{\n        color: #000000;\n        text-decoration: underline;\n    }\n    .cInfoBannerLink:hover{\n        color: #545454 !important;\n        text-decoration: underline !important;\n    }\n    .cBallerina-io-Gray-row {\n       padding-top: 70px !important;\n    }\n    @media only screen and (max-width: 992px) {\n        .cBallerina-io-Gray-row {\n       padding-top: 140px !important;\n    }\n\n    #noscript-warning{\n        position: relative;\n    text-align: center;\n    padding: 7px 15px;\n    background-color: #57595d;\n    color: #fff;\n    font-weight: 500;\n    letter-spacing: 0.5px;\n    }\n</style>\n<noscript>\n    <div id=\"noscript-warning\">Ballerina works best with JavaScript enabled.</div>\n</noscript>\n     <div class=\"cVersionChangeBanner\">\n        This documentation is for Ballerina 1.2.0. <a href=\"https://ballerina.io/learn/\" class=\"cInfoBannerLink\">View documentation for the latest release</a>.\n    </div>\n<div class=\"row cBallerina-io-Nav\" id=\"iMainNavigation\" style=\"top:50px\">\n\n    <div class=\"container\">\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n            <nav class=\"navbar\">\n                <div>\n                    <div class=\"navbar-header\">\n                        <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\"\n                            data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\">\n                            <span class=\"sr-only\">&#9776</span>\n                            <span class=\"icon-bar\"></span>\n                            <span class=\"icon-bar\"></span>\n                            <span class=\"icon-bar\"></span>\n                        </button>\n                        <a class=\"cMobileLogo\" href=\"/\"><img src=\"/img/ballerina-logo.svg\" alt=\"Ballerina\" /></a>\n                    </div>\n                    <div id=\"navbar\" class=\"collapse navbar-collapse\">\n                        <ul class=\"nav navbar-nav cTopNav\">\n                            <li class=\"toctree-l1\" id=\"playli\"><a class=\"cBioTopLink\" href=\"/downloads/\">Download</a>\n                            </li>\n                            <li class=\"toctree-l1\" id=\"playli\"><a class=\"cBioTopLink\" href=\"https://play.ballerina.io/\"\n                                    target=\"_blank\">Playground</a>\n                            </li>\n                            <li class=\"active toctree-l1\" id=\"learnli\"><a class=\"cBioTopLink\" href=\"/learn\">Learn</a>\n                            </li>\n                            <!--<li class=\"active toctree-l1\" id=\"eventsli\"><a class=\"cBioTopLink\" href=\"/learn/events\">Events</a>\n                            </li>-->\n                            <li class=\"toctree-l1\"><a class=\"cBioTopLink\" href=\"https://central.ballerina.io/\"\n                                    target=\"_blank\">Central</a></li>\n                            <li class=\"toctree-l1\" id=\"openli\"><a class=\"cBioTopLink\" href=\"/community\">Community</a>\n                            </li>\n                            <li class=\"toctree-l1\" id=\"helpli\"><a class=\"cBioTopLink\"\n                                    href=\"https://blog.ballerina.io\">Blog</a>\n                            </li>\n                            <li class=\"cVersionItem\">\n                                <div class=\"cVersionContainer\">\n                                    <!-- <lable class=\"cVlable\">Version</lable> -->\n                                    <select name=\"versions\" id=\"versions\" class=\"select-css\">\n                                        <option value=\"swan-lake\" data-value=\"latest\">Swan Lake</option>\n                                        <option value=\"1.2\">v1.2</option>\n                                        <option value=\"1.1\">v1.1</option>\n                                        <option value=\"1.0\">v1.0</option>\n\n                                    </select>\n                                </div>\n                            </li>\n                            <li class=\"cSearchMenu\">\n                               \n                                <!-- at the end of the HEAD -->\n<link\n  rel=\"stylesheet\"\n  href=\"https://cdn.jsdelivr.net/npm/docsearch.js@2/dist/cdn/docsearch.min.css\"\n/>\n<style>\n  .algolia-search-cont {\n    margin-top: -10px;\n  }\n  .algolia-search-wrap {\n    display: flex;\n    align-items: center;\n  }\n  .algolia-search-cont .search-icon {\n    margin-right: 10px;\n  }\n  .algolia-search-cont .algolia-search-box {\n    border: none;\n    background-image: none;\n    background-color: transparent;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n    box-shadow: none;\n    outline: none;\n  }\n</style>\n<div class=\"algolia-search-cont\">\n  <div class=\"algolia-search-wrap form-control\">\n    <span\n      class=\"glyphicon glyphicon-search search-icon\"\n      aria-hidden=\"true\"\n    ></span>\n    <input\n      autocapitalize=\"off\"\n      autocomplete=\"off\"\n      autocorrect=\"off\"\n      placeholder=\"Search...\"\n      role=\"textbox\"\n      spellcheck=\"false\"\n      type=\"text\"\n      value=\"\"\n      class=\"algolia-search-box\"\n      id=\"algolia-search-box\"\n    />\n  </div>\n</div>\n\n<!-- at the end of the BODY -->\n<script\n  type=\"text/javascript\"\n  src=\"https://cdn.jsdelivr.net/npm/docsearch.js@2/dist/cdn/docsearch.min.js\"\n></script>\n<script type=\"text/javascript\">\n  docsearch({\n    apiKey: \"6a63d4bcf6378ddf3f8724185ddcf626\",\n    indexName: \"ballerina\",\n    inputSelector: \"#algolia-search-box\",\n    debug: false, // Set debug to true if you want to inspect the dropdown\n  });\n</script>\n\n                                <!-- <form class=\"cSearch-form-inline\"><input id=\"searchTxt\" class=\"form-control-field\"\n                                        type=\"search\" placeholder=\"Search\" aria-label=\"Search\"><a id=\"searchBtn\"\n                                        href=\"#\" class=\"cSearchButton\"><img src=\"/img/search.svg\" /></a></form> -->\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n        </div>\n    </div>\n</div>\n\n      <div class=\"row cBallerina-io-Gray-row\">\n         <div class=\"container\">\n            <div class=\"row\">\n               <div class=\"col-xs-12 col-sm-12 col-md-3 col-lg-3 cBallerina-io-Home-Middle-col\">\n                  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!-- Then we build the nav bar. -->\n<nav class=\"cLeftNavContainer\">\n   <ul class=\"cMainLeftNav\">\n      \n      \n      <!-- We have to declare it 'null' to ensure it doesn't propagate. -->\n      <!--  -->\n      \n      \n      \n      <li class=\"sub-menu cTopicURL\">\n         <div class=\"cLeftMenuLink cTopiAtag\">Setting up Ballerina</div>\n         <ul class=\"sub-ul\">\n            \n            <!--  -->\n            \n            \n            \n            <!-- <li  ><a href=\"/1.2/learn/installing-ballerina/\">- Installing Ballerina</a></li> -->\n            <li><a href=\"/1.2/learn/installing-ballerina/\">Installing Ballerina</a></li>\n            \n            <!-- <li  ><a href=\"/1.2/learn/setting-up-visual-studio-code/\">- Setting up Visual Studio Code</a></li> -->\n            <li><a href=\"/1.2/learn/setting-up-visual-studio-code/\">Setting up Visual Studio Code</a></li>\n            \n            <!-- <li  ><a href=\"/1.2/learn/setting-up-intellij-idea/\">- Setting up IntelliJ IDEA</a></li> -->\n            <li><a href=\"/1.2/learn/setting-up-intellij-idea/\">Setting up IntelliJ IDEA</a></li>\n            \n         </ul>\n      </li>\n      \n      \n      \n      <!-- We have to declare it 'null' to ensure it doesn't propagate. -->\n      <!--  -->\n      \n      \n      \n      <li class=\"sub-menu cTopicURL\">\n         <div class=\"cLeftMenuLink cTopiAtag\">Ballerina CLI Tools</div>\n         <ul class=\"sub-ul\">\n            \n            <!--  -->\n            \n            \n            \n            <!-- <li  ><a href=\"/1.2/learn/using-the-cli-tools/\">- Using the CLI Tools</a></li> -->\n            <li><a href=\"/1.2/learn/using-the-cli-tools/\">Using the CLI Tools</a></li>\n            \n            <!-- <li  ><a href=\"/1.2/learn/keeping-ballerina-up-to-date\">- Keeping Ballerina Up To Date</a></li> -->\n            <li><a href=\"/1.2/learn/keeping-ballerina-up-to-date\">Keeping Ballerina Up To Date</a></li>\n            \n            <!-- <li  ><a href=\"/1.2/learn/using-the-openapi-tools/\">- Using the OpenAPI Tools</a></li> -->\n            <li><a href=\"/1.2/learn/using-the-openapi-tools/\">Using the OpenAPI Tools</a></li>\n            \n            <!-- <li  ><a href=\"/1.2/learn/generating-ballerina-code-for-protocol-buffer-definitions\">- Generating Ballerina Code for Protocol Buffer Definitions</a></li> -->\n            <li><a href=\"/1.2/learn/generating-ballerina-code-for-protocol-buffer-definitions\">Generating Ballerina Code for Protocol Buffer Definitions</a></li>\n            \n         </ul>\n      </li>\n      \n      \n      \n      <!-- We have to declare it 'null' to ensure it doesn't propagate. -->\n      <!--  -->\n      \n      \n      \n      <li class=\"sub-menu cTopicURL\">\n         <div class=\"cLeftMenuLink cTopiAtag\">Code Organization</div>\n         <ul class=\"sub-ul\">\n            \n            <!--  -->\n            \n            \n            \n            <!-- <li  ><a href=\"/1.2/learn/structuring-ballerina-code/\">- Structuring Ballerina Code</a></li> -->\n            <li><a href=\"/1.2/learn/structuring-ballerina-code/\">Structuring Ballerina Code</a></li>\n            \n            <!-- <li  ><a href=\"/1.2/learn/documenting-ballerina-code/\">- Documenting Ballerina Code</a></li> -->\n            <li><a href=\"/1.2/learn/documenting-ballerina-code/\">Documenting Ballerina Code</a></li>\n            \n            <!-- <li  ><a href=\"/1.2/learn/coding-conventions/\">- Coding Conventions</a></li> -->\n            <li><a href=\"/1.2/learn/coding-conventions/\">Coding Conventions</a></li>\n            \n            <!-- <li  ><a href=\"/1.2/learn/running-ballerina-code/\">- Running Ballerina Code</a></li> -->\n            <li><a href=\"/1.2/learn/running-ballerina-code/\">Running Ballerina Code</a></li>\n            \n            <!-- <li  ><a href=\"/1.2/learn/publishing-modules-to-ballerina-central\">- Publishing Modules to Ballerina Central</a></li> -->\n            <li><a href=\"/1.2/learn/publishing-modules-to-ballerina-central\">Publishing Modules to Ballerina Central</a></li>\n            \n         </ul>\n      </li>\n      \n      \n      \n      <!-- We have to declare it 'null' to ensure it doesn't propagate. -->\n      <!--  -->\n      \n      \n      \n      <li class=\"sub-menu cTopicURL\">\n         <div class=\"cLeftMenuLink cTopiAtag\">Deployment</div>\n         <ul class=\"sub-ul\">\n            \n            <!--  -->\n            \n            \n            \n            <!-- <li  ><a href=\"/1.2/learn/deployment/docker/\">- Docker</a></li> -->\n            <li><a href=\"/1.2/learn/deployment/docker/\">Docker</a></li>\n            \n            <!-- <li  ><a href=\"/1.2/learn/deployment/kubernetes/\">- Kubernetes</a></li> -->\n            <li><a href=\"/1.2/learn/deployment/kubernetes/\">Kubernetes</a></li>\n            \n            <!-- <li  ><a href=\"/1.2/learn/deployment/aws-lambda/\">- AWS Lambda</a></li> -->\n            <li><a href=\"/1.2/learn/deployment/aws-lambda/\">AWS Lambda</a></li>\n            \n            <!-- <li  ><a href=\"/1.2/learn/deployment/azure-functions/\">- Azure Functions</a></li> -->\n            <li><a href=\"/1.2/learn/deployment/azure-functions/\">Azure Functions</a></li>\n            \n         </ul>\n      </li>\n      \n      \n      \n      <!-- We have to declare it 'null' to ensure it doesn't propagate. -->\n      <!--  -->\n      \n      \n      \n      <li class=\"sub-menu cTopicURL\">\n         <div class=\"cLeftMenuLink cTopiAtag\">Observability</div>\n         <ul class=\"sub-ul\">\n            \n            <!--  -->\n            \n            \n            \n            <!-- <li  ><a href=\"/1.2/learn/observing-ballerina-code\">- Observing Ballerina Code</a></li> -->\n            <li class=\"current-sub\"><a href=\"/1.2/learn/observing-ballerina-code\">Observing Ballerina Code</a></li>\n            \n         </ul>\n      </li>\n      \n      \n      \n      <!-- We have to declare it 'null' to ensure it doesn't propagate. -->\n      <!--  -->\n      \n      \n      \n      <li class=\"sub-menu cTopicURL\">\n         <div class=\"cLeftMenuLink cTopiAtag\">Interoperability</div>\n         <ul class=\"sub-ul\">\n            \n            <!--  -->\n            \n            \n            \n            <!-- <li  ><a href=\"/1.2/learn/calling-java-code-from-ballerina/\">- Calling Java Code from Ballerina</a></li> -->\n            <li><a href=\"/1.2/learn/calling-java-code-from-ballerina/\">Calling Java Code from Ballerina</a></li>\n            \n         </ul>\n      </li>\n      \n      \n      \n      <!-- We have to declare it 'null' to ensure it doesn't propagate. -->\n      <!--  -->\n      \n      \n      \n      <li class=\"sub-menu cTopicURL\">\n         <div class=\"cLeftMenuLink cTopiAtag\">Security</div>\n         <ul class=\"sub-ul\">\n            \n            <!--  -->\n            \n            \n            \n            <!-- <li  ><a href=\"/1.2/learn/writing-secure-ballerina-code\">- Writing Secure Ballerina Code</a></li> -->\n            <li><a href=\"/1.2/learn/writing-secure-ballerina-code\">Writing Secure Ballerina Code</a></li>\n            \n         </ul>\n      </li>\n      \n      \n      \n      <!-- We have to declare it 'null' to ensure it doesn't propagate. -->\n      <!--  -->\n      \n      \n      \n      <li class=\"sub-menu cTopicURL\">\n         <div class=\"cLeftMenuLink cTopiAtag\">Testing Ballerina Code</div>\n         <ul class=\"sub-ul\">\n            \n            <!--  -->\n            \n            \n            \n            <!-- <li  ><a href=\"/1.2/learn/testing-ballerina-code/testing-quick-start\">- Quick Start</a></li> -->\n            <li><a href=\"/1.2/learn/testing-ballerina-code/testing-quick-start\">Quick Start</a></li>\n            \n            <!-- <li  ><a href=\"/1.2/learn/testing-ballerina-code/writing-tests\">- Writing Tests</a></li> -->\n            <li><a href=\"/1.2/learn/testing-ballerina-code/writing-tests\">Writing Tests</a></li>\n            \n            <!-- <li  ><a href=\"/1.2/learn/testing-ballerina-code/mocking\">- Mocking</a></li> -->\n            <li><a href=\"/1.2/learn/testing-ballerina-code/mocking\">Mocking</a></li>\n            \n            <!-- <li  ><a href=\"/1.2/learn/testing-ballerina-code/executing-tests\">- Executing Tests</a></li> -->\n            <li><a href=\"/1.2/learn/testing-ballerina-code/executing-tests\">Executing Tests</a></li>\n            \n         </ul>\n      </li>\n      \n      \n      \n      <!-- We have to declare it 'null' to ensure it doesn't propagate. -->\n      <!--  -->\n      \n      \n      \n      <li class=\"sub-menu cTopicURL\">\n         <div class=\"cLeftMenuLink cTopiAtag\">Extending Ballerina</div>\n         <ul class=\"sub-ul\">\n            \n            <!--  -->\n            \n            \n            \n            <!-- <li  ><a href=\"/1.2/learn/extending-with-compiler-extensions\">- Extending with Compiler Extensions</a></li> -->\n            <li><a href=\"/1.2/learn/extending-with-compiler-extensions\">Extending with Compiler Extensions</a></li>\n            \n         </ul>\n      </li>\n      \n      \n   </ul>\n</nav>\n\n               </div>\n               <div class=\"col-xs-12 col-sm-12 col-md-9 col-lg-9 cBallerina-io-Home-Middle-col\">\n                  <div class=\"col-xs-12 col-sm-12\" style=\"padding: 0;\">\n                     <div class=\"col-md-12 col-lg-12 cBallerina-io-breadcrumbs\">\n                        <nav class=\"breadcrumbs bootstrap hidden-sm-down\"\n  >\n  <ul id=\"breadcrumb-list\" class=\" cBalleinaBreadcrumbs list-unstyled  wy-breadcrumbs\" vocab=\"http://schema.org/\"\n    typeof=\"BreadcrumbList\">\n\n\n    \n    <li><a href=\"/\">Home</a></li>\n    \n    \n    <li>/</li>\n    <li><a\n        href=\"/1.2/\">1.2</a>\n    </li>\n    \n    \n    \n    <li>/</li>\n    <li><a\n        href=\"/1.2/learn/\">Learn</a>\n    </li>\n    \n    \n    \n    <li>/</li> Observing Ballerina Code\n    \n    \n\n  </ul>\n</nav>\n<style type=\"text/css\">\n  .cBalleinaBreadcrumbs li {\n    margin-right: 10px;\n  }\n</style>\n                        <div class=\"cVersionContainer\"></div>\n                     </div>\n                     <!-- <div class=\"col-md-12 col-lg-2 cBallerina-io-breadcrumbs cGitLink\">\n                        \n                     </div> -->\n                  </div>\n                  <div class=\"cBlallerina-io-docs-content-container cPositionRelative\">\n                     <div class=\"wy-nav-content\">\n                        <div class=\"rst-content\">\n                           <div role=\"main\">\n                              <div class=\"section\">\n\n\n                                 <div class=\"col-xs-11 col-md-11 col-lg-11 cNoPadding\">\n                                    <h1>Observing Ballerina Code</h1>\n                                 </div>\n                                 <!-- <div class=\"col-xs-1 col-md-1 col-lg-1 cNoPadding cGithubContainer\">\n                                    <a class=\"icon icon-github\" target=\"_blank\" href=\"https://www.github.com/ballerina-platform/ballerina-dev-website/blob/master/1.2/learn/observing-ballerina-code.md\"></a>\n                                 </div> -->\n                                 <div class=\"col-xs-12 col-md-12 col-lg-12 cNoPadding\">\n                                    <p>Observability is a measure of how well internal states of a system can be inferred from knowledge of its external outputs.</p>\n                                    <div class=\"cBallerinaTocContainer\" id=\"table-of-content\">\n                                       <ul id=\"tree\">\n  <li><a href=\"#providing-observability-in-ballerina\">Providing Observability in Ballerina</a></li>\n  <li><a href=\"#observing-a-ballerina-service\">Observing a Ballerina Service</a>\n    <ul>\n      <li><a href=\"#step-1---setting-up-the-prerequisites\">Step 1 - Setting Up the Prerequisites</a></li>\n      <li><a href=\"#step-2---installing-and-configuring-the-external-systems\">Step 2 - Installing and Configuring the External Systems</a></li>\n      <li><a href=\"#step-3---creating-a-hello-world-ballerina-service\">Step 3 - Creating a ‘Hello World’ Ballerina Service</a></li>\n      <li><a href=\"#step-4---observing-the-hello-world-ballerina-service\">Step 4 - Observing the ‘Hello World’ Ballerina Service</a>\n        <ul>\n          <li><a href=\"#starting-the-service-using-a-flag\">Starting the Service Using a Flag</a></li>\n          <li><a href=\"#starting-the-service-using-a-configuration-file\">Starting the Service Using a Configuration File</a></li>\n        </ul>\n      </li>\n      <li><a href=\"#step-5---sending-few-requests\">Step 5 - Sending Few Requests</a></li>\n      <li><a href=\"#step-6---viewing-tracing-and-metrics-in-the-dashboard\">Step 6 - Viewing Tracing and Metrics in the Dashboard</a></li>\n      <li><a href=\"#step-7---visualizing-the-logs\">Step 7 - Visualizing the Logs</a></li>\n    </ul>\n  </li>\n  <li><a href=\"#monitoring-metrics\">Monitoring Metrics</a>\n    <ul>\n      <li><a href=\"#configuring-advanced-metrics-for-ballerina\">Configuring Advanced Metrics for Ballerina</a></li>\n      <li><a href=\"#setting-up-the-external-systems-for-metrics\">Setting Up the External Systems for Metrics</a>\n        <ul>\n          <li><a href=\"#setting-up-prometheus\">Setting Up Prometheus</a></li>\n          <li><a href=\"#setting-up-grafana\">Setting Up Grafana</a></li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n  <li><a href=\"#distributed-tracing\">Distributed Tracing</a>\n    <ul>\n      <li><a href=\"#configuring-advanced-tracing-for-ballerina\">Configuring Advanced Tracing for Ballerina</a>\n        <ul>\n          <li><a href=\"#using-the-jaeger-client\">Using the Jaeger Client</a></li>\n          <li><a href=\"#using-the-zipkin-client\">Using the Zipkin Client</a></li>\n        </ul>\n      </li>\n      <li><a href=\"#setting-up-the-external-systems-for-tracing\">Setting Up the External Systems for Tracing</a>\n        <ul>\n          <li><a href=\"#setting-up-the-jaeger-server\">Setting Up the Jaeger Server</a></li>\n          <li><a href=\"#setting-up-the-zipkin-server\">Setting Up the Zipkin Server</a></li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n  <li><a href=\"#distributed-logging\">Distributed Logging</a>\n    <ul>\n      <li><a href=\"#setting-up-the-external-systems-for-log-analytics\">Setting Up the External Systems for Log Analytics</a>\n        <ul>\n          <li><a href=\"#setting-up-elastic-stack\">Setting Up Elastic Stack</a></li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n</ul>\n\n                                    </div>\n                                    <h2 id=\"providing-observability-in-ballerina\">Providing Observability in Ballerina</h2>\n\n<p>Monitoring, logging, and distributed tracing are key methods that reveal the internal state of the system to provide observability. Ballerina becomes fully observable by exposing itself via these three methods to various external systems allowing to monitor metrics such as request count and response time statistics, analyze logs, and\nperform distributed tracing.</p>\n\n<p>HTTP/HTTPS based Ballerina services and any client connectors are observable by default. HTTP/HTTPS and SQL client\nconnectors use semantic tags to make tracing and metrics monitoring more informative.</p>\n\n<p>This guide focuses on enabling Ballerina service observability with some of its default supported systems.\n<a href=\"https://prometheus.io/\">Prometheus</a> and <a href=\"https://grafana.com/\">Grafana</a> are used for metrics monitoring, and <a href=\"https://www.jaegertracing.io/\">Jaeger</a> is used for distributed tracing. \nBallerina logs can be fed to any external log monitoring system like <a href=\"https://www.elastic.co/\">Elastic Stack</a> to perform log monitoring and analysis.</p>\n\n<h2 id=\"observing-a-ballerina-service\">Observing a Ballerina Service</h2>\n\n<p>Follow the steps below to observe a sample Ballerina service.</p>\n\n<h3 id=\"step-1---setting-up-the-prerequisites\">Step 1 - Setting Up the Prerequisites</h3>\n\n<p>Make sure you have already installed <a href=\"https://www.docker.com/\">Docker</a> to set up external products such as Jaeger,\nPrometheus, etc. You can follow <a href=\"https://docs.docker.com/install/\">Docker documentation</a> to install Docker.</p>\n\n<h3 id=\"step-2---installing-and-configuring-the-external-systems\">Step 2 - Installing and Configuring the External Systems</h3>\n\n<ul>\n  <li>Setup Prometheus for collecting metrics information by following section on <a href=\"#prometheus\">Setting up Prometheus</a></li>\n  <li>Setup Grafana to visualize metrics by following section on <a href=\"#grafana\">Setting up Grafana</a></li>\n  <li>Setup Jaeger analyze tracing as mentioned in section <a href=\"#jaeger-server\">Setting up Jaeger</a></li>\n  <li>Setup Elastic Stack only if you are interested in analysing logs by following section on <a href=\"#elastic-stack\">Setting up Elastic Stack</a></li>\n</ul>\n\n<h3 id=\"step-3---creating-a-hello-world-ballerina-service\">Step 3 - Creating a ‘Hello World’ Ballerina Service</h3>\n\n<p>Create a Service as shown below and save it as <code class=\"language-plaintext highlighter-rouge\">hello_world_service.bal</code>.</p>\n\n<pre><code class=\"language-ballerina\">import ballerina/http;\nimport ballerina/log;\n\nservice hello on new http:Listener(9090) {\n    \n    resource function sayHello (http:Caller caller, http:Request req) returns error? {\n        log:printInfo(\"This is a test Info log\");\n        log:printError(\"This is a test Error log\");\n        log:printWarn(\"This is a test Warn log\");\n        http:Response res = new;\n        res.setPayload(\"Hello, World!\");\n        check caller-&gt;respond(res);\n    }\n    \n}\n</code></pre>\n\n<h3 id=\"step-4---observing-the-hello-world-ballerina-service\">Step 4 - Observing the ‘Hello World’ Ballerina Service</h3>\n\n<p>Observability is disabled by default and can be enabled by using the <code class=\"language-plaintext highlighter-rouge\">--b7a.observability.enabled=true</code> flag or updating the configurations.</p>\n\n<p>When Ballerina observability is enabled, Ballerina runtime exposes internal metrics via an HTTP endpoint for metrics\nmonitoring and tracers will be published to Jaeger. Prometheus should be configured to scrape metrics from\nthe metrics HTTP endpoint in Ballerina.</p>\n\n<p>Ballerina logs are logged on to the console. Therefore, the logs need to be redirected to a file, which can then be\npushed to <a href=\"#distributed-logging\">Elastic Stack</a> to perform the log analysis.</p>\n\n<h4 id=\"starting-the-service-using-a-flag\">Starting the Service Using a Flag</h4>\n\n<p>The Ballerina service is observable with default settings when the <code class=\"language-plaintext highlighter-rouge\">--b7a.observability.enabled=true</code> flag is used along with the Ballerina\n<code class=\"language-plaintext highlighter-rouge\">run</code> command to start the service.\nThis lets you collect the distributed tracing information with Jaeger and metrics information with Prometheus.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>ballerina run hello_world_service.bal <span class=\"nt\">--b7a</span>.observability.enabled<span class=\"o\">=</span><span class=\"nb\">true</span>\n\n<span class=\"o\">[</span>ballerina/http] started HTTP/WS listener 0.0.0.0:9797\nballerina: started Prometheus HTTP listener 0.0.0.0:9797\nballerina: started publishing tracers to Jaeger on localhost:5775\n<span class=\"o\">[</span>ballerina/http] started HTTP/WS listener 0.0.0.0:9090\n</code></pre></div></div>\n\n<p>Redirect the standard output to a file if you want to monitor logs.</p>\n\n<p>For example:</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">nohup </span>ballerina run hello_world_service.bal <span class=\"nt\">--b7a</span>.observability.enabled<span class=\"o\">=</span><span class=\"nb\">true</span> <span class=\"o\">&gt;</span> ballerina.log &amp;\n</code></pre></div></div>\n\n<h4 id=\"starting-the-service-using-a-configuration-file\">Starting the Service Using a Configuration File</h4>\n\n<p>Observability of Ballerina service can also be enabled from the configuration. Create a configuration file such as <code class=\"language-plaintext highlighter-rouge\">ballerina.conf</code> and add configuration below that starts metrics monitoring and distributed tracing with default \nsettings.</p>\n\n<div class=\"language-toml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nn\">[b7a.observability.metrics]</span>\n<span class=\"c\"># Flag to enable Metrics</span>\n<span class=\"py\">enabled</span><span class=\"p\">=</span><span class=\"kc\">true</span>\n\n<span class=\"nn\">[b7a.observability.tracing]</span>\n<span class=\"c\"># Flag to enable Tracing</span>\n<span class=\"py\">enabled</span><span class=\"p\">=</span><span class=\"kc\">true</span>\n</code></pre></div></div>\n\n<p>The created configuration file can be passed to the Ballerina program with <code class=\"language-plaintext highlighter-rouge\">--b7a.config.file</code> option along with\nthe path of the configuration file.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>ballerina run hello_world_service.bal <span class=\"nt\">--b7a</span>.config.file<span class=\"o\">=</span>&lt;path-to-conf&gt;/ballerina.conf\n\n<span class=\"o\">[</span>ballerina/http] started HTTP/WS listener 0.0.0.0:9797\nballerina: started Prometheus HTTP listener 0.0.0.0:9797\nballerina: started publishing tracers to Jaeger on localhost:5775\n<span class=\"o\">[</span>ballerina/http] started HTTP/WS listener 0.0.0.0:9090\n</code></pre></div></div>\n\n<p>Redirect the standard output to a file if you want to monitor logs.</p>\n\n<p>For example:</p>\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">nohup </span>ballerina run hello_world_service.bal <span class=\"nt\">--b7a</span>.config.file<span class=\"o\">=</span>&lt;path-to-conf&gt;/ballerina.conf <span class=\"o\">&gt;</span> ballerina.log &amp;\n</code></pre></div></div>\n\n<h3 id=\"step-5---sending-few-requests\">Step 5 - Sending Few Requests</h3>\n\n<p>Send few requests to <a href=\"http://localhost:9090/hello/sayHello\">http://localhost:9090/hello/sayHello</a></p>\n\n<p>Example cURL command:</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>curl http://localhost:9090/hello/sayHello\n</code></pre></div></div>\n\n<h3 id=\"step-6---viewing-tracing-and-metrics-in-the-dashboard\">Step 6 - Viewing Tracing and Metrics in the Dashboard</h3>\n\n<p>View the tracing information on Jaeger via <a href=\"http://localhost:16686/\">http://localhost:16686/</a> and view metrics information from the Grafana\ndashboard on <a href=\"http://localhost:3000/\">http://localhost:3000/</a>.</p>\n\n<p>Sample view of Jaeger dashboard for hello_world_service.bal is shown below. \n<img src=\"../images/jaeger-sample-dashboard.png\" alt=\"Jaeger Sample Dashboard\" title=\"Jaeger Sample Dashboard\" /></p>\n\n<p>Sample view of Grafana dashboard for hello_world_service.bal is shown below. \n<img src=\"../images/grafana-sample-hello-world-service-stats.png\" alt=\"Grafana Sample Dashboard\" title=\"Grafana HelloWorld Service Sample Dashboard\" /></p>\n\n<h3 id=\"step-7---visualizing-the-logs\">Step 7 - Visualizing the Logs</h3>\n\n<p>If you have configured log analytics, view the logs in Kibana via <a href=\"http://localhost:5601\">http://localhost:5601</a></p>\n\n<p><img src=\"../images/kibana-sample-dashboard.png\" alt=\"Kibana Sample Dashboard\" title=\"Kibana Sample Dashboard\" /></p>\n\n<h2 id=\"monitoring-metrics\">Monitoring Metrics</h2>\n<p>Metrics help to monitor the runtime behavior of a service. Therefore, metrics are a vital part of monitoring\nBallerina services. However, metrics are not the same as analytics. For example, you should not use metrics to do\nsomething like per-request billing. Metrics are used to measure what Ballerina service does at runtime to make\nbetter decisions using the numbers. The code generates business value when it continuously runs in production.\nTherefore, it is imperative to continuously measure the code in production.</p>\n\n<p>Metrics, by default, supports Prometheus. In order to support Prometheus, an HTTP endpoint starts with the context\nof <code class=\"language-plaintext highlighter-rouge\">/metrics</code> in default port 9797 when starting the Ballerina service.</p>\n\n<h3 id=\"configuring-advanced-metrics-for-ballerina\">Configuring Advanced Metrics for Ballerina</h3>\n<p>This section focuses on the Ballerina configurations that are available for metrics monitoring with Prometheus,\nand the sample configuration is provided below.</p>\n\n<div class=\"language-toml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nn\">[b7a.observability.metrics]</span>\n<span class=\"py\">enabled</span><span class=\"p\">=</span><span class=\"kc\">true</span>\n<span class=\"py\">reporter</span><span class=\"p\">=</span><span class=\"s\">\"prometheus\"</span>\n\n<span class=\"nn\">[b7a.observability.metrics.prometheus]</span>\n<span class=\"py\">port</span><span class=\"p\">=</span><span class=\"mi\">9797</span>\n<span class=\"py\">host</span><span class=\"p\">=</span><span class=\"s\">\"0.0.0.0\"</span>\n</code></pre></div></div>\n\n<p>The descriptions of each configuration above are provided below with possible alternate options.</p>\n\n<table>\n  <thead>\n    <tr>\n      <th>Configuration Key</th>\n      <th>Description</th>\n      <th>Default Value</th>\n      <th>Possible Values</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>b7a.observability.metrics. enabled</td>\n      <td>Whether metrics monitoring is enabled (true) or disabled (false)</td>\n      <td>false</td>\n      <td>true or false</td>\n    </tr>\n    <tr>\n      <td>b7a.observability.metrics. reporter</td>\n      <td>Reporter name that reports the collected Metrics to the remote metrics server. This is only required to be modified if a custom reporter is implemented and needs to be used.</td>\n      <td>prometheus</td>\n      <td>prometheus or if any custom implementation, then name of the reporter.</td>\n    </tr>\n    <tr>\n      <td>b7a.observability.metrics. prometheus.port</td>\n      <td>The value of the port to which the service ‘/metrics’ will bind. This service will be used by Prometheus to scrape the information of the Ballerina service.</td>\n      <td>9797</td>\n      <td>Any suitable value for port 0 - 0 - 65535. However, within that range, ports 0 - 1023 are generally reserved for specific purposes, therefore it is advisable to select a port without that range.</td>\n    </tr>\n    <tr>\n      <td>b7a.observability.metrics. prometheus.host</td>\n      <td>The name of the host in which the service ‘/metrics’ will bind to. This service will be used by Prometheus to scrape the information of the Ballerina service.</td>\n      <td>0.0.0.0</td>\n      <td>IP or Hostname or 0.0.0.0 of the node in which the Ballerina service is running.</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"setting-up-the-external-systems-for-metrics\">Setting Up the External Systems for Metrics</h3>\n<p>There are mainly two systems involved in collecting and visualizing the metrics. <a href=\"https://prometheus.io/\">Prometheus</a> is used to collect the\nmetrics from the Ballerina service and <a href=\"https://grafana.com/\">Grafana</a> can connect to Prometheus and visualize the metrics in the dashboard.</p>\n\n<h4 id=\"setting-up-prometheus\">Setting Up Prometheus</h4>\n\n<p><a href=\"https://prometheus.io/\">Prometheus</a> is used as the monitoring system, which pulls out the metrics collected from the Ballerina service\n‘/metrics’. This section focuses on the quick installation of Prometheus with Docker, and configure it to collect metrics from Ballerina service with default configurations. Below provided steps needs to be followed to configure \nPrometheus. There are many other ways to install the Prometheus and you can find possible options from\n<a href=\"https://prometheus.io/docs/prometheus/latest/installation/\">installation guide</a>.</p>\n\n<ol>\n  <li>\n    <p>Create a <code class=\"language-plaintext highlighter-rouge\">prometheus.yml</code> file in the <code class=\"language-plaintext highlighter-rouge\">/tmp/</code> directory.</p>\n  </li>\n  <li>\n    <p>Add the following content to <code class=\"language-plaintext highlighter-rouge\">/tmp/prometheus.yml</code>.</p>\n  </li>\n</ol>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">global</span><span class=\"pi\">:</span>\n  <span class=\"na\">scrape_interval</span><span class=\"pi\">:</span>     <span class=\"s\">15s</span>\n  <span class=\"na\">evaluation_interval</span><span class=\"pi\">:</span> <span class=\"s\">15s</span>\n\n<span class=\"na\">scrape_configs</span><span class=\"pi\">:</span>\n  <span class=\"pi\">-</span> <span class=\"na\">job_name</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">prometheus'</span>\n    <span class=\"na\">static_configs</span><span class=\"pi\">:</span>\n      <span class=\"pi\">-</span> <span class=\"na\">targets</span><span class=\"pi\">:</span> <span class=\"pi\">[</span><span class=\"s1\">'</span><span class=\"s\">a.b.c.d:9797'</span><span class=\"pi\">]</span>\n</code></pre></div></div>\n\n<p>Here the targets <code class=\"language-plaintext highlighter-rouge\">'a.b.c.d:9797'</code> should contain the host and port of the <code class=\"language-plaintext highlighter-rouge\">/metrics</code> service that’s exposed from \nBallerina for metrics collection. Add the IP of the host in which the Ballerina service is running as <code class=\"language-plaintext highlighter-rouge\">a.b.c.d</code> and its\nport (default <code class=\"language-plaintext highlighter-rouge\">9797</code>).\nFor more information, go to the <a href=\"https://prometheus.io/docs/introduction/first_steps/\">Prometheus Documentation</a>.</p>\n\n<ol>\n  <li>Start the Prometheus server in a Docker container with the command below.</li>\n</ol>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>docker run <span class=\"nt\">-p</span> 19090:9090 <span class=\"nt\">-v</span> /tmp/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus\n</code></pre></div></div>\n\n<ol>\n  <li>Go to <a href=\"http://localhost:19090/\">http://localhost:19090/</a> and check whether you can see the Prometheus graph.\nBallerina metrics should appear in Prometheus graph’s metrics list when Ballerina service is started.</li>\n</ol>\n\n<h4 id=\"setting-up-grafana\">Setting Up Grafana</h4>\n\n<p>Let’s use <a href=\"https://grafana.com/\">Grafana</a> to visualize metrics in a dashboard. For this, we need to install Grafana, and configure\nPrometheus as a data source. Follow the steps below to configure Grafana.</p>\n\n<ol>\n  <li>Start Grafana as a Docker container with the command below.</li>\n</ol>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>docker run <span class=\"nt\">-d</span> <span class=\"nt\">--name</span><span class=\"o\">=</span>grafana <span class=\"nt\">-p</span> 3000:3000 grafana/grafana\n</code></pre></div></div>\n<p>For more information, go to <a href=\"https://hub.docker.com/r/grafana/grafana/\">Grafana in Docker Hub</a>.</p>\n\n<ol>\n  <li>\n    <p>Go to <a href=\"http://localhost:3000/\">http://localhost:3000/</a> to access the Grafana dashboard running on Docker.</p>\n  </li>\n  <li>\n    <p>Log in to the dashboard with the default user, username: <code class=\"language-plaintext highlighter-rouge\">admin</code> and password: <code class=\"language-plaintext highlighter-rouge\">admin</code></p>\n  </li>\n  <li>\n    <p>Add Prometheus as a data source with <code class=\"language-plaintext highlighter-rouge\">Browser</code> access configuration as provided below.</p>\n  </li>\n</ol>\n\n<p><img src=\"../images/grafana-prometheus-datasource.png\" alt=\"Grafana Prometheus Datasource\" title=\"Grafana Prometheus Datasource\" /></p>\n\n<ol>\n  <li>Import the Grafana dashboard designed to visualize Ballerina metrics from <a href=\"https://grafana.com/dashboards/5841\">https://grafana.com/dashboards/5841</a>.\nThis dashboard consists of service and client invocation level metrics in near real-time view.</li>\n</ol>\n\n<p>Ballerina HTTP Service Metrics Dashboard Panel will be as below.\n<img src=\"../images/grafana-ballerina-metrics-1.png\" alt=\"Ballerina Service Metrics\" title=\"Ballerina Sample Service Metrics Dashboard\" /></p>\n\n<p>Ballerina HTTP Client Metrics Dashboard Panel will be as below.\n<img src=\"../images/grafana-ballerina-metrics-3.png\" alt=\"Ballerina Client Metrics\" title=\"Ballerina Sample Client Metrics Dashboard\" /></p>\n\n<p>Ballerina SQL Client Metrics Dashboard Panel will be as below.\n<img src=\"../images/grafana-ballerina-metrics-2.png\" alt=\"Ballerina SQL Client Metrics\" title=\"Ballerina Sample SQL Client Metrics Dashboard\" /></p>\n\n<h2 id=\"distributed-tracing\">Distributed Tracing</h2>\n\n<p>Tracing provides information regarding the roundtrip of a service invocation based on the concept of spans, which are\nstructured in a hierarchy based on the cause and effect concept. Tracers propagate across several services that can be\ndeployed in several nodes, depicting a high-level view of interconnections among services as well, hence coining the\nterm distributed tracing.</p>\n\n<p>A span is a logical unit of work, which encapsulates a start and end time as well as metadata to give more meaning to\nthe unit of work being completed. For example, a span representing a client call to an HTTP endpoint would give the\nuser the latency of the client call and metadata like the HTTP URL being called and HTTP method used. If the span\nrepresents an SQL client call, the metadata would include the query being executed.</p>\n\n<p>Tracing gives the user a high-level view of how a single service invocation is processed across several distributed\nmicroservices.</p>\n\n<ul>\n  <li>Identify service bottlenecks - The user can monitor the latencies and identify when a service invocation slows down,\npinpoint where the slowing down happens (by looking at the span latencies) and take action to improve the latency.</li>\n  <li>Error identification - If an error occurs during the service invocation, it will show up in the list of tracers.\nThe user can easily identify where the error occurred and information of the error will be attached to the relevant\nspan as metadata.</li>\n</ul>\n\n<p>Ballerina supports <a href=\"http://opentracing.io/\">OpenTracing</a> standards by default. This means that Ballerina services\ncan be traced using OpenTracing implementations like <a href=\"http://www.jaegertracing.io/\">Jaeger</a>, and\n<a href=\"https://zipkin.io/\">Zipkin</a>. Jaeger is the default tracer of Ballerina.</p>\n\n<p>Semantic tags used by Ballerina also follow the <a href=\"https://github.com/opentracing/specification/blob/master/semantic_conventions.md\">semantic conventions defined in OpenTracing\nspecification.</a></p>\n\n<h3 id=\"configuring-advanced-tracing-for-ballerina\">Configuring Advanced Tracing for Ballerina</h3>\n\n<p>Tracing can be enabled in Ballerina with <code class=\"language-plaintext highlighter-rouge\">--b7a.observability.enabled=true</code> flag as mentioned in the <a href=\"#getting-started\">Getting Started</a> section, as well as configuration option. This section mainly focuses on the configuration options with description and possible values.</p>\n\n<p>The sample configuration that enables tracing, and uses Jaeger as the sample tracer as provided below.</p>\n\n<div class=\"language-toml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nn\">[b7a.observability.tracing]</span>\n<span class=\"py\">enabled</span><span class=\"p\">=</span><span class=\"kc\">true</span>\n<span class=\"py\">name</span><span class=\"p\">=</span><span class=\"s\">\"jaeger\"</span>\n</code></pre></div></div>\n\n<p>The table below provides the descriptions of each configuration option and possible values that can be assigned.</p>\n\n<table>\n  <thead>\n    <tr>\n      <th>Configuration Key</th>\n      <th>Description</th>\n      <th>Default Value</th>\n      <th>Possible Values</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>b7a.observability.tracing.enabled</td>\n      <td>Whether tracing is enabled (true) or disabled (false)</td>\n      <td>false</td>\n      <td>true or false</td>\n    </tr>\n    <tr>\n      <td>b7a.observability.tracing.name</td>\n      <td>Tracer name which implements tracer interface.</td>\n      <td>jaeger</td>\n      <td>jaeger or zipkin</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"using-the-jaeger-client\">Using the Jaeger Client</h4>\n<p>Jaeger is the default tracer supported by Ballerina. Below is the sample configuration options that are available in\nthe Jaeger.</p>\n\n<div class=\"language-toml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nn\">[b7a.observability.tracing]</span>\n<span class=\"py\">enabled</span><span class=\"p\">=</span><span class=\"kc\">true</span>\n<span class=\"py\">name</span><span class=\"p\">=</span><span class=\"s\">\"jaeger\"</span>\n\n<span class=\"nn\">[b7a.observability.tracing.jaeger.sampler]</span>\n<span class=\"py\">type</span><span class=\"p\">=</span><span class=\"s\">\"const\"</span>\n<span class=\"py\">param</span><span class=\"p\">=</span><span class=\"mf\">1.0</span>\n\n<span class=\"nn\">[b7a.observability.tracing.jaeger.reporter]</span>\n<span class=\"py\">hostname</span><span class=\"p\">=</span><span class=\"s\">\"localhost\"</span>\n<span class=\"py\">port</span><span class=\"p\">=</span><span class=\"mi\">5775</span>\n\n<span class=\"nn\">[b7a.observability.tracing.jaeger.reporter.flush.interval]</span>\n<span class=\"py\">ms</span><span class=\"p\">=</span><span class=\"mi\">2000</span>\n\n<span class=\"nn\">[b7a.observability.tracing.jaeger.reporter.max.buffer]</span>\n<span class=\"py\">spans</span><span class=\"p\">=</span><span class=\"mi\">1000</span>\n</code></pre></div></div>\n\n<p>The below table provides the descriptions of each configuration option and possible values that can be assigned.</p>\n\n<table>\n  <thead>\n    <tr>\n      <th>Configuration Key</th>\n      <th>Description</th>\n      <th>Default Value</th>\n      <th>Possible Values</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>b7a.observability.tracing. jaeger.reporter.hostname</td>\n      <td>Hostname of the Jaeger server</td>\n      <td>localhost</td>\n      <td>IP or hostname of the Jaeger server. If it is running on the same node as Ballerina, it can be localhost.</td>\n    </tr>\n    <tr>\n      <td>b7a.observability.tracing. jaeger.reporter.port</td>\n      <td>Port of the Jaeger server</td>\n      <td>5775</td>\n      <td>The port to which the Jaeger server is listening.</td>\n    </tr>\n    <tr>\n      <td>b7a.observability.tracing. jaeger.sampler.type</td>\n      <td>Type of the sampling methods used in the Jaeger tracer.</td>\n      <td>const</td>\n      <td><code class=\"language-plaintext highlighter-rouge\">const</code>, <code class=\"language-plaintext highlighter-rouge\">probabilistic</code>, or <code class=\"language-plaintext highlighter-rouge\">ratelimiting</code>.</td>\n    </tr>\n    <tr>\n      <td>b7a.observability.tracing. jaeger.sampler.param</td>\n      <td>It is a floating value. Based on the sampler type, the effect of the sampler param varies</td>\n      <td>1.0</td>\n      <td>For <code class=\"language-plaintext highlighter-rouge\">const</code> <code class=\"language-plaintext highlighter-rouge\">0</code> (no sampling) or <code class=\"language-plaintext highlighter-rouge\">1</code> (sample all spans), for <code class=\"language-plaintext highlighter-rouge\">probabilistic</code> <code class=\"language-plaintext highlighter-rouge\">0.0</code> to <code class=\"language-plaintext highlighter-rouge\">1.0</code>, for <code class=\"language-plaintext highlighter-rouge\">ratelimiting</code> any positive integer (rate per second).</td>\n    </tr>\n    <tr>\n      <td>b7a.observability.tracing. jaeger.reporter.flush.interval.ms</td>\n      <td>Jaeger client will be sending the spans to the server at this interval.</td>\n      <td>2000</td>\n      <td>Any positive integer value.</td>\n    </tr>\n    <tr>\n      <td>b7a.observability.tracing. jaeger.reporter.max.buffer.spans</td>\n      <td>Queue size of the Jaeger client.</td>\n      <td>2000</td>\n      <td>Any positive integer value.</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"using-the-zipkin-client\">Using the Zipkin Client</h4>\n<p>The tracing of Ballerina service can be done via Zipkin as well, but the required dependencies are not included in\ndefault Ballerina distribution. Follow the steps below to add the required dependencies to the Ballerina distribution.</p>\n\n<ol>\n  <li>\n    <p>Go to <a href=\"https://github.com/ballerina-platform/ballerina-observability\">ballerina-observability</a> and clone\nthe GitHub repository in any preferred location.</p>\n  </li>\n  <li>\n    <p>Make sure you have installed <a href=\"http://maven.apache.org/\">Apache Maven</a>.</p>\n  </li>\n  <li>\n    <p>Open the command line and build the repository by using <a href=\"http://maven.apache.org/\">Apache Maven</a> with the command below while being in the root project directory <code class=\"language-plaintext highlighter-rouge\">ballerina-observability</code>.</p>\n  </li>\n</ol>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>mvn clean <span class=\"nb\">install</span>\n</code></pre></div></div>\n\n<ol>\n  <li>\n    <p>Go to the path - <code class=\"language-plaintext highlighter-rouge\">ballerina-observability/tracing-extensions/modules/ballerina-zipkin-extension/target/</code> and\nextract <code class=\"language-plaintext highlighter-rouge\">distribution.zip</code>.</p>\n  </li>\n  <li>\n    <p>Copy all the JAR files inside the <code class=\"language-plaintext highlighter-rouge\">distribution.zip</code> to ‘bre/lib’ directory in the Ballerina distribution.</p>\n  </li>\n  <li>\n    <p>Add following configuration to the <code class=\"language-plaintext highlighter-rouge\">Ballerina.toml</code> of your module.</p>\n  </li>\n</ol>\n\n<div class=\"language-toml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nn\">[platform]</span>\n<span class=\"py\">target</span> <span class=\"p\">=</span> <span class=\"s\">\"java8\"</span>\n\n    <span class=\"nn\">[[platform.libraries]]</span>\n    <span class=\"py\">artifactId</span> <span class=\"p\">=</span> <span class=\"s\">\"ballerina-zipkin-extension\"</span>\n    <span class=\"py\">version</span> <span class=\"p\">=</span> <span class=\"s\">\"1.0.0-rc1-SNAPSHOT\"</span>\n    <span class=\"py\">path</span> <span class=\"p\">=</span> <span class=\"s\">\"/&lt;absolute_path_to&gt;/ballerina-zipkin-extension-1.0.0-rc1-SNAPSHOT.jar\"</span>\n    <span class=\"py\">groupId</span> <span class=\"p\">=</span> <span class=\"s\">\"org.ballerinalang\"</span>\n    <span class=\"py\">modules</span> <span class=\"p\">=</span> <span class=\"nn\">[\"yourModuleName\"]</span>\n\n    <span class=\"nn\">[[platform.libraries]]</span>\n    <span class=\"py\">artifactId</span> <span class=\"p\">=</span> <span class=\"s\">\"brave-opentracing\"</span>\n    <span class=\"py\">version</span> <span class=\"p\">=</span> <span class=\"s\">\"4.17.1\"</span>\n    <span class=\"py\">path</span> <span class=\"p\">=</span> <span class=\"s\">\"/&lt;absolute_path_to&gt;/brave-4.17.1.jar\"</span>\n    <span class=\"py\">groupId</span> <span class=\"p\">=</span> <span class=\"s\">\"io.opentracing.brave\"</span>\n    <span class=\"py\">modules</span> <span class=\"p\">=</span> <span class=\"nn\">[\"yourModuleName\"]</span>\n\n    <span class=\"nn\">[[platform.libraries]]</span>\n    <span class=\"py\">artifactId</span> <span class=\"p\">=</span> <span class=\"s\">\"brave\"</span>\n    <span class=\"py\">version</span> <span class=\"p\">=</span> <span class=\"s\">\"0.29.0\"</span>\n    <span class=\"py\">path</span> <span class=\"p\">=</span> <span class=\"s\">\"/&lt;absolute_path_to&gt;/brave-opentracing-0.29.0.jar\"</span>\n    <span class=\"py\">groupId</span> <span class=\"p\">=</span> <span class=\"s\">\"io.zipkin.brave\"</span>\n    <span class=\"py\">modules</span> <span class=\"p\">=</span> <span class=\"nn\">[\"yourModuleName\"]</span>\n\n    <span class=\"nn\">[[platform.libraries]]</span>\n    <span class=\"py\">artifactId</span> <span class=\"p\">=</span> <span class=\"s\">\"zipkin-reporter\"</span>\n    <span class=\"py\">version</span> <span class=\"p\">=</span> <span class=\"s\">\"2.6.1\"</span>\n    <span class=\"py\">path</span> <span class=\"p\">=</span> <span class=\"s\">\"/&lt;absolute_path_to&gt;/zipkin-2.6.1.jar\"</span>\n    <span class=\"py\">groupId</span> <span class=\"p\">=</span> <span class=\"s\">\"io.zipkin.reporter2\"</span>\n    <span class=\"py\">modules</span> <span class=\"p\">=</span> <span class=\"nn\">[\"yourModuleName\"]</span>\n\n    <span class=\"nn\">[[platform.libraries]]</span>\n    <span class=\"py\">artifactId</span> <span class=\"p\">=</span> <span class=\"s\">\"zipkin\"</span>\n    <span class=\"py\">version</span> <span class=\"p\">=</span> <span class=\"s\">\"2.5.0\"</span>\n    <span class=\"py\">path</span> <span class=\"p\">=</span> <span class=\"s\">\"/&lt;absolute_path_to&gt;/zipkin-reporter-2.5.0.jar\"</span>\n    <span class=\"py\">groupId</span> <span class=\"p\">=</span> <span class=\"s\">\"io.zipkin.zipkin2\"</span>\n    <span class=\"py\">modules</span> <span class=\"p\">=</span> <span class=\"nn\">[\"yourModuleName\"]</span>\n\n    <span class=\"nn\">[[platform.libraries]]</span>\n    <span class=\"py\">artifactId</span> <span class=\"p\">=</span> <span class=\"s\">\"zipkin-sender-okhttp3\"</span>\n    <span class=\"py\">version</span> <span class=\"p\">=</span> <span class=\"s\">\"2.5.0\"</span>\n    <span class=\"py\">path</span> <span class=\"p\">=</span> <span class=\"s\">\"/&lt;absolute_path_to&gt;/zipkin-sender-okhttp3-2.5.0.jar\"</span>\n    <span class=\"py\">groupId</span> <span class=\"p\">=</span> <span class=\"s\">\"io.zipkin.reporter2\"</span>\n    <span class=\"py\">modules</span> <span class=\"p\">=</span> <span class=\"nn\">[\"yourModuleName\"]</span>\n\n    <span class=\"nn\">[[platform.libraries]]</span>\n    <span class=\"py\">artifactId</span> <span class=\"p\">=</span> <span class=\"s\">\"zipkin-sender-urlconnection\"</span>\n    <span class=\"py\">version</span> <span class=\"p\">=</span> <span class=\"s\">\"2.5.0\"</span>\n    <span class=\"py\">path</span> <span class=\"p\">=</span> <span class=\"s\">\"/&lt;absolute_path_to&gt;/zipkin-sender-urlconnection-2.5.0.jar\"</span>\n    <span class=\"py\">groupId</span> <span class=\"p\">=</span> <span class=\"s\">\"io.zipkin.reporter2\"</span>\n    <span class=\"py\">modules</span> <span class=\"p\">=</span> <span class=\"nn\">[\"yourModuleName\"]</span>\n\n    <span class=\"nn\">[[platform.libraries]]</span>\n    <span class=\"py\">artifactId</span> <span class=\"p\">=</span> <span class=\"s\">\"kotlin-stdlib\"</span>\n    <span class=\"py\">version</span> <span class=\"p\">=</span> <span class=\"s\">\"1.3.31\"</span>\n    <span class=\"py\">path</span> <span class=\"p\">=</span> <span class=\"s\">\"/&lt;absolute_path_to&gt;/kotlin-stdlib-1.3.31.jar\"</span>\n    <span class=\"py\">groupId</span> <span class=\"p\">=</span> <span class=\"s\">\"org.jetbrains.kotlin\"</span>\n    <span class=\"py\">modules</span> <span class=\"p\">=</span> <span class=\"nn\">[\"yourModuleName\"]</span>\n</code></pre></div></div>\n\n<ol>\n  <li>Change the following configuration name to Zipkin. This ensures that all tracers are sent to Zipkin instead\nof the default Jaeger tracer.</li>\n</ol>\n\n<div class=\"language-toml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nn\">[b7a.observability.tracing]</span>\n<span class=\"py\">name</span><span class=\"p\">=</span><span class=\"s\">\"zipkin\"</span>\n</code></pre></div></div>\n\n<ol>\n  <li>The following configuration is a sample configuration option available for Zipkin tracer.</li>\n</ol>\n\n<div class=\"language-toml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nn\">[b7a.observability.tracing.zipkin.reporter]</span>\n<span class=\"py\">hostname</span><span class=\"p\">=</span><span class=\"s\">\"localhost\"</span>\n<span class=\"py\">port</span><span class=\"p\">=</span><span class=\"mi\">9411</span>\n\n<span class=\"nn\">[b7a.observability.tracing.zipkin.reporter.api]</span>\n<span class=\"py\">context</span><span class=\"p\">=</span><span class=\"s\">\"/api/v2/spans\"</span>\n<span class=\"py\">version</span><span class=\"p\">=</span><span class=\"s\">\"v2\"</span>\n\n<span class=\"nn\">[b7a.observability.tracing.zipkin.reporter.compression]</span>\n<span class=\"py\">enabled</span><span class=\"p\">=</span><span class=\"kc\">true</span>\n</code></pre></div></div>\n\n<p>The table below provides the descriptions of each configuration option and possible values that can be assigned.</p>\n\n<table>\n  <thead>\n    <tr>\n      <th>Configuration Key</th>\n      <th>Description</th>\n      <th>Default Value</th>\n      <th>Possible Values</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>b7a.observability.tracing.zipkin. reporter.hostname</td>\n      <td>Hostname of the Zipkin server</td>\n      <td>localhost</td>\n      <td>IP or hostname of the Zipkin server. If it is running on the same node as Ballerina, it can be localhost.</td>\n    </tr>\n    <tr>\n      <td>b7a.observability.tracing.zipkin. reporter.port</td>\n      <td>Port of the Zipkin server</td>\n      <td>9411</td>\n      <td>The port that the Zipkin server is listening to.</td>\n    </tr>\n    <tr>\n      <td>b7a.observability.tracing.zipkin. reporter.api.context</td>\n      <td>API context of the Zipkin server</td>\n      <td><code class=\"language-plaintext highlighter-rouge\">/api/v2/spans</code></td>\n      <td>The API context of the Zipkin API. For V1 API, the context will be <code class=\"language-plaintext highlighter-rouge\">/api/v1/spans</code>, and for V2 API, the context will be <code class=\"language-plaintext highlighter-rouge\">/api/v2/spans</code> for default Zipkin server.</td>\n    </tr>\n    <tr>\n      <td>b7a.observability.tracing.zipkin. reporter.api.version</td>\n      <td>API version of the Zipkin API</td>\n      <td>v2</td>\n      <td>v1 or v2.</td>\n    </tr>\n    <tr>\n      <td>b7a.observability.tracing.zipkin. reporter.compression.enabled</td>\n      <td>Enable the compression for the spans request</td>\n      <td>true</td>\n      <td>true or false.</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"setting-up-the-external-systems-for-tracing\">Setting Up the External Systems for Tracing</h3>\n<p>Ballerina by default supports Jaerger and Zipkin for distributed tracing. This section focuses on configuring the\nJaeger and Zipkin with Dockers as a quick installation.</p>\n\n<h4 id=\"setting-up-the-jaeger-server\">Setting Up the Jaeger Server</h4>\n<p>Jaeger is the default distributed tracing system that is supported. There are many possible ways to deploy Jaeger and you can find more information on this <a href=\"https://www.jaegertracing.io/docs/deployment/\">link</a>. Here we focus on all in one deployment with Docker.</p>\n\n<ol>\n  <li>Install Jaeger via Docker and start the Docker container by executing the command below.</li>\n</ol>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>docker run <span class=\"nt\">-d</span> <span class=\"nt\">-p5775</span>:5775/udp <span class=\"nt\">-p6831</span>:6831/udp <span class=\"nt\">-p6832</span>:6832/udp <span class=\"nt\">-p5778</span>:5778 <span class=\"nt\">-p16686</span>:16686 <span class=\"nt\">-p14268</span>:14268 jaegertracing/all-in-one:latest\n</code></pre></div></div>\n\n<ol>\n  <li>Go to <a href=\"http://localhost:16686\">http://localhost:16686</a> and load the web UI of the Jaeger to make sure it is functioning properly.</li>\n</ol>\n\n<p>The image below is the sample tracing information you can see from Jaeger.</p>\n\n<p><img src=\"../images/jaeger-tracing-dashboard.png\" alt=\"Jaeger Tracing Dashboard\" title=\"Jaeger Tracing Dashboard\" /></p>\n\n<h4 id=\"setting-up-the-zipkin-server\">Setting Up the Zipkin Server</h4>\n<p>Similar to Jaeger, Zipkin is another distributed tracing system that is supported by the Ballerina. There are many\ndifferent configurations and deployment exist for Zipkin, please go to <a href=\"https://github.com/openzipkin/zipkin\">link</a>\nfor more information. Here we focus on all in one deployment with Docker.</p>\n\n<ol>\n  <li>Install Zipkin via Docker and start the Docker container by executing following command.</li>\n</ol>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>docker run <span class=\"nt\">-d</span> <span class=\"nt\">-p</span> 9411:9411 openzipkin/zipkin\n</code></pre></div></div>\n\n<ol>\n  <li>Go to <a href=\"http://localhost:9411/zipkin/\">http://localhost:9411/zipkin/</a> and load the web UI of the Zipkin to make sure it is functioning\nproperly. The sample Zipkin dashboard for the hello world sample in the <a href=\"/1.2/learn/quick-tour\">Quick Start</a> is shown below.</li>\n</ol>\n\n<p><img src=\"../images/zipkin-sample.png\" alt=\"Zipkin Sample\" title=\"Zipkin Sample\" /></p>\n\n<h2 id=\"distributed-logging\">Distributed Logging</h2>\n<p>Ballerina distributed logging and analysis is supported by Elastic Stack. Ballerina has a log module for logging in to the console. In order to monitor the logs, the Ballerina standard output needs to be redirected to a file.</p>\n\n<p>This can be done by running the Ballerina service as below.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">nohup </span>ballerina run hello_world_service.bal <span class=\"o\">&gt;</span> ballerina.log &amp;\n</code></pre></div></div>\n\n<p>You can view the logs with command below.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">tail</span> <span class=\"nt\">-f</span> ~/wso2-ballerina/workspace/ballerina.log\n</code></pre></div></div>\n\n<h3 id=\"setting-up-the-external-systems-for-log-analytics\">Setting Up the External Systems for Log Analytics</h3>\n\n<h4 id=\"setting-up-elastic-stack\">Setting Up Elastic Stack</h4>\n<p>The elastic stack comprises of the following components.</p>\n\n<ol>\n  <li>Beats - Multiple agents that ship data to Logstash or Elasticsearch. In our context, Filebeat will ship the Ballerina logs to Logstash. Filebeat should be a container running on the same host as the Ballerina service. This is so that the log file (ballerina.log) can be mounted to the Filebeat container.</li>\n  <li>Logstash - Used to process and structure the log files received from Filebeat and send them to Elasticsearch.</li>\n  <li>Elasticsearch - Storage and indexing of the logs received by Logstash.</li>\n  <li>Kibana - Visualizes the data stored in Elasticsearch</li>\n</ol>\n\n<p>Elasticsearch and Kibana are provided as <a href=\"https://www.elastic.co/cloud\">Cloud Services</a>\nAlternatively, Docker containers can be used to set up Elasticsearch and Kibana as well.</p>\n\n<ol>\n  <li>Download the Docker images using the following commands.</li>\n</ol>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\"># Elasticsearch Image</span>\n<span class=\"nv\">$ </span>docker pull docker.elastic.co/elasticsearch/elasticsearch:6.5.1\n<span class=\"c\"># Kibana Image</span>\n<span class=\"nv\">$ </span>docker pull docker.elastic.co/kibana/kibana:6.5.1\n<span class=\"c\"># Filebeat Image</span>\n<span class=\"nv\">$ </span>docker pull docker.elastic.co/beats/filebeat:6.5.1\n<span class=\"c\"># Logstash Image</span>\n<span class=\"nv\">$ </span>docker pull docker.elastic.co/logstash/logstash:6.5.1\n</code></pre></div></div>\n\n<ol>\n  <li>Start Elasticsearch and Kibana containers by executing the following commands.</li>\n</ol>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>docker run <span class=\"nt\">-p</span> 9200:9200 <span class=\"nt\">-p</span> 9300:9300 <span class=\"nt\">-it</span> <span class=\"nt\">-h</span> elasticsearch <span class=\"nt\">--name</span> elasticsearch docker.elastic.co/elasticsearch/elasticsearch:6.5.1\n<span class=\"nv\">$ </span>docker run <span class=\"nt\">-p</span> 5601:5601 <span class=\"nt\">-h</span> kibana <span class=\"nt\">--name</span> kibana <span class=\"nt\">--link</span> elasticsearch:elasticsearch docker.elastic.co/kibana/kibana:6.5.1\n</code></pre></div></div>\n\n<p>If you run on Linux you may have to increase the <code class=\"language-plaintext highlighter-rouge\">vm.max_map_count</code> for the Elasticsearch container to start. \nExecute the following command to do that.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">sudo </span>sysctl <span class=\"nt\">-w</span> vm.max_map_count<span class=\"o\">=</span>262144\n</code></pre></div></div>\n\n<ol>\n  <li>Create a <code class=\"language-plaintext highlighter-rouge\">logstash.conf</code> file in the <code class=\"language-plaintext highlighter-rouge\">/tmp/pipeline/</code> directory and include the following content in the file.</li>\n</ol>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>input {\n  beats {\n    port =&gt; 5044\n    }\n}\nfilter {\n  grok  {\n    match =&gt; { \"message\" =&gt; \"%{TIMESTAMP_ISO8601:date}%{SPACE}%{WORD:logLevel}%{SPACE}\\[%{GREEDYDATA:module}\\]%{SPACE}\\-%{SPACE}%{GREEDYDATA:logMessage}\"}\n  }\n}\noutput {\n    elasticsearch {\n        hosts =&gt; \"elasticsearch:9200\"\n        index =&gt; \"ballerina\"\n      document_type =&gt; \"ballerina_logs\"\n    }\n}\n</code></pre></div></div>\n\n<p>Here the 3 stages are specified in the pipeline. Input is specified as beats and listens to port 5044. \nA grok filter is used to structure the Ballerina logs and the output is specified to push to Elasticsearch on\n<code class=\"language-plaintext highlighter-rouge\">elasticsearch:9200</code>.</p>\n\n<ol>\n  <li>Start the Logstash container by the following command.</li>\n</ol>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>docker run <span class=\"nt\">-h</span> logstash <span class=\"nt\">--name</span> logstash <span class=\"nt\">--link</span> elasticsearch:elasticsearch <span class=\"nt\">-it</span> <span class=\"nt\">--rm</span> <span class=\"nt\">-v</span> /tmp/pipeline:/usr/share/logstash/pipeline/ <span class=\"nt\">-p</span> 5044:5044 docker.elastic.co/logstash/logstash:6.5.1\n</code></pre></div></div>\n\n<ol>\n  <li>Configure Filebeat to ship the Ballerina logs. Create a <code class=\"language-plaintext highlighter-rouge\">filebeat.yml</code> file in the <code class=\"language-plaintext highlighter-rouge\">/tmp/</code> directory and include the following content in the file.</li>\n</ol>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>filebeat.prospectors:\n- type: log\n  paths:\n    - /usr/share/filebeat/ballerina.log\noutput.logstash:\n  hosts: [\"logstash:5044\"]\n</code></pre></div></div>\n\n<ol>\n  <li>Start the Filebeat container with the following command.</li>\n</ol>\n\n<p>The <code class=\"language-plaintext highlighter-rouge\">-v</code> flag is used for bind mounting, where the container will read the file from the host machine. Provide the path to the ballerina.log file, to be bind-mounted to the filebeat container.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>docker run <span class=\"nt\">-v</span> /tmp/filebeat.yml:/usr/share/filebeat/filebeat.yml <span class=\"nt\">-v</span> /&lt;path-to-ballerina.log&gt;/ballerina.log:/usr/share/filebeat/ballerina.log <span class=\"nt\">--link</span> logstash:logstash docker.elastic.co/beats/filebeat:6.5.1\n</code></pre></div></div>\n\n<ol>\n  <li>Access Kibana to visualize the logs at <a href=\"http://localhost:5601\">http://localhost:5601</a>. Add an index named <code class=\"language-plaintext highlighter-rouge\">ballerina</code> and click on <code class=\"language-plaintext highlighter-rouge\">Discover</code> to visualize the logs.</li>\n</ol>\n\n\n   \n                                 </div>\n\n                                \n\n\n                         \n\n\n\n                              </div>\n                           </div>\n                        </div>\n                     </div>\n                     <a class=\"cTopLink\" href=\"#top\">Back to Top &#x2934;</a>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n      <div id=\"iBallerinaFooter\" class=\"row cBallerina-io-White-row\">\n    <div class=\"container\">\n    <div class=\"col-xs-12 col-sm-12 col-md-3 col-lg-3 cBallerina-io-left-col cBallerinaFooterLinks\">\n        <ul>\n            <li><a class=\"cBioFooterLink\" href=\"/downloads\">DOWNLOAD</a></li>\n            <!--<li><a class=\"cBioFooterLink\" href=\"/community/#report-issues\">REPORT ISSUES</a></li>-->\n            <li data-toggle=\"modal\" data-target=\"#reportissues\" data-whatever=\"@mdo\"><a href=\"/community/#report-issues\">REPORT ISSUES</a></li>\n            <li><a class=\"cBioFooterLink\" href=\"https://github.com/ballerina-lang/ballerina/blob/master/LICENSE\">CODE LICENSE</a></li>\n            <li><a class=\"cBioFooterLink\" href=\"/license-of-site\">SITE LICENSE</a></li>\n            <li><a class=\"cBioFooterLink\" href=\"/terms-of-service\">TERMS OF SERVICE</a></li>\n            <li><a class=\"cBioFooterLink\" href=\"/privacy-policy\">PRIVACY POLICY</a></li>\n            <li><a class=\"cBioFooterLink\" href=\"/trademark-usage-policy/\">TRADEMARK USAGE POLICY</a></li>\n            </ul>\n        </div>\n    <div class=\"col-xs-12 col-sm-12 col-md-3 col-lg-3 cBallerina-io-middle-col cBallerinaFooterSignUp\">\n        <div class=\"cSocialmedia\">\n            <ul>\n                <li>\n                    <a class=\"cBioFooterLink\" href=\"https://github.com/ballerina-platform\" target=\"_blank\"><img src=\"/img/github.svg\"/></a>\n                    </li>\n                <li><a class=\"cBioFooterLink\" href=\"https://stackoverflow.com/questions/tagged/ballerina\" target=\"_blank\"><img src=\"/img/stackoverflow.svg\"/></a></li>\n                <li><a class=\"cBioFooterLink\" href=\"https://twitter.com/ballerinalang\" target=\"_blank\"><img src=\"/img/twitter.svg\"/></a></li>\n                <li><a class=\"cBioFooterLink\" href=\"/community/slack/\"><img src=\"/img/slack.svg\"/></a></li>\n                <li><a class=\"cBioFooterLink\" href=\"https://www.youtube.com/c/Ballerinalang\"><img style=\"width: 15px;\" src=\"/img/youtube-icon.svg\"/></a></li>\n                </ul>\n            <div class=\"pdframe\"></div>\n            </div>\n\n\n           <a class=\"cNLButton\" href=\"/community/#subscribe-to-the-newsletter\">Subscribe to the newsletter</a> \n\n           <div class=\"modal fade\" id=\"reportissues\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"reportissueslabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog\" role=\"document\">\n              <div class=\"modal-content\" style=\"padding:15px;border-radius:0px;\">\n                <div class=\"modal-header\">\n                  <h3 class=\"modal-title\" style=\"color: #20b6b0;\">Report Issues</h3>\n                  <p style=\"padding: 10px 0px ;\">Report issues in the GitHub repositories of the areas and components listed below.\n                  </p>\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <div class=\"modal-body\" style=\"background-color: #fff; font-size: 20; color: #465867;font-size: 20px;\">\n                  <ul class=\"b\">\n                    <li><a class=\"linkText\" href=\"https://github.com/ballerina-platform/ballerina-lang/issues/new/choose\" target=\"_blank\"> Compiler, runtime, or tooling</a></li>\n                    <li><a class=\"linkText\" href=\"https://github.com/ballerina-platform/ballerina-standard-library/issues\" target=\"_blank\"> Standard Library</a></li>\n                    <li><a class=\"linkText\" href=\"https://github.com/ballerina-platform/ballerina-standard-library/issues/new/choose\" target=\"_blank\">  Language specification</a></li>\n                    <li><a class=\"linkText\" href=\"https://github.com/ballerina-platform/ballerina-dev-website/issues/new/choose\" target=\"_blank\">  Website</a></li>\n                    <li><a class=\"linkText\" href=\"mailto:security@ballerina.io\" target=\"_blank\">Security</a> <span style=\"font-size: 16px;\">(For details, see the</span> <a class=\"linkText\" href=\"/security\" target=\"_blank\">security policy</a>.)</li>\n                  </ul>  \n                \n                </div>\n                <div class=\"modal-footer\">\n                 \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n    <div class=\"col-xs-12 col-sm-10 col-md-6 col-lg-6 cBallerina-io-right-col\">\n        <p>In the creation of Ballerina, we were inspired by so many technologies. Thank you to all that have come before us (and forgive us if we missed one): Java, Go, C, C++, D, Rust, Haskell, Kotlin, Dart, TypeScript, JavaScript, Python, Perl, Flow, Swift, Elm, RelaxNG, NPM, Crates, Maven, Gradle, Kubernetes, Docker, Envoy, Markdown, GitHub and WSO2.</p></div>\n    </div>\n</div>\n\n<div class=\"cCookie-Policy\">\n    <div class=\"container\">\n        <div class=\"col-xs-12 col-sm-12 col-lg-12\">\n            <!-- <div class=\"closebuttoon\"><img src=\"/img/close-w.svg\"/></div> -->\n<h4>Cookie policy</h4>\n<p>This website uses cookies so that we can provide you with the best user experience. Read our <a href=\"https://ballerina.io/cookie-policy/\">Cookie policy</a></a> to find out more.</p>\n<p>If you wish to disable cookies you can do so from your browser. </p>\n  \n<!-- <a href=\"https://ballerina.io/cookie-policy/\"></a> -->\n<a class=\"cIUnderstand \">I understand </a>\n        </div>\n    </div>\n</div>\n\n\n\n\n\n<script src=\"/js/prism.js\"></script>\n<!-- <script src=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.14.0/components/prism-core.min.js\"></script> -->\n<script src=\"/js/prism-ballerina.js\"></script>\n\n\n\n<script>\n\n$(\".cIUnderstand \").click(function() {\n    $(\".cCookie-Policy\").addClass('cHide-Policy');\n   \n    \n});\n\n\n\n</script>\n\n\n<!-- \n<script>\n    (function () {\n\nif (typeof self === 'undefined' || !self.Prism || !self.document) {\n    return;\n}\n\n/**\n * Plugin name which is used as a class name for <pre> which is activating the plugin\n * @type {String}\n */\nvar PLUGIN_NAME = 'line-numbers';\n\n/**\n * Regular expression used for determining line breaks\n * @type {RegExp}\n */\nvar NEW_LINE_EXP = /\\n(?!$)/g;\n\n/**\n * Resizes line numbers spans according to height of line of code\n * @param {Element} element <pre> element\n */\nvar _resizeElement = function (element) {\n    var codeStyles = getStyles(element);\n    var whiteSpace = codeStyles['white-space'];\n\n    if (whiteSpace === 'pre-wrap' || whiteSpace === 'pre-line') {\n        var codeElement = element.querySelector('code');\n        var lineNumbersWrapper = element.querySelector('.line-numbers-rows');\n        if (!codeElement || !lineNumbersWrapper) {\n            return;\n        }\n        var lineNumberSizer = element.querySelector('.line-numbers-sizer');\n        var codeLines = codeElement.textContent.split(NEW_LINE_EXP);\n\n        if (!lineNumberSizer) {\n            lineNumberSizer = document.createElement('span');\n            lineNumberSizer.className = 'line-numbers-sizer';\n\n            codeElement.appendChild(lineNumberSizer);\n        }\n\n        lineNumberSizer.style.display = 'block';\n\n        codeLines.forEach(function (line, lineNumber) {\n            lineNumberSizer.textContent = line || '\\n';\n            var lineSize = lineNumberSizer.getBoundingClientRect().height;\n            lineNumbersWrapper.children[lineNumber].style.height = lineSize + 'px';\n        });\n\n        lineNumberSizer.textContent = '';\n        lineNumberSizer.style.display = 'none';\n    }\n};\n\n/**\n * Returns style declarations for the element\n * @param {Element} element\n */\nvar getStyles = function (element) {\n    if (!element) {\n        return null;\n    }\n\n    return window.getComputedStyle ? getComputedStyle(element) : (element.currentStyle || null);\n};\n\nwindow.addEventListener('resize', function () {\n    Array.prototype.forEach.call(document.querySelectorAll('pre.' + PLUGIN_NAME), _resizeElement);\n});\n\nPrism.hooks.add('complete', function (env) {\n    if (!env.code) {\n        return;\n    }\n\n    var code = env.element;\n    var pre = code.parentNode;\n\n    // works only for <code> wrapped inside <pre> (not inline)\n    if (!pre || !/pre/i.test(pre.nodeName)) {\n        return;\n    }\n\n    // Abort if line numbers already exists\n    if (code.querySelector('.line-numbers-rows')) {\n        return;\n    }\n\n    var addLineNumbers = false;\n    var lineNumbersRegex = /(?:^|\\s)line-numbers(?:\\s|$)/;\n\n    for (var element = code; element; element = element.parentNode) {\n        if (lineNumbersRegex.test(element.className)) {\n            addLineNumbers = true;\n            break;\n        }\n    }\n\n    // only add line numbers if <code> or one of its ancestors has the `line-numbers` class\n    if (!addLineNumbers) {\n        return;\n    }\n\n    // Remove the class 'line-numbers' from the <code>\n    code.className = code.className.replace(lineNumbersRegex, ' ');\n    // Add the class 'line-numbers' to the <pre>\n    if (!lineNumbersRegex.test(pre.className)) {\n        pre.className += ' line-numbers';\n    }\n\n    var match = env.code.match(NEW_LINE_EXP);\n    var linesNum = match ? match.length + 1 : 1;\n    var lineNumbersWrapper;\n\n    var lines = new Array(linesNum + 1).join('<span></span>');\n\n    lineNumbersWrapper = document.createElement('span');\n    lineNumbersWrapper.setAttribute('aria-hidden', 'true');\n    lineNumbersWrapper.className = 'line-numbers-rows';\n    lineNumbersWrapper.innerHTML = lines;\n\n    if (pre.hasAttribute('data-start')) {\n        pre.style.counterReset = 'linenumber ' + (parseInt(pre.getAttribute('data-start'), 10) - 1);\n    }\n\n    env.element.appendChild(lineNumbersWrapper);\n\n    _resizeElement(pre);\n\n    Prism.hooks.run('line-numbers', env);\n});\n\nPrism.hooks.add('line-numbers', function (env) {\n    env.plugins = env.plugins || {};\n    env.plugins.lineNumbers = true;\n});\n\n/**\n * Global exports\n */\nPrism.plugins.lineNumbers = {\n    /**\n     * Returns the node of the given line number in the given element.\n     * @param {Element} element A `<pre>` element with line numbers.\n     * @param {Number} number\n     * @returns {Element | undefined}\n     */\n    getLine: function (element, number) {\n        if (element.tagName !== 'PRE' || !element.classList.contains(PLUGIN_NAME)) {\n            return;\n        }\n\n        var lineNumberRows = element.querySelector('.line-numbers-rows');\n        var lineNumberStart = parseInt(element.getAttribute('data-start'), 10) || 1;\n        var lineNumberEnd = lineNumberStart + (lineNumberRows.children.length - 1);\n\n        if (number < lineNumberStart) {\n            number = lineNumberStart;\n        }\n        if (number > lineNumberEnd) {\n            number = lineNumberEnd;\n        }\n\n        var lineIndex = number - lineNumberStart;\n\n        return lineNumberRows.children[lineIndex];\n    },\n    /**\n     * Resizes the line numbers of the given element.\n     *\n     * This function will not add line numbers. It will only resize existing ones.\n     * @param {Element} element A `<pre>` element with line numbers.\n     * @returns {void}\n     */\n    resize: function (element) {\n        _resizeElement(element);\n    }\n};\n\n}());\n</script> -->\n\n<!-- \n<style>\n    pre[class*=\"language-\"].line-numbers {\n\tposition: relative;\n\tpadding-left: 3.8em;\n\tcounter-reset: linenumber;\n}\n\npre[class*=\"language-\"].line-numbers > code {\n\tposition: relative;\n\twhite-space: inherit;\n}\n\n.line-numbers .line-numbers-rows {\n\tposition: absolute;\n\tpointer-events: none;\n\ttop: 0;\n\tfont-size: 100%;\n\tleft: -3.8em;\n\twidth: 3em; /* works for line-numbers below 1000 lines */\n\tletter-spacing: -1px;\n\tborder-right: 1px solid #999;\n\n\t-webkit-user-select: none;\n\t-moz-user-select: none;\n\t-ms-user-select: none;\n\tuser-select: none;\n\n}\n\n\t.line-numbers-rows > span {\n\t\tdisplay: block;\n\t\tcounter-increment: linenumber;\n\t}\n\n\t\t.line-numbers-rows > span:before {\n\t\t\tcontent: counter(linenumber);\n\t\t\tcolor: #999;\n\t\t\tdisplay: block;\n\t\t\tpadding-right: 0.8em;\n\t\t\ttext-align: right;\n\t\t}\n</style> -->\n\n      <script src=\"/js/theme.js\"></script>\n      <script>\n         $(document).ready(function () {\n            var gitstar = '<iframe id=\"iGitStarIframe\" src=\"https://ghbtns.com/github-btn.html?user=ballerina-platform&repo=ballerina-lang&type=star&count=true&size=small\" frameborder=\"0\" scrolling=\"0\"></iframe>';\n            $('[data-button=\"iGitStarText\"]').replaceWith(gitstar);\n         \n            var gitwatch = '<iframe id=\"iGitWatchIframe\" src=\"https://ghbtns.com/github-btn.html?user=ballerina-platform&repo=ballerina-lang&type=watch&count=true&size=lsmalle&v=2\" frameborder=\"0\" scrolling=\"0\"></iframe>';\n            $('[data-button=\"iGitWatchText\"]').replaceWith(gitwatch);\n         \n         });\n         \n     </script>\n     <script src=\"/js/ballerina-leftnav.js\"></script>\n\n     <script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\n     <script src=\"/js/abixTreeList.min.js\"></script>\n     <script>\n         $(document).ready(function() {\n             $('#tree').abixTreeList();\n         });\n\n\n\n\n\n         $(window).scroll(function () {\n        var bodyclass = document.body;\n\n        if ($(this).scrollTop() > 200) {\n            $('.cTopLink').removeClass('dispalaynone');\n          \n        } else {\n            $('.cTopLink').addClass('dispalaynone');\n          \n        }\n\n   \n\n\n    });\n\n     </script>\n\n\n\n\n   </body>\n</html>\n\n","id":"index"},"__N_SSG":true}