{"pageProps":{"frontmatter":{},"content":"\n\n<!DOCTYPE html>\n<html class=\"no-js\">\n<head>\n    <meta charset=\"utf-8\" />\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\n<meta\n  name=\"description\"\n  content=\"Documentation for the Ballerina Programming Language\"\n/>\n\n<meta name=\"author\" content=\"WSO2, Inc.\" />\n\n<meta\n  name=\"keywords\"\n  content=\"ballerinalang, integration, microservices, programming language, cloud native, ballerina language\"\n/>\n\n<link rel=\"shortcut icon\" href=\"/img/favicon.ico\" />\n<title>JDBC Query with Complex Types</title>\n<!-- Global site tag (gtag.js) - Google Analytics -->\n<script\n  async\n  src=\"https://www.googletagmanager.com/gtag/js?id=UA-92163714-2\"\n></script>\n<!--FB-->\n<meta property=\"og:type\" content=\"article\" />\n<meta property=\"og:title\" content=\"Ballerina - JDBC Query with Complex Types\" />\n<meta property=\"og:description\" content=\"\" />\n<meta\n  property=\"og:image\"\n  content=\"https://ballerina.io/img/ballerina-swan-lake-sm-banner-general.png\"/>\n<!--TWITTER-->\n<meta name=\"twitter:card\" content=\"summary\" />\n<meta name=\"twitter:site\" content=\"@ballerinalang\" />\n<meta name=\"twitter:creator\" content=\"@ballerinalang\" />\n<meta name=\"twitter:title\" content=\"Ballerina\" />\n<meta name=\"twitter:description\" content=\"\" />\n<meta\n  name=\"twitter:image\"\n  content=\"https://ballerina.io/img/ballerina-swan-lake-sm-banner-general.png\"/>\n<meta name=\"twitter:text:description\" content=\"\" />\n<meta name=\"twitter:card\" content=\"summary_large_image\" />\n<meta name=\"twitter:image:width\" content=\"610\" />\n<!--LINKED IN  -->\n<meta property=\"og:title\" content=\"Ballerina\" />\n<meta\n  property=\"og:image\"\n  content=\"https://ballerina.io/img/ballerina-swan-lake-sm-banner-general.png\"/>\n<meta property=\"og:description\" content=\"\" />\n<script>\n  window.dataLayer = window.dataLayer || [];\n  function gtag() {\n    dataLayer.push(arguments);\n  }\n  gtag(\"js\", new Date());\n  gtag(\"config\", \"UA-92163714-2\");\n</script>\n<!-- Google Tag Manager -->\n<script>\n  (function (w, d, s, l, i) {\n    w[l] = w[l] || [];\n    w[l].push({\n      \"gtm.start\": new Date().getTime(),\n      event: \"gtm.js\",\n    });\n    var f = d.getElementsByTagName(s)[0],\n      j = d.createElement(s),\n      dl = l != \"dataLayer\" ? \"&l=\" + l : \"\";\n    j.async = true;\n    j.src = \"https://www.googletagmanager.com/gtm.js?id=\" + i + dl;\n    f.parentNode.insertBefore(j, f);\n  })(window, document, \"script\", \"dataLayer\", \"GTM-PSL2TX4\");\n</script>\n<!-- End Google Tag Manager -->\n\n<!--copy to clipboard lib-->\n<script src=\"/js/clipboard.js-2.0.0/clipboard.min.js\"></script>\n\n<script src=\"/js/latest-jquery.js\"></script>\n<script>\n  var base_url = \"\";\n</script>\n<link\n  rel=\"stylesheet\"\n  href=\"//maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\"\n  integrity=\"sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu\"\n  crossorigin=\"anonymous\"\n/>\n<!-- Optional theme -->\n<link\n  rel=\"stylesheet\"\n  href=\"//maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap-theme.min.css\"\n  integrity=\"sha384-6pzBo3FDv/PJ8r2KRkGHifhEocL+1X2rVCTTkUfGk7/0pbek5mMa1upzvWbrUbOZ\"\n  crossorigin=\"anonymous\"\n/>\n<!-- Latest compiled and minified JavaScript -->\n<script\n  src=\"//maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"\n  integrity=\"sha384-aJ21OjlMXNL5UyIl/XNwTMqvzeRMZH2w8c5cRVpzpU8Y5bApTppSuUkhZXN0VxHd\"\n  crossorigin=\"anonymous\"\n></script>\n<!-- <link rel=\"stylesheet\" href=\"https://use.typekit.net/son4ymv.css\"> -->\n\n<!-- <script type=\"text/javascript\" src=\"/js/highlight.pack.js\"></script> -->\n\n<link rel=\"stylesheet\" href=\"/css/prism.css\">\n\n<script src=\"/js/ballerina-common.js\"></script>\n<link rel=\"stylesheet\" href=\"/css/ballerina-io.css\" />\n<link rel=\"stylesheet\" href=\"/css/ballerina-io-bbe.css\" />\n<link rel=\"stylesheet\" href=\"/css/bbe-page.css\" />\n<script>\n  // Current page data\n  var mkdocs_page_name = '\"Home\"'.replace(/^\"|\"$/g, \"\");\n  var mkdocs_page_input_path = '\"index.md\"'.replace(/^\"|\"$/g, \"\");\n  var mkdocs_page_url = '\"/\"'.replace(/^\"|\"$/g, \"\");\n\n  var releaseNoteFilename = \"RELEASE_NOTE.html\";\n\n  var nightly_download_url = \"https://product-dist.ballerina.io/nightly\";\n  var dev_download_url = \"https://product-dist.ballerina.io/dev\";\n  var base_download_url = \"https://dist.ballerina.io/downloads\";\n\n  $(document).ready(function () {\n    $(\"table\").removeClass(\"table-striped\");\n    $(\".ballerina\").addClass(\"language-ballerina\");\n    $(\"pre\").addClass(\"language-ballerina\");\n  });\n</script>\n\n</head>\n<body class=\"cBallerina-io\">\n    <header data-plugin-header=\"line-numbers\"></header>\n<style>\n    .cVersionChangeBanner{\n    color: #000000;\n    background-color: #fcdf4a !important;\n    width: 100%;\n    display: inline-block;\n    padding: 10px 0px;\n    text-align: center;\n    font-weight: 500;\n    font-size: 20px;\n    transition : all 0.3s;\n    position: fixed;\n    top: 0;\n    width: 100%;\n    height: 50px;\n    z-index: 9;\n    }\n    .cInfoBannerLink{\n        color: #000000;\n        text-decoration: underline;\n    }\n    .cInfoBannerLink:hover{\n        color: #545454 !important;\n        text-decoration: underline !important;\n    }\n    .cBallerina-io-Gray-row {\n       padding-top: 70px !important;\n    }\n    @media only screen and (max-width: 992px) {\n        .cBallerina-io-Gray-row {\n       padding-top: 140px !important;\n    }\n\n    #noscript-warning{\n        position: relative;\n    text-align: center;\n    padding: 7px 15px;\n    background-color: #57595d;\n    color: #fff;\n    font-weight: 500;\n    letter-spacing: 0.5px;\n    }\n</style>\n<noscript>\n    <div id=\"noscript-warning\">Ballerina works best with JavaScript enabled.</div>\n</noscript>\n     <div class=\"cVersionChangeBanner\">\n        This documentation is for Ballerina 1.2.0. <a href=\"https://ballerina.io/learn/\" class=\"cInfoBannerLink\">View documentation for the latest release</a>.\n    </div>\n<div class=\"row cBallerina-io-Nav\" id=\"iMainNavigation\" style=\"top:50px\">\n\n    <div class=\"container\">\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n            <nav class=\"navbar\">\n                <div>\n                    <div class=\"navbar-header\">\n                        <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\"\n                            data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\">\n                            <span class=\"sr-only\">&#9776</span>\n                            <span class=\"icon-bar\"></span>\n                            <span class=\"icon-bar\"></span>\n                            <span class=\"icon-bar\"></span>\n                        </button>\n                        <a class=\"cMobileLogo\" href=\"/\"><img src=\"/img/ballerina-logo.svg\" alt=\"Ballerina\" /></a>\n                    </div>\n                    <div id=\"navbar\" class=\"collapse navbar-collapse\">\n                        <ul class=\"nav navbar-nav cTopNav\">\n                            <li class=\"toctree-l1\" id=\"playli\"><a class=\"cBioTopLink\" href=\"/downloads/\">Download</a>\n                            </li>\n                            <li class=\"toctree-l1\" id=\"playli\"><a class=\"cBioTopLink\" href=\"https://play.ballerina.io/\"\n                                    target=\"_blank\">Playground</a>\n                            </li>\n                            <li class=\"active toctree-l1\" id=\"learnli\"><a class=\"cBioTopLink\" href=\"/learn\">Learn</a>\n                            </li>\n                            <!--<li class=\"active toctree-l1\" id=\"eventsli\"><a class=\"cBioTopLink\" href=\"/learn/events\">Events</a>\n                            </li>-->\n                            <li class=\"toctree-l1\"><a class=\"cBioTopLink\" href=\"https://central.ballerina.io/\"\n                                    target=\"_blank\">Central</a></li>\n                            <li class=\"toctree-l1\" id=\"openli\"><a class=\"cBioTopLink\" href=\"/community\">Community</a>\n                            </li>\n                            <li class=\"toctree-l1\" id=\"helpli\"><a class=\"cBioTopLink\"\n                                    href=\"https://blog.ballerina.io\">Blog</a>\n                            </li>\n                            <li class=\"cVersionItem\">\n                                <div class=\"cVersionContainer\">\n                                    <!-- <lable class=\"cVlable\">Version</lable> -->\n                                    <select name=\"versions\" id=\"versions\" class=\"select-css\">\n                                        <option value=\"swan-lake\" data-value=\"latest\">Swan Lake</option>\n                                        <option value=\"1.2\">v1.2</option>\n                                        <option value=\"1.1\">v1.1</option>\n                                        <option value=\"1.0\">v1.0</option>\n\n                                    </select>\n                                </div>\n                            </li>\n                            <li class=\"cSearchMenu\">\n                               \n                                <!-- at the end of the HEAD -->\n<link\n  rel=\"stylesheet\"\n  href=\"https://cdn.jsdelivr.net/npm/docsearch.js@2/dist/cdn/docsearch.min.css\"\n/>\n<style>\n  .algolia-search-cont {\n    margin-top: -10px;\n  }\n  .algolia-search-wrap {\n    display: flex;\n    align-items: center;\n  }\n  .algolia-search-cont .search-icon {\n    margin-right: 10px;\n  }\n  .algolia-search-cont .algolia-search-box {\n    border: none;\n    background-image: none;\n    background-color: transparent;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n    box-shadow: none;\n    outline: none;\n  }\n</style>\n<div class=\"algolia-search-cont\">\n  <div class=\"algolia-search-wrap form-control\">\n    <span\n      class=\"glyphicon glyphicon-search search-icon\"\n      aria-hidden=\"true\"\n    ></span>\n    <input\n      autocapitalize=\"off\"\n      autocomplete=\"off\"\n      autocorrect=\"off\"\n      placeholder=\"Search...\"\n      role=\"textbox\"\n      spellcheck=\"false\"\n      type=\"text\"\n      value=\"\"\n      class=\"algolia-search-box\"\n      id=\"algolia-search-box\"\n    />\n  </div>\n</div>\n\n<!-- at the end of the BODY -->\n<script\n  type=\"text/javascript\"\n  src=\"https://cdn.jsdelivr.net/npm/docsearch.js@2/dist/cdn/docsearch.min.js\"\n></script>\n<script type=\"text/javascript\">\n  docsearch({\n    apiKey: \"6a63d4bcf6378ddf3f8724185ddcf626\",\n    indexName: \"ballerina\",\n    inputSelector: \"#algolia-search-box\",\n    debug: false, // Set debug to true if you want to inspect the dropdown\n  });\n</script>\n\n                                <!-- <form class=\"cSearch-form-inline\"><input id=\"searchTxt\" class=\"form-control-field\"\n                                        type=\"search\" placeholder=\"Search\" aria-label=\"Search\"><a id=\"searchBtn\"\n                                        href=\"#\" class=\"cSearchButton\"><img src=\"/img/search.svg\" /></a></form> -->\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n        </div>\n    </div>\n</div>\n\n<div class=\"row cBallerina-io-Gray-row\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 cBallerina-io-Home-Middle-col\">\n                <div class=\"col-xs-12 col-sm-12\" style=\"padding: 0;\">\n                    <div class=\"col-md-12 col-lg-10 cBallerina-io-breadcrumbs\">\n                        <nav class=\"breadcrumbs bootstrap hidden-sm-down\"\n  >\n  <ul id=\"breadcrumb-list\" class=\" cBalleinaBreadcrumbs list-unstyled  wy-breadcrumbs\" vocab=\"http://schema.org/\"\n    typeof=\"BreadcrumbList\">\n\n\n    \n    <li><a href=\"/\">Home</a></li>\n    \n    \n    <li>/</li>\n    <li><a\n        href=\"/1.2/\">1.2</a>\n    </li>\n    \n    \n    \n    <li>/</li>\n    <li><a\n        href=\"/1.2/learn/\">Learn</a>\n    </li>\n    \n    \n    \n    <li>/</li>\n    <li><a\n        href=\"/1.2/learn/by-example/\">By example</a>\n    </li>\n    \n    \n    \n    <li>/</li> JDBC Query with Complex Types\n    \n    \n\n  </ul>\n</nav>\n<style type=\"text/css\">\n  .cBalleinaBreadcrumbs li {\n    margin-right: 10px;\n  }\n</style>\n                        <div class=\"cVersionContainer\"></div>\n                    </div>\n                    <div class=\"col-md-12 col-lg-2 cBallerina-io-breadcrumbs\">\n                        <ul class=\"wy-breadcrumbs\">\n                            <!-- <li class=\"wy-breadcrumbs-aside\">\n                                <a class=\"icon icon-github\" target=\"_blank\" href=\"https://www.github.com/ballerina-platform/ballerina-dev-website/blob/master/1.2/learn/by-example/jdbc2-complex-type-queries.html\">Edit on GitHub</a>\n                            </li> -->\n                        </ul>\n                    </div>\n                </div>\n                <div class=\"cBlallerina-io-docs-content-container\">\n                    <div class=\"wy-nav-content\">\n                        <div class=\"rst-content\">\n                            <div role=\"main\">\n                                <div class=\"section\">\n                                    <div class=\"row cBallerina-io-Gray-row\">\n        <div class=\"container cBallerinaBySampleContainer\">\n            <div class=\"FullCode\">\n                <div class=\"highlight\"><pre><span class=\"kn\">import</span> <span class=\"nx\">ballerina</span><span class=\"o\">/</span><span class=\"nx\">io</span><span class=\"p\">;</span>\n<span class=\"kn\">import</span> <span class=\"nx\">ballerina</span><span class=\"o\">/</span><span class=\"nx\">java</span><span class=\"p\">.</span><span class=\"nx\">jdbc</span><span class=\"p\">;</span>\n<span class=\"kn\">import</span> <span class=\"nx\">ballerina</span><span class=\"o\">/</span><span class=\"nx\">sql</span><span class=\"p\">;</span>\n<span class=\"kn\">import</span> <span class=\"nx\">ballerina</span><span class=\"o\">/</span><span class=\"nx\">time</span><span class=\"p\">;</span>\n\n<span class=\"nx\">type</span> <span class=\"nx\">BinaryType</span> <span class=\"nx\">record</span> <span class=\"p\">{|</span>\n    <span class=\"kt\">int</span> <span class=\"nx\">row_id</span><span class=\"p\">;</span>\n    <span class=\"nx\">byte</span><span class=\"p\">[]</span> <span class=\"nx\">blob_type</span><span class=\"p\">;</span>\n    <span class=\"kt\">string</span> <span class=\"nx\">clob_type</span><span class=\"p\">;</span>\n    <span class=\"nx\">byte</span><span class=\"p\">[]</span> <span class=\"nx\">binary_type</span><span class=\"p\">;</span>\n<span class=\"p\">|};</span>\n\n<span class=\"nx\">type</span> <span class=\"nx\">ArrayType</span> <span class=\"nx\">record</span> <span class=\"p\">{|</span>\n    <span class=\"kt\">int</span> <span class=\"nx\">row_id</span><span class=\"p\">;</span>\n    <span class=\"kt\">int</span><span class=\"p\">[]</span> <span class=\"nx\">int_array</span><span class=\"p\">;</span>\n    <span class=\"kt\">int</span><span class=\"p\">[]</span> <span class=\"nx\">long_array</span><span class=\"p\">;</span>\n    <span class=\"nx\">decimal</span><span class=\"p\">[]</span> <span class=\"nx\">float_array</span><span class=\"p\">;</span>\n    <span class=\"kt\">float</span><span class=\"p\">[]</span> <span class=\"nx\">double_array</span><span class=\"p\">;</span>\n    <span class=\"kt\">boolean</span><span class=\"p\">[]</span> <span class=\"nx\">boolean_array</span><span class=\"p\">;</span>\n    <span class=\"kt\">string</span><span class=\"p\">[]</span> <span class=\"nx\">string_array</span><span class=\"p\">;</span>\n<span class=\"p\">|};</span>\n\n<span class=\"nx\">type</span> <span class=\"nx\">DateTimeType</span> <span class=\"nx\">record</span> <span class=\"p\">{|</span>\n    <span class=\"kt\">int</span> <span class=\"nx\">row_id</span><span class=\"p\">;</span>\n    <span class=\"kt\">string</span> <span class=\"nx\">date_type</span><span class=\"p\">;</span>\n    <span class=\"kt\">int</span> <span class=\"nx\">time_type</span><span class=\"p\">;</span>\n    <span class=\"nx\">time</span><span class=\"p\">:</span><span class=\"nx\">Time</span> <span class=\"nx\">timestamp_type</span><span class=\"p\">;</span>\n    <span class=\"kt\">string</span> <span class=\"nx\">datetime_type</span><span class=\"p\">;</span>\n<span class=\"p\">|};</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">queryBinaryType</span><span class=\"p\">(</span><span class=\"nx\">jdbc</span><span class=\"p\">:</span><span class=\"nx\">Client</span> <span class=\"nx\">jdbcClient</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">io</span><span class=\"p\">:</span><span class=\"nb\">println</span><span class=\"p\">(</span><span class=\"s\">&quot;------ Query Binary Type -------&quot;</span><span class=\"p\">);</span>\n    <span class=\"c1\">// Select the rows with binary data types.</span>\n    <span class=\"c1\">// The name and type of the attributes within the record from the</span>\n    <span class=\"c1\">// `resultStream` will be automatically identified based on the column</span>\n    <span class=\"c1\">// name and type of the query result.</span>\n    <span class=\"nx\">stream</span><span class=\"p\">&lt;</span><span class=\"nx\">record</span><span class=\"p\">{},</span> <span class=\"nx\">error</span><span class=\"p\">&gt;</span> <span class=\"nx\">resultStream</span> <span class=\"p\">=</span>\n        <span class=\"nx\">jdbcClient</span><span class=\"o\">-&gt;</span><span class=\"nx\">query</span><span class=\"p\">(</span><span class=\"s\">&quot;Select * from BINARY_TYPES&quot;</span><span class=\"p\">);</span>\n\n    <span class=\"nx\">io</span><span class=\"p\">:</span><span class=\"nb\">println</span><span class=\"p\">(</span><span class=\"s\">&quot;Result 1:&quot;</span><span class=\"p\">);</span>\n    <span class=\"c1\">// If there is any error during the execution of the SQL query or</span>\n    <span class=\"c1\">// iteration of the result stream, the result stream will terminate and</span>\n    <span class=\"c1\">// return the error.</span>\n    <span class=\"nx\">error</span><span class=\"err\">?</span> <span class=\"nx\">e</span> <span class=\"p\">=</span> <span class=\"nx\">resultStream</span><span class=\"p\">.</span><span class=\"nx\">forEach</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">record</span> <span class=\"p\">{}</span> <span class=\"nx\">result</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">io</span><span class=\"p\">:</span><span class=\"nb\">println</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">);</span>\n    <span class=\"p\">});</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">e</span> <span class=\"nx\">is</span> <span class=\"nx\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">io</span><span class=\"p\">:</span><span class=\"nb\">println</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n    <span class=\"c1\">// Since the `rowType` is provided as a `BinaryType`, the `resultStream` will</span>\n    <span class=\"c1\">// have `BinaryType` records.</span>\n    <span class=\"nx\">resultStream</span> <span class=\"p\">=</span> <span class=\"nx\">jdbcClient</span><span class=\"o\">-&gt;</span><span class=\"nx\">query</span><span class=\"p\">(</span><span class=\"s\">&quot;Select * from BINARY_TYPES&quot;</span><span class=\"p\">,</span> <span class=\"nx\">BinaryType</span><span class=\"p\">);</span>\n    <span class=\"nx\">stream</span><span class=\"p\">&lt;</span><span class=\"nx\">BinaryType</span><span class=\"p\">,</span> <span class=\"nx\">sql</span><span class=\"p\">:</span><span class=\"nx\">Error</span><span class=\"p\">&gt;</span> <span class=\"nx\">binaryResultStream</span>\n    <span class=\"p\">=</span> <span class=\"p\">&lt;</span><span class=\"nx\">stream</span><span class=\"p\">&lt;</span><span class=\"nx\">BinaryType</span><span class=\"p\">,</span> <span class=\"nx\">sql</span><span class=\"p\">:</span><span class=\"nx\">Error</span><span class=\"o\">&gt;&gt;</span><span class=\"nx\">resultStream</span><span class=\"p\">;</span>\n\n    <span class=\"nx\">io</span><span class=\"p\">:</span><span class=\"nb\">println</span><span class=\"p\">(</span><span class=\"s\">&quot;Result 2:&quot;</span><span class=\"p\">);</span>\n    <span class=\"c1\">// Iterate the `binaryResultStream`.</span>\n    <span class=\"nx\">e</span> <span class=\"p\">=</span> <span class=\"nx\">binaryResultStream</span><span class=\"p\">.</span><span class=\"nx\">forEach</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">BinaryType</span> <span class=\"nx\">result</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">io</span><span class=\"p\">:</span><span class=\"nb\">println</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">);</span>\n    <span class=\"p\">});</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">e</span> <span class=\"nx\">is</span> <span class=\"nx\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">io</span><span class=\"p\">:</span><span class=\"nb\">println</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n    <span class=\"nx\">io</span><span class=\"p\">:</span><span class=\"nb\">println</span><span class=\"p\">(</span><span class=\"s\">&quot;------ ********* -------&quot;</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n\n<span class=\"kd\">function</span> <span class=\"nx\">queryArrayType</span><span class=\"p\">(</span><span class=\"nx\">jdbc</span><span class=\"p\">:</span><span class=\"nx\">Client</span> <span class=\"nx\">jdbcClient</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">io</span><span class=\"p\">:</span><span class=\"nb\">println</span><span class=\"p\">(</span><span class=\"s\">&quot;------ Query Array Type -------&quot;</span><span class=\"p\">);</span>\n    <span class=\"c1\">// Select the rows with array data types.</span>\n    <span class=\"c1\">// The name and type of the attributes within the record from the `</span>\n    <span class=\"c1\">// resultStream` will be automatically identified based on the column</span>\n    <span class=\"c1\">// name and type of the query result.</span>\n    <span class=\"nx\">stream</span><span class=\"p\">&lt;</span><span class=\"nx\">record</span><span class=\"p\">{},</span> <span class=\"nx\">error</span><span class=\"p\">&gt;</span> <span class=\"nx\">resultStream</span> <span class=\"p\">=</span>\n        <span class=\"nx\">jdbcClient</span><span class=\"o\">-&gt;</span><span class=\"nx\">query</span><span class=\"p\">(</span><span class=\"s\">&quot;Select * from ARRAY_TYPES&quot;</span><span class=\"p\">);</span>\n\n    <span class=\"nx\">io</span><span class=\"p\">:</span><span class=\"nb\">println</span><span class=\"p\">(</span><span class=\"s\">&quot;Result 1:&quot;</span><span class=\"p\">);</span>\n    <span class=\"c1\">// If there is any error during the execution of the SQL query or</span>\n    <span class=\"c1\">// iteration of the result stream, the result stream will terminate and</span>\n    <span class=\"c1\">// return the error.</span>\n    <span class=\"nx\">error</span><span class=\"err\">?</span> <span class=\"nx\">e</span> <span class=\"p\">=</span> <span class=\"nx\">resultStream</span><span class=\"p\">.</span><span class=\"nx\">forEach</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">record</span> <span class=\"p\">{}</span> <span class=\"nx\">result</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">io</span><span class=\"p\">:</span><span class=\"nb\">println</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">);</span>\n    <span class=\"p\">});</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">e</span> <span class=\"nx\">is</span> <span class=\"nx\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">io</span><span class=\"p\">:</span><span class=\"nb\">println</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n    <span class=\"c1\">// Since the `rowType` is provided as an `ArrayType`, the `resultStream` will</span>\n    <span class=\"c1\">// have `ArrayType` records.</span>\n    <span class=\"nx\">resultStream</span> <span class=\"p\">=</span> <span class=\"nx\">jdbcClient</span><span class=\"o\">-&gt;</span><span class=\"nx\">query</span><span class=\"p\">(</span><span class=\"s\">&quot;Select * from ARRAY_TYPES&quot;</span><span class=\"p\">,</span> <span class=\"nx\">ArrayType</span><span class=\"p\">);</span>\n    <span class=\"nx\">stream</span><span class=\"p\">&lt;</span><span class=\"nx\">ArrayType</span><span class=\"p\">,</span> <span class=\"nx\">sql</span><span class=\"p\">:</span><span class=\"nx\">Error</span><span class=\"p\">&gt;</span> <span class=\"nx\">arrayResultStream</span> <span class=\"p\">=</span>\n        <span class=\"p\">&lt;</span><span class=\"nx\">stream</span><span class=\"p\">&lt;</span><span class=\"nx\">ArrayType</span><span class=\"p\">,</span> <span class=\"nx\">sql</span><span class=\"p\">:</span><span class=\"nx\">Error</span><span class=\"o\">&gt;&gt;</span><span class=\"nx\">resultStream</span><span class=\"p\">;</span>\n\n    <span class=\"nx\">io</span><span class=\"p\">:</span><span class=\"nb\">println</span><span class=\"p\">(</span><span class=\"s\">&quot;Result 2:&quot;</span><span class=\"p\">);</span>\n    <span class=\"c1\">// Iterate the `arrayResultStream`.</span>\n    <span class=\"nx\">e</span> <span class=\"p\">=</span> <span class=\"nx\">arrayResultStream</span><span class=\"p\">.</span><span class=\"nx\">forEach</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">ArrayType</span> <span class=\"nx\">result</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">io</span><span class=\"p\">:</span><span class=\"nb\">println</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">);</span>\n    <span class=\"p\">});</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">e</span> <span class=\"nx\">is</span> <span class=\"nx\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">io</span><span class=\"p\">:</span><span class=\"nb\">println</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n    <span class=\"nx\">io</span><span class=\"p\">:</span><span class=\"nb\">println</span><span class=\"p\">(</span><span class=\"s\">&quot;------ ********* -------&quot;</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">queryDateTimeType</span><span class=\"p\">(</span><span class=\"nx\">jdbc</span><span class=\"p\">:</span><span class=\"nx\">Client</span> <span class=\"nx\">jdbcClient</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">io</span><span class=\"p\">:</span><span class=\"nb\">println</span><span class=\"p\">(</span><span class=\"s\">&quot;------ Query Date Time Type -------&quot;</span><span class=\"p\">);</span>\n    <span class=\"c1\">// Select the rows with date/time data types.</span>\n    <span class=\"c1\">// The name and type of the attributes within the record from</span>\n    <span class=\"c1\">// the `resultStream` will be automatically identified based on the</span>\n    <span class=\"c1\">// column name and type of the query result.</span>\n    <span class=\"nx\">stream</span><span class=\"p\">&lt;</span><span class=\"nx\">record</span><span class=\"p\">{},</span> <span class=\"nx\">error</span><span class=\"p\">&gt;</span> <span class=\"nx\">resultStream</span> <span class=\"p\">=</span>\n        <span class=\"nx\">jdbcClient</span><span class=\"o\">-&gt;</span><span class=\"nx\">query</span><span class=\"p\">(</span><span class=\"s\">&quot;Select * from DATE_TIME_TYPES&quot;</span><span class=\"p\">);</span>\n\n    <span class=\"nx\">io</span><span class=\"p\">:</span><span class=\"nb\">println</span><span class=\"p\">(</span><span class=\"s\">&quot;Result 1:&quot;</span><span class=\"p\">);</span>\n    <span class=\"c1\">// If there is any error during the execution of the SQL query or</span>\n    <span class=\"c1\">// iteration of the result stream, the result stream will terminate and</span>\n    <span class=\"c1\">// return the error.</span>\n    <span class=\"nx\">error</span><span class=\"err\">?</span> <span class=\"nx\">e</span> <span class=\"p\">=</span> <span class=\"nx\">resultStream</span><span class=\"p\">.</span><span class=\"nx\">forEach</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">record</span> <span class=\"p\">{}</span> <span class=\"nx\">result</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">io</span><span class=\"p\">:</span><span class=\"nb\">println</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">);</span>\n    <span class=\"p\">});</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">e</span> <span class=\"nx\">is</span> <span class=\"nx\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">io</span><span class=\"p\">:</span><span class=\"nb\">println</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n    <span class=\"c1\">// Since the `rowType` is provided as a `DateTimeType`, the `resultStream`</span>\n    <span class=\"c1\">// will have `DateTimeType` records. The Date, Time, DateTime, and</span>\n    <span class=\"c1\">// Timestamp fields of the database table can be mapped to time:Time,</span>\n    <span class=\"c1\">// string, and int types in Ballerina.</span>\n    <span class=\"nx\">resultStream</span> <span class=\"p\">=</span> <span class=\"nx\">jdbcClient</span><span class=\"o\">-&gt;</span><span class=\"nx\">query</span><span class=\"p\">(</span><span class=\"s\">&quot;Select * from DATE_TIME_TYPES&quot;</span><span class=\"p\">,</span>\n        <span class=\"nx\">DateTimeType</span><span class=\"p\">);</span>\n    <span class=\"nx\">stream</span><span class=\"p\">&lt;</span><span class=\"nx\">DateTimeType</span><span class=\"p\">,</span> <span class=\"nx\">sql</span><span class=\"p\">:</span><span class=\"nx\">Error</span><span class=\"p\">&gt;</span> <span class=\"nx\">dateResultStream</span> <span class=\"p\">=</span>\n        <span class=\"p\">&lt;</span><span class=\"nx\">stream</span><span class=\"p\">&lt;</span><span class=\"nx\">DateTimeType</span><span class=\"p\">,</span> <span class=\"nx\">sql</span><span class=\"p\">:</span><span class=\"nx\">Error</span><span class=\"o\">&gt;&gt;</span><span class=\"nx\">resultStream</span><span class=\"p\">;</span>\n\n    <span class=\"nx\">io</span><span class=\"p\">:</span><span class=\"nb\">println</span><span class=\"p\">(</span><span class=\"s\">&quot;Result 2:&quot;</span><span class=\"p\">);</span>\n    <span class=\"c1\">// Iterate the `dateResultStream`.</span>\n    <span class=\"nx\">e</span> <span class=\"p\">=</span> <span class=\"nx\">dateResultStream</span><span class=\"p\">.</span><span class=\"nx\">forEach</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">DateTimeType</span> <span class=\"nx\">result</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">io</span><span class=\"p\">:</span><span class=\"nb\">println</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">);</span>\n    <span class=\"p\">});</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">e</span> <span class=\"nx\">is</span> <span class=\"nx\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">io</span><span class=\"p\">:</span><span class=\"nb\">println</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n    <span class=\"nx\">io</span><span class=\"p\">:</span><span class=\"nb\">println</span><span class=\"p\">(</span><span class=\"s\">&quot;------ ********* -------&quot;</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">//Initialize the database table with sample data.</span>\n<span class=\"kd\">function</span> <span class=\"nx\">initializeTable</span><span class=\"p\">(</span><span class=\"nx\">jdbc</span><span class=\"p\">:</span><span class=\"nx\">Client</span> <span class=\"nx\">jdbcClient</span><span class=\"p\">)</span> <span class=\"nx\">returns</span> <span class=\"nx\">sql</span><span class=\"p\">:</span><span class=\"nx\">Error</span><span class=\"err\">?</span> <span class=\"p\">{</span>\n    <span class=\"nx\">sql</span><span class=\"p\">:</span><span class=\"nx\">ExecuteResult</span><span class=\"err\">?</span> <span class=\"nx\">result</span> <span class=\"p\">=</span>\n        <span class=\"nx\">check</span> <span class=\"nx\">jdbcClient</span><span class=\"o\">-&gt;</span><span class=\"nx\">execute</span><span class=\"p\">(</span><span class=\"s\">&quot;DROP TABLE IF EXISTS BINARY_TYPES&quot;</span><span class=\"p\">);</span>\n    <span class=\"nx\">result</span> <span class=\"p\">=</span> <span class=\"nx\">check</span> <span class=\"nx\">jdbcClient</span><span class=\"o\">-&gt;</span><span class=\"nx\">execute</span><span class=\"p\">(</span><span class=\"s\">&quot;CREATE TABLE BINARY_TYPES (row_id &quot;</span> <span class=\"o\">+</span>\n        <span class=\"s\">&quot;INTEGER NOT NULL, blob_type BLOB(1024), clob_type CLOB(1024),&quot;</span> <span class=\"o\">+</span>\n        <span class=\"s\">&quot;binary_type BINARY(27), PRIMARY KEY (row_id))&quot;</span><span class=\"p\">);</span>\n    <span class=\"nx\">result</span> <span class=\"p\">=</span> <span class=\"nx\">check</span> <span class=\"nx\">jdbcClient</span><span class=\"o\">-&gt;</span><span class=\"nx\">execute</span><span class=\"p\">(</span><span class=\"s\">&quot;INSERT INTO BINARY_TYPES (row_id,&quot;</span> <span class=\"o\">+</span>\n        <span class=\"s\">&quot;blob_type, clob_type, binary_type) VALUES (1, &quot;</span> <span class=\"o\">+</span>\n        <span class=\"s\">&quot;X&#39;77736F322062616C6C6572696E6120626C6F6220746573742E&#39;, CONVERT&quot;</span> <span class=\"o\">+</span>\n        <span class=\"s\">&quot;(&#39;very long text&#39;, CLOB),&quot;</span> <span class=\"o\">+</span>\n        <span class=\"s\">&quot;X&#39;77736F322062616C6C6572696E612062696E61727920746573742E&#39;)&quot;</span><span class=\"p\">);</span>\n\n    <span class=\"nx\">result</span> <span class=\"p\">=</span> <span class=\"nx\">check</span> <span class=\"nx\">jdbcClient</span><span class=\"o\">-&gt;</span><span class=\"nx\">execute</span><span class=\"p\">(</span><span class=\"s\">&quot;DROP TABLE IF EXISTS ARRAY_TYPES&quot;</span><span class=\"p\">);</span>\n    <span class=\"nx\">result</span> <span class=\"p\">=</span> <span class=\"nx\">check</span> <span class=\"nx\">jdbcClient</span><span class=\"o\">-&gt;</span><span class=\"nx\">execute</span><span class=\"p\">(</span><span class=\"s\">&quot;CREATE TABLE ARRAY_TYPES (row_id &quot;</span> <span class=\"o\">+</span>\n        <span class=\"s\">&quot;INTEGER NOT NULL, int_array ARRAY, long_array ARRAY,float_array &quot;</span> <span class=\"o\">+</span>\n        <span class=\"s\">&quot;ARRAY, double_array ARRAY, boolean_array ARRAY, string_array ARRAY,&quot;</span> <span class=\"o\">+</span>\n        <span class=\"s\">&quot;PRIMARY KEY (row_id))&quot;</span><span class=\"p\">);</span>\n    <span class=\"nx\">result</span> <span class=\"p\">=</span> <span class=\"nx\">check</span> <span class=\"nx\">jdbcClient</span><span class=\"o\">-&gt;</span><span class=\"nx\">execute</span><span class=\"p\">(</span><span class=\"s\">&quot;INSERT INTO ARRAY_TYPES (row_id, &quot;</span> <span class=\"o\">+</span>\n        <span class=\"s\">&quot;int_array, long_array, float_array, double_array, boolean_array, &quot;</span> <span class=\"o\">+</span>\n        <span class=\"s\">&quot;string_array) VALUES (1, (1, 2, 3), (100000000, 200000000, &quot;</span> <span class=\"o\">+</span>\n        <span class=\"s\">&quot;300000000), (245.23, 5559.49, 8796.123), (245.23, 5559.49, &quot;</span> <span class=\"o\">+</span>\n        <span class=\"s\">&quot;8796.123), (TRUE, FALSE, TRUE), (&#39;Hello&#39;, &#39;Ballerina&#39;))&quot;</span><span class=\"p\">);</span>\n\n    <span class=\"nx\">result</span> <span class=\"p\">=</span> <span class=\"nx\">check</span> <span class=\"nx\">jdbcClient</span><span class=\"o\">-&gt;</span><span class=\"nx\">execute</span><span class=\"p\">(</span><span class=\"s\">&quot;DROP TABLE IF EXISTS DATE_TIME_TYPES&quot;</span><span class=\"p\">);</span>\n    <span class=\"nx\">result</span> <span class=\"p\">=</span> <span class=\"nx\">check</span> <span class=\"nx\">jdbcClient</span><span class=\"o\">-&gt;</span><span class=\"nx\">execute</span><span class=\"p\">(</span><span class=\"s\">&quot;CREATE TABLE DATE_TIME_TYPES(row_id &quot;</span> <span class=\"o\">+</span>\n        <span class=\"s\">&quot; INTEGER NOT NULL, date_type DATE, time_type TIME, timestamp_type &quot;</span> <span class=\"o\">+</span>\n        <span class=\"s\">&quot;timestamp, datetime_type  datetime, PRIMARY KEY (row_id))&quot;</span><span class=\"p\">);</span>\n    <span class=\"nx\">result</span> <span class=\"p\">=</span> <span class=\"nx\">check</span> <span class=\"nx\">jdbcClient</span><span class=\"o\">-&gt;</span><span class=\"nx\">execute</span><span class=\"p\">(</span><span class=\"s\">&quot;Insert into DATE_TIME_TYPES (row_id,&quot;</span> <span class=\"o\">+</span>\n        <span class=\"s\">&quot; date_type, time_type, timestamp_type, datetime_type) values (1,&quot;</span> <span class=\"o\">+</span>\n        <span class=\"s\">&quot;&#39;2017-05-23&#39;,&#39;14:15:23&#39;,&#39;2017-01-25 16:33:55&#39;,&#39;2017-01-25 16:33:55&#39;)&quot;</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">public</span> <span class=\"kd\">function</span> <span class=\"nx\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// Initialize the JDBC client.</span>\n    <span class=\"nx\">jdbc</span><span class=\"p\">:</span><span class=\"nx\">Client</span><span class=\"p\">|</span><span class=\"nx\">sql</span><span class=\"p\">:</span><span class=\"nx\">Error</span> <span class=\"nx\">jdbcClient</span> <span class=\"p\">=</span> <span class=\"nx\">new</span> <span class=\"p\">(</span><span class=\"s\">&quot;jdbc:h2:file:./target/DATA_TYPES&quot;</span><span class=\"p\">,</span>\n        <span class=\"s\">&quot;rootUser&quot;</span><span class=\"p\">,</span> <span class=\"s\">&quot;rootPass&quot;</span><span class=\"p\">);</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">jdbcClient</span> <span class=\"nx\">is</span> <span class=\"nx\">jdbc</span><span class=\"p\">:</span><span class=\"nx\">Client</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">sql</span><span class=\"p\">:</span><span class=\"nx\">Error</span><span class=\"err\">?</span> <span class=\"nx\">err</span> <span class=\"p\">=</span> <span class=\"nx\">initializeTable</span><span class=\"p\">(</span><span class=\"nx\">jdbcClient</span><span class=\"p\">);</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">err</span> <span class=\"nx\">is</span> <span class=\"nx\">sql</span><span class=\"p\">:</span><span class=\"nx\">Error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"nx\">io</span><span class=\"p\">:</span><span class=\"nb\">println</span><span class=\"p\">(</span><span class=\"s\">&quot;Sample data table initialization failed: &quot;</span><span class=\"p\">,</span> <span class=\"nx\">err</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n            <span class=\"c1\">// Execute the complex data type queries.</span>\n            <span class=\"nx\">queryBinaryType</span><span class=\"p\">(</span><span class=\"nx\">jdbcClient</span><span class=\"p\">);</span>\n            <span class=\"nx\">queryArrayType</span><span class=\"p\">(</span><span class=\"nx\">jdbcClient</span><span class=\"p\">);</span>\n            <span class=\"nx\">queryDateTimeType</span><span class=\"p\">(</span><span class=\"nx\">jdbcClient</span><span class=\"p\">);</span>\n            <span class=\"nx\">io</span><span class=\"p\">:</span><span class=\"nb\">println</span><span class=\"p\">(</span><span class=\"s\">&quot;Sample executed successfully!&quot;</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n        <span class=\"c1\">// Close the JDBC client.</span>\n        <span class=\"nx\">sql</span><span class=\"p\">:</span><span class=\"nx\">Error</span><span class=\"err\">?</span> <span class=\"nx\">e</span> <span class=\"p\">=</span> <span class=\"nx\">jdbcClient</span><span class=\"p\">.</span><span class=\"nx\">close</span><span class=\"p\">();</span>\n    <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n        <span class=\"nx\">io</span><span class=\"p\">:</span><span class=\"nb\">println</span><span class=\"p\">(</span><span class=\"s\">&quot;Initialization failed: &quot;</span><span class=\"p\">,</span> <span class=\"nx\">jdbcClient</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n            </div>\n\n            <div class=\"col-xs-12 col-sm-12 col-md-12\">\n                <table class=\"cTopInfoContainer cTopControlsContainer\">\n                    <tr>\n                        <td class=\"cLeftTD\">\n                            <h2>JDBC Query with Complex Types</h2>\n                            <p><p>This example demonstrates how to use the JDBC client with complex data types\n such as arrays, binary, blobs, clob, and date/time fields. Note that the\n relevant database  driver JAR should be placed in the\n <code>&lt;BALLERINA_HOME&gt;/bre/lib/distributions/jballerina-&lt;VERSION&gt;/bre/lib</code> folder. However, this sample is based on an H2\n database and the H2 database driver JAR is included by  default in the\n Ballerina distribution. Therefore, it is not required to copy the driver JAR\n for the H2 database.</p>\n</p>\n\n                        </td>\n                        <td class=\"cRightTD\">\n                            <div class=\"cTopButtonContainer\">\n                                \n                                <div class=\"cButtonInfoContainer\">\n                                    <a class=\"prev\" href=\"jdbc2-query-operation.html\">\n                                        <span>< PREVIOUS</span>\n                                        <p>JDBC Select Query Operations</p>\n                                    </a>\n                                </div>\n                                 \n                                <div class=\"cButtonInfoContainer\">\n                                    <a class=\"next\" href=\"jdbc2-execute-operation.html\">\n                                        <span>NEXT ></span>\n                                        <p>JDBC DDL and DML Operations</p>\n                                    </a>\n                                </div>\n                                \n                            </div>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n            <div class=\"example\" id=\"jdbc2-complex-type-queries\">\n                <div class=\"col-xs-12 col-sm-12 col-md-12 cBBETable-container cCodeLeft\">\n                    <div class=\"cTopControlsContainer\">\n                        <div class=\"cTopControlsRow\">\n                            <div class=\"cLeftTD\">\n                                <div class=\"cBBE-links\">\n                                    <ul>\n                                        <li>\n                                            <a class=\"copy\"><img src=\"/img/copy-icon.svg\" /></a>\n                                        </li>\n                                        <li>\n                                            <a target=\"_blank\" href=\"https://github.com/ballerina-platform/ballerina-lang/tree/ballerina-1.2.x/examples/jdbc2-complex-type-queries/\"><img src=\"/img/github-logo-green.svg\" /></a>\n                                        </li>\n                                        \n                                    </ul>\n                                </div>\n                            </div> \n                        </div>\n                    </div>\n              \n                    \n                    <div class=\"codeSnippeset\">\n\n                        <div class=\"cBBE-body\">\n                            \n                            <div class=\"cTR\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>import ballerina/io;\nimport ballerina/java.jdbc;\nimport ballerina/sql;\nimport ballerina/time;\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>type BinaryType record {|\n    int row_id;\n    byte[] blob_type;\n    string clob_type;\n    byte[] binary_type;\n|};\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>type ArrayType record {|\n    int row_id;\n    int[] int_array;\n    int[] long_array;\n    decimal[] float_array;\n    float[] double_array;\n    boolean[] boolean_array;\n    string[] string_array;\n|};\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>type DateTimeType record {|\n    int row_id;\n    string date_type;\n    int time_type;\n    time:Time timestamp_type;\n    string datetime_type;\n|};\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>function queryBinaryType(jdbc:Client jdbcClient) {\n    io:println(&quot;------ Query Binary Type -------&quot;);\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR hover-enable\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>    stream&lt;record{}, error&gt; resultStream =\n        jdbcClient-&gt;query(&quot;Select * from BINARY_TYPES&quot;);\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                    <div class=\"cCodeDesription\">\n                                        <div>\n                                            <p>Select the rows with binary data types.\n The name and type of the attributes within the record from the\n <code>resultStream</code> will be automatically identified based on the column\n name and type of the query result.</p>\n\n                                        </div>\n                                    </div>\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>    io:println(&quot;Result 1:&quot;);\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR hover-enable\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>    error? e = resultStream.forEach(function(record {} result) {\n        io:println(result);\n    });\n    if (e is error) {\n        io:println(e);\n    }\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                    <div class=\"cCodeDesription\">\n                                        <div>\n                                            <p>If there is any error during the execution of the SQL query or\n iteration of the result stream, the result stream will terminate and\n return the error.</p>\n\n                                        </div>\n                                    </div>\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR hover-enable\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>    resultStream = jdbcClient-&gt;query(&quot;Select * from BINARY_TYPES&quot;, BinaryType);\n    stream&lt;BinaryType, sql:Error&gt; binaryResultStream\n    = &lt;stream&lt;BinaryType, sql:Error&gt;&gt;resultStream;\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                    <div class=\"cCodeDesription\">\n                                        <div>\n                                            <p>Since the <code>rowType</code> is provided as a <code>BinaryType</code>, the <code>resultStream</code> will\n have <code>BinaryType</code> records.</p>\n\n                                        </div>\n                                    </div>\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>    io:println(&quot;Result 2:&quot;);\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR hover-enable\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>    e = binaryResultStream.forEach(function(BinaryType result) {\n        io:println(result);\n    });\n    if (e is error) {\n        io:println(e);\n    }\n    io:println(&quot;------ ********* -------&quot;);\n}\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                    <div class=\"cCodeDesription\">\n                                        <div>\n                                            <p>Iterate the <code>binaryResultStream</code>.</p>\n\n                                        </div>\n                                    </div>\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>function queryArrayType(jdbc:Client jdbcClient) {\n    io:println(&quot;------ Query Array Type -------&quot;);\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR hover-enable\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>    stream&lt;record{}, error&gt; resultStream =\n        jdbcClient-&gt;query(&quot;Select * from ARRAY_TYPES&quot;);\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                    <div class=\"cCodeDesription\">\n                                        <div>\n                                            <p>Select the rows with array data types.\n The name and type of the attributes within the record from the <code>\n resultStream</code> will be automatically identified based on the column\n name and type of the query result.</p>\n\n                                        </div>\n                                    </div>\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>    io:println(&quot;Result 1:&quot;);\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR hover-enable\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>    error? e = resultStream.forEach(function(record {} result) {\n        io:println(result);\n    });\n    if (e is error) {\n        io:println(e);\n    }\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                    <div class=\"cCodeDesription\">\n                                        <div>\n                                            <p>If there is any error during the execution of the SQL query or\n iteration of the result stream, the result stream will terminate and\n return the error.</p>\n\n                                        </div>\n                                    </div>\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR hover-enable\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>    resultStream = jdbcClient-&gt;query(&quot;Select * from ARRAY_TYPES&quot;, ArrayType);\n    stream&lt;ArrayType, sql:Error&gt; arrayResultStream =\n        &lt;stream&lt;ArrayType, sql:Error&gt;&gt;resultStream;\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                    <div class=\"cCodeDesription\">\n                                        <div>\n                                            <p>Since the <code>rowType</code> is provided as an <code>ArrayType</code>, the <code>resultStream</code> will\n have <code>ArrayType</code> records.</p>\n\n                                        </div>\n                                    </div>\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>    io:println(&quot;Result 2:&quot;);\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR hover-enable\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>    e = arrayResultStream.forEach(function(ArrayType result) {\n        io:println(result);\n    });\n    if (e is error) {\n        io:println(e);\n    }\n    io:println(&quot;------ ********* -------&quot;);\n}\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                    <div class=\"cCodeDesription\">\n                                        <div>\n                                            <p>Iterate the <code>arrayResultStream</code>.</p>\n\n                                        </div>\n                                    </div>\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>function queryDateTimeType(jdbc:Client jdbcClient) {\n    io:println(&quot;------ Query Date Time Type -------&quot;);\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR hover-enable\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>    stream&lt;record{}, error&gt; resultStream =\n        jdbcClient-&gt;query(&quot;Select * from DATE_TIME_TYPES&quot;);\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                    <div class=\"cCodeDesription\">\n                                        <div>\n                                            <p>Select the rows with date/time data types.\n The name and type of the attributes within the record from\n the <code>resultStream</code> will be automatically identified based on the\n column name and type of the query result.</p>\n\n                                        </div>\n                                    </div>\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>    io:println(&quot;Result 1:&quot;);\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR hover-enable\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>    error? e = resultStream.forEach(function(record {} result) {\n        io:println(result);\n    });\n    if (e is error) {\n        io:println(e);\n    }\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                    <div class=\"cCodeDesription\">\n                                        <div>\n                                            <p>If there is any error during the execution of the SQL query or\n iteration of the result stream, the result stream will terminate and\n return the error.</p>\n\n                                        </div>\n                                    </div>\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR hover-enable\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>    resultStream = jdbcClient-&gt;query(&quot;Select * from DATE_TIME_TYPES&quot;,\n        DateTimeType);\n    stream&lt;DateTimeType, sql:Error&gt; dateResultStream =\n        &lt;stream&lt;DateTimeType, sql:Error&gt;&gt;resultStream;\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                    <div class=\"cCodeDesription\">\n                                        <div>\n                                            <p>Since the <code>rowType</code> is provided as a <code>DateTimeType</code>, the <code>resultStream</code>\n will have <code>DateTimeType</code> records. The Date, Time, DateTime, and\n Timestamp fields of the database table can be mapped to time:Time,\n string, and int types in Ballerina.</p>\n\n                                        </div>\n                                    </div>\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>    io:println(&quot;Result 2:&quot;);\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR hover-enable\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>    e = dateResultStream.forEach(function(DateTimeType result) {\n        io:println(result);\n    });\n    if (e is error) {\n        io:println(e);\n    }\n    io:println(&quot;------ ********* -------&quot;);\n}\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                    <div class=\"cCodeDesription\">\n                                        <div>\n                                            <p>Iterate the <code>dateResultStream</code>.</p>\n\n                                        </div>\n                                    </div>\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR hover-enable\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>function initializeTable(jdbc:Client jdbcClient) returns sql:Error? {\n    sql:ExecuteResult? result =\n        check jdbcClient-&gt;execute(&quot;DROP TABLE IF EXISTS BINARY_TYPES&quot;);\n    result = check jdbcClient-&gt;execute(&quot;CREATE TABLE BINARY_TYPES (row_id &quot; +\n        &quot;INTEGER NOT NULL, blob_type BLOB(1024), clob_type CLOB(1024),&quot; +\n        &quot;binary_type BINARY(27), PRIMARY KEY (row_id))&quot;);\n    result = check jdbcClient-&gt;execute(&quot;INSERT INTO BINARY_TYPES (row_id,&quot; +\n        &quot;blob_type, clob_type, binary_type) VALUES (1, &quot; +\n        &quot;X&#39;77736F322062616C6C6572696E6120626C6F6220746573742E&#39;, CONVERT&quot; +\n        &quot;(&#39;very long text&#39;, CLOB),&quot; +\n        &quot;X&#39;77736F322062616C6C6572696E612062696E61727920746573742E&#39;)&quot;);\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                    <div class=\"cCodeDesription\">\n                                        <div>\n                                            <p>Initialize the database table with sample data.</p>\n\n                                        </div>\n                                    </div>\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>    result = check jdbcClient-&gt;execute(&quot;DROP TABLE IF EXISTS ARRAY_TYPES&quot;);\n    result = check jdbcClient-&gt;execute(&quot;CREATE TABLE ARRAY_TYPES (row_id &quot; +\n        &quot;INTEGER NOT NULL, int_array ARRAY, long_array ARRAY,float_array &quot; +\n        &quot;ARRAY, double_array ARRAY, boolean_array ARRAY, string_array ARRAY,&quot; +\n        &quot;PRIMARY KEY (row_id))&quot;);\n    result = check jdbcClient-&gt;execute(&quot;INSERT INTO ARRAY_TYPES (row_id, &quot; +\n        &quot;int_array, long_array, float_array, double_array, boolean_array, &quot; +\n        &quot;string_array) VALUES (1, (1, 2, 3), (100000000, 200000000, &quot; +\n        &quot;300000000), (245.23, 5559.49, 8796.123), (245.23, 5559.49, &quot; +\n        &quot;8796.123), (TRUE, FALSE, TRUE), (&#39;Hello&#39;, &#39;Ballerina&#39;))&quot;);\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>    result = check jdbcClient-&gt;execute(&quot;DROP TABLE IF EXISTS DATE_TIME_TYPES&quot;);\n    result = check jdbcClient-&gt;execute(&quot;CREATE TABLE DATE_TIME_TYPES(row_id &quot; +\n        &quot; INTEGER NOT NULL, date_type DATE, time_type TIME, timestamp_type &quot; +\n        &quot;timestamp, datetime_type  datetime, PRIMARY KEY (row_id))&quot;);\n    result = check jdbcClient-&gt;execute(&quot;Insert into DATE_TIME_TYPES (row_id,&quot; +\n        &quot; date_type, time_type, timestamp_type, datetime_type) values (1,&quot; +\n        &quot;&#39;2017-05-23&#39;,&#39;14:15:23&#39;,&#39;2017-01-25 16:33:55&#39;,&#39;2017-01-25 16:33:55&#39;)&quot;);\n}\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>public function main() {\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR hover-enable\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>    jdbc:Client|sql:Error jdbcClient = new (&quot;jdbc:h2:file:./target/DATA_TYPES&quot;,\n        &quot;rootUser&quot;, &quot;rootPass&quot;);\n    if (jdbcClient is jdbc:Client) {\n        sql:Error? err = initializeTable(jdbcClient);\n        if (err is sql:Error) {\n            io:println(&quot;Sample data table initialization failed: &quot;, err);\n        } else {\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                    <div class=\"cCodeDesription\">\n                                        <div>\n                                            <p>Initialize the JDBC client.</p>\n\n                                        </div>\n                                    </div>\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR hover-enable\">\n\n                                <div class=\"code leading\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>            queryBinaryType(jdbcClient);\n            queryArrayType(jdbcClient);\n            queryDateTimeType(jdbcClient);\n            io:println(&quot;Sample executed successfully!&quot;);\n        }\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                    <div class=\"cCodeDesription\">\n                                        <div>\n                                            <p>Execute the complex data type queries.</p>\n\n                                        </div>\n                                    </div>\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR hover-enable\">\n\n                                <div class=\"code\">\n                                    <div class=\"highlight\"><pre><code class=language-ballerina>        sql:Error? e = jdbcClient.close();\n    } else {\n        io:println(&quot;Initialization failed: &quot;, jdbcClient);\n    }\n}\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                    <div class=\"cCodeDesription\">\n                                        <div>\n                                            <p>Close the JDBC client.</p>\n\n                                        </div>\n                                    </div>\n                                    \n                                </div>\n                            </div>\n                            \n                        </div>\n                    </div>\n                    \n                    <div class=\"codeSnippeset\">\n\n                        <div class=\"cBBE-body\">\n                            \n                            <div class=\"cTR cOutputTr\">\n\n                                <div class=\"code leading cOutput\">\n                                    <div class=\"highlight\"><pre><code class=shell-session># To run this sample, navigate to the directory that contains the\n# `.bal` file and execute the `ballerina run` command below.\nballerina run jdbc2_complex_type_queries.bal\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                </div>\n                            </div>\n                            \n                            <div class=\"cTR cOutputTr\">\n\n                                <div class=\"code cOutput\">\n                                    <div class=\"highlight\"><pre><code class=shell-session>------ Query Binary Type -------\nResult 1:\nROW_ID=1 BLOB_TYPE=119 115 111 50 32 98 97 108 108 101 114 105 110 97 32 98 108 111 98 32 116 101 115 116 46 CLOB_TYPE=very long text BINARY_TYPE=119 115 111 50 32 98 97 108 108 101 114 105 110 97 32 98 105 110 97 114 121 32 116 101 115 116 46\nResult 2:\nrow_id=1 blob_type=119 115 111 50 32 98 97 108 108 101 114 105 110 97 32 98 108 111 98 32 116 101 115 116 46 clob_type=very long text binary_type=119 115 111 50 32 98 97 108 108 101 114 105 110 97 32 98 105 110 97 114 121 32 116 101 115 116 46\n------ ********* -------\n------ Query Array Type -------\nResult 1:\nROW_ID=1 INT_ARRAY=1 2 3 LONG_ARRAY=100000000 200000000 300000000 FLOAT_ARRAY=245.23 5559.49 8796.123 DOUBLE_ARRAY=245.23 5559.49 8796.123 BOOLEAN_ARRAY=true false true STRING_ARRAY=Hello Ballerina\nResult 2:\nrow_id=1 int_array=1 2 3 long_array=100000000 200000000 300000000 float_array=245.23 5559.49 8796.123 double_array=245.23 5559.49 8796.123 boolean_array=true false true string_array=Hello Ballerina\n------ ********* -------\n------ Query Date Time Type -------\nResult 1:\nROW_ID=1 DATE_TYPE=2017-05-23+05:30 TIME_TYPE=19:45:23.000+05:30 TIMESTAMP_TYPE=2017-01-25T22:03:55.000+05:30 DATETIME_TYPE=2017-01-25T22:03:55.000+05:30\nResult 2:\nrow_id=1 date_type=2017-05-23+05:30 time_type=51323000 timestamp_type=time=1485362035000 zone=id=UTC offset=0 datetime_type=2017-01-25T22:03:55.000+05:30\n------ ********* -------\nSample executed successfully!\n</code></pre></div>\n\n                                </div>\n                                <div class=\"docs\">\n                                    \n                                </div>\n                            </div>\n                            \n                        </div>\n                    </div>\n                    \n\n\n                     \n                </div>\n            </div>\n        </div>\n    </div>\n\n     <script>\n            $(document).ready(function() {\n\n                // hljs.initHighlightingOnLoad();\n\n                $(\".switch\").click(function() {\n                    $(\".cCodeRight\").toggleClass('cShow');\n                    $(\".cCodeLeft\").toggleClass('cHide');\n                });\n\n                // register \"copy to clipboard\" event to elements with \"copy\" class\n                var clipboard = new ClipboardJS('.copy', {\n                    text: function(trigger) {\n                        return $('.FullCode').find('pre').text();\n                    }\n                });\n\n                // Register events show hide tooltip on click event\n                clipboard.on('success', function(e) {\n                    setTooltip(e.trigger, 'Copied!');\n                    hideTooltip(e.trigger);\n                });\n\n                clipboard.on('error', function(e) {\n                    setTooltip(e.trigger, 'Failed!');\n                    hideTooltip(e.trigger);\n                });\n\n                $('.copy').tooltip({\n                    trigger: 'click',\n                    placement: 'bottom'\n                });\n                $(\"a.copy\").unbind(\"click\");\n            });\n\n            function setTooltip(btn, message) {\n                $(btn).attr('data-original-title', message)\n                    .tooltip('show');\n            }\n\n            function hideTooltip(btn) {\n                setTimeout(function() {\n                    $(btn).tooltip('hide').removeAttr('data-original-title');\n                }, 1000);\n            }\n        </script>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div id=\"iBallerinaFooter\" class=\"row cBallerina-io-White-row\">\n    <div class=\"container\">\n    <div class=\"col-xs-12 col-sm-12 col-md-3 col-lg-3 cBallerina-io-left-col cBallerinaFooterLinks\">\n        <ul>\n            <li><a class=\"cBioFooterLink\" href=\"/downloads\">DOWNLOAD</a></li>\n            <!--<li><a class=\"cBioFooterLink\" href=\"/community/#report-issues\">REPORT ISSUES</a></li>-->\n            <li data-toggle=\"modal\" data-target=\"#reportissues\" data-whatever=\"@mdo\"><a href=\"/community/#report-issues\">REPORT ISSUES</a></li>\n            <li><a class=\"cBioFooterLink\" href=\"https://github.com/ballerina-lang/ballerina/blob/master/LICENSE\">CODE LICENSE</a></li>\n            <li><a class=\"cBioFooterLink\" href=\"/license-of-site\">SITE LICENSE</a></li>\n            <li><a class=\"cBioFooterLink\" href=\"/terms-of-service\">TERMS OF SERVICE</a></li>\n            <li><a class=\"cBioFooterLink\" href=\"/privacy-policy\">PRIVACY POLICY</a></li>\n            <li><a class=\"cBioFooterLink\" href=\"/trademark-usage-policy/\">TRADEMARK USAGE POLICY</a></li>\n            </ul>\n        </div>\n    <div class=\"col-xs-12 col-sm-12 col-md-3 col-lg-3 cBallerina-io-middle-col cBallerinaFooterSignUp\">\n        <div class=\"cSocialmedia\">\n            <ul>\n                <li>\n                    <a class=\"cBioFooterLink\" href=\"https://github.com/ballerina-platform\" target=\"_blank\"><img src=\"/img/github.svg\"/></a>\n                    </li>\n                <li><a class=\"cBioFooterLink\" href=\"https://stackoverflow.com/questions/tagged/ballerina\" target=\"_blank\"><img src=\"/img/stackoverflow.svg\"/></a></li>\n                <li><a class=\"cBioFooterLink\" href=\"https://twitter.com/ballerinalang\" target=\"_blank\"><img src=\"/img/twitter.svg\"/></a></li>\n                <li><a class=\"cBioFooterLink\" href=\"/community/slack/\"><img src=\"/img/slack.svg\"/></a></li>\n                <li><a class=\"cBioFooterLink\" href=\"https://www.youtube.com/c/Ballerinalang\"><img style=\"width: 15px;\" src=\"/img/youtube-icon.svg\"/></a></li>\n                </ul>\n            <div class=\"pdframe\"></div>\n            </div>\n\n\n           <a class=\"cNLButton\" href=\"/community/#subscribe-to-the-newsletter\">Subscribe to the newsletter</a> \n\n           <div class=\"modal fade\" id=\"reportissues\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"reportissueslabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog\" role=\"document\">\n              <div class=\"modal-content\" style=\"padding:15px;border-radius:0px;\">\n                <div class=\"modal-header\">\n                  <h3 class=\"modal-title\" style=\"color: #20b6b0;\">Report Issues</h3>\n                  <p style=\"padding: 10px 0px ;\">Report issues in the GitHub repositories of the areas and components listed below.\n                  </p>\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <div class=\"modal-body\" style=\"background-color: #fff; font-size: 20; color: #465867;font-size: 20px;\">\n                  <ul class=\"b\">\n                    <li><a class=\"linkText\" href=\"https://github.com/ballerina-platform/ballerina-lang/issues/new/choose\" target=\"_blank\"> Compiler, runtime, or tooling</a></li>\n                    <li><a class=\"linkText\" href=\"https://github.com/ballerina-platform/ballerina-standard-library/issues\" target=\"_blank\"> Standard Library</a></li>\n                    <li><a class=\"linkText\" href=\"https://github.com/ballerina-platform/ballerina-standard-library/issues/new/choose\" target=\"_blank\">  Language specification</a></li>\n                    <li><a class=\"linkText\" href=\"https://github.com/ballerina-platform/ballerina-dev-website/issues/new/choose\" target=\"_blank\">  Website</a></li>\n                    <li><a class=\"linkText\" href=\"mailto:security@ballerina.io\" target=\"_blank\">Security</a> <span style=\"font-size: 16px;\">(For details, see the</span> <a class=\"linkText\" href=\"/security\" target=\"_blank\">security policy</a>.)</li>\n                  </ul>  \n                \n                </div>\n                <div class=\"modal-footer\">\n                 \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n    <div class=\"col-xs-12 col-sm-10 col-md-6 col-lg-6 cBallerina-io-right-col\">\n        <p>In the creation of Ballerina, we were inspired by so many technologies. Thank you to all that have come before us (and forgive us if we missed one): Java, Go, C, C++, D, Rust, Haskell, Kotlin, Dart, TypeScript, JavaScript, Python, Perl, Flow, Swift, Elm, RelaxNG, NPM, Crates, Maven, Gradle, Kubernetes, Docker, Envoy, Markdown, GitHub and WSO2.</p></div>\n    </div>\n</div>\n\n<div class=\"cCookie-Policy\">\n    <div class=\"container\">\n        <div class=\"col-xs-12 col-sm-12 col-lg-12\">\n            <!-- <div class=\"closebuttoon\"><img src=\"/img/close-w.svg\"/></div> -->\n<h4>Cookie policy</h4>\n<p>This website uses cookies so that we can provide you with the best user experience. Read our <a href=\"https://ballerina.io/cookie-policy/\">Cookie policy</a></a> to find out more.</p>\n<p>If you wish to disable cookies you can do so from your browser. </p>\n  \n<!-- <a href=\"https://ballerina.io/cookie-policy/\"></a> -->\n<a class=\"cIUnderstand \">I understand </a>\n        </div>\n    </div>\n</div>\n\n\n\n\n\n<script src=\"/js/prism.js\"></script>\n<!-- <script src=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.14.0/components/prism-core.min.js\"></script> -->\n<script src=\"/js/prism-ballerina.js\"></script>\n\n\n\n<script>\n\n$(\".cIUnderstand \").click(function() {\n    $(\".cCookie-Policy\").addClass('cHide-Policy');\n   \n    \n});\n\n\n\n</script>\n\n\n<!-- \n<script>\n    (function () {\n\nif (typeof self === 'undefined' || !self.Prism || !self.document) {\n    return;\n}\n\n/**\n * Plugin name which is used as a class name for <pre> which is activating the plugin\n * @type {String}\n */\nvar PLUGIN_NAME = 'line-numbers';\n\n/**\n * Regular expression used for determining line breaks\n * @type {RegExp}\n */\nvar NEW_LINE_EXP = /\\n(?!$)/g;\n\n/**\n * Resizes line numbers spans according to height of line of code\n * @param {Element} element <pre> element\n */\nvar _resizeElement = function (element) {\n    var codeStyles = getStyles(element);\n    var whiteSpace = codeStyles['white-space'];\n\n    if (whiteSpace === 'pre-wrap' || whiteSpace === 'pre-line') {\n        var codeElement = element.querySelector('code');\n        var lineNumbersWrapper = element.querySelector('.line-numbers-rows');\n        if (!codeElement || !lineNumbersWrapper) {\n            return;\n        }\n        var lineNumberSizer = element.querySelector('.line-numbers-sizer');\n        var codeLines = codeElement.textContent.split(NEW_LINE_EXP);\n\n        if (!lineNumberSizer) {\n            lineNumberSizer = document.createElement('span');\n            lineNumberSizer.className = 'line-numbers-sizer';\n\n            codeElement.appendChild(lineNumberSizer);\n        }\n\n        lineNumberSizer.style.display = 'block';\n\n        codeLines.forEach(function (line, lineNumber) {\n            lineNumberSizer.textContent = line || '\\n';\n            var lineSize = lineNumberSizer.getBoundingClientRect().height;\n            lineNumbersWrapper.children[lineNumber].style.height = lineSize + 'px';\n        });\n\n        lineNumberSizer.textContent = '';\n        lineNumberSizer.style.display = 'none';\n    }\n};\n\n/**\n * Returns style declarations for the element\n * @param {Element} element\n */\nvar getStyles = function (element) {\n    if (!element) {\n        return null;\n    }\n\n    return window.getComputedStyle ? getComputedStyle(element) : (element.currentStyle || null);\n};\n\nwindow.addEventListener('resize', function () {\n    Array.prototype.forEach.call(document.querySelectorAll('pre.' + PLUGIN_NAME), _resizeElement);\n});\n\nPrism.hooks.add('complete', function (env) {\n    if (!env.code) {\n        return;\n    }\n\n    var code = env.element;\n    var pre = code.parentNode;\n\n    // works only for <code> wrapped inside <pre> (not inline)\n    if (!pre || !/pre/i.test(pre.nodeName)) {\n        return;\n    }\n\n    // Abort if line numbers already exists\n    if (code.querySelector('.line-numbers-rows')) {\n        return;\n    }\n\n    var addLineNumbers = false;\n    var lineNumbersRegex = /(?:^|\\s)line-numbers(?:\\s|$)/;\n\n    for (var element = code; element; element = element.parentNode) {\n        if (lineNumbersRegex.test(element.className)) {\n            addLineNumbers = true;\n            break;\n        }\n    }\n\n    // only add line numbers if <code> or one of its ancestors has the `line-numbers` class\n    if (!addLineNumbers) {\n        return;\n    }\n\n    // Remove the class 'line-numbers' from the <code>\n    code.className = code.className.replace(lineNumbersRegex, ' ');\n    // Add the class 'line-numbers' to the <pre>\n    if (!lineNumbersRegex.test(pre.className)) {\n        pre.className += ' line-numbers';\n    }\n\n    var match = env.code.match(NEW_LINE_EXP);\n    var linesNum = match ? match.length + 1 : 1;\n    var lineNumbersWrapper;\n\n    var lines = new Array(linesNum + 1).join('<span></span>');\n\n    lineNumbersWrapper = document.createElement('span');\n    lineNumbersWrapper.setAttribute('aria-hidden', 'true');\n    lineNumbersWrapper.className = 'line-numbers-rows';\n    lineNumbersWrapper.innerHTML = lines;\n\n    if (pre.hasAttribute('data-start')) {\n        pre.style.counterReset = 'linenumber ' + (parseInt(pre.getAttribute('data-start'), 10) - 1);\n    }\n\n    env.element.appendChild(lineNumbersWrapper);\n\n    _resizeElement(pre);\n\n    Prism.hooks.run('line-numbers', env);\n});\n\nPrism.hooks.add('line-numbers', function (env) {\n    env.plugins = env.plugins || {};\n    env.plugins.lineNumbers = true;\n});\n\n/**\n * Global exports\n */\nPrism.plugins.lineNumbers = {\n    /**\n     * Returns the node of the given line number in the given element.\n     * @param {Element} element A `<pre>` element with line numbers.\n     * @param {Number} number\n     * @returns {Element | undefined}\n     */\n    getLine: function (element, number) {\n        if (element.tagName !== 'PRE' || !element.classList.contains(PLUGIN_NAME)) {\n            return;\n        }\n\n        var lineNumberRows = element.querySelector('.line-numbers-rows');\n        var lineNumberStart = parseInt(element.getAttribute('data-start'), 10) || 1;\n        var lineNumberEnd = lineNumberStart + (lineNumberRows.children.length - 1);\n\n        if (number < lineNumberStart) {\n            number = lineNumberStart;\n        }\n        if (number > lineNumberEnd) {\n            number = lineNumberEnd;\n        }\n\n        var lineIndex = number - lineNumberStart;\n\n        return lineNumberRows.children[lineIndex];\n    },\n    /**\n     * Resizes the line numbers of the given element.\n     *\n     * This function will not add line numbers. It will only resize existing ones.\n     * @param {Element} element A `<pre>` element with line numbers.\n     * @returns {void}\n     */\n    resize: function (element) {\n        _resizeElement(element);\n    }\n};\n\n}());\n</script> -->\n\n<!-- \n<style>\n    pre[class*=\"language-\"].line-numbers {\n\tposition: relative;\n\tpadding-left: 3.8em;\n\tcounter-reset: linenumber;\n}\n\npre[class*=\"language-\"].line-numbers > code {\n\tposition: relative;\n\twhite-space: inherit;\n}\n\n.line-numbers .line-numbers-rows {\n\tposition: absolute;\n\tpointer-events: none;\n\ttop: 0;\n\tfont-size: 100%;\n\tleft: -3.8em;\n\twidth: 3em; /* works for line-numbers below 1000 lines */\n\tletter-spacing: -1px;\n\tborder-right: 1px solid #999;\n\n\t-webkit-user-select: none;\n\t-moz-user-select: none;\n\t-ms-user-select: none;\n\tuser-select: none;\n\n}\n\n\t.line-numbers-rows > span {\n\t\tdisplay: block;\n\t\tcounter-increment: linenumber;\n\t}\n\n\t\t.line-numbers-rows > span:before {\n\t\t\tcontent: counter(linenumber);\n\t\t\tcolor: #999;\n\t\t\tdisplay: block;\n\t\t\tpadding-right: 0.8em;\n\t\t\ttext-align: right;\n\t\t}\n</style> -->\n\n<script src=\"/js/theme.js\"></script>\n\n<script>\n    $(document).ready(function() {\n        var gitstar = '<iframe id=\"iGitStarIframe\" src=\"https://ghbtns.com/github-btn.html?user=ballerina-platform&repo=ballerina-lang&type=star&count=true&size=small\" frameborder=\"0\" scrolling=\"0\"></iframe>';\n        $('[data-button=\"iGitStarText\"]').replaceWith(gitstar);\n\n        var gitwatch = '<iframe id=\"iGitWatchIframe\" src=\"https://ghbtns.com/github-btn.html?user=ballerina-platform&repo=ballerina-lang&type=watch&count=true&size=lsmalle&v=2\" frameborder=\"0\" scrolling=\"0\"></iframe>';\n        $('[data-button=\"iGitWatchText\"]').replaceWith(gitwatch);\n        checkIsFromRefrencePage();   \n    });\n    function checkIsFromRefrencePage(){ \n        var url_string =window.location.href; \n        var url = new URL(url_string);\n        var isFromRefPage = url.searchParams.get(\"is_ref_by_example\");\n        if(isFromRefPage){ \n            $('.bbe-by-example-page-row').addClass('hide');\n            $('.bbe-by-reference-page-row').removeClass('hide');\n            $('.cTopButtonContainer').show();\n            $('.cVersionItem').hide();\n        }else{ \n            $('.bbe-by-example-page-row').removeClass('hide');\n            $('.bbe-by-reference-page-row').addClass('hide');\n            $('.cTopButtonContainer').hide();\n            $('.cVersionItem').show(); \n        }\n    }\n</script>\n\n<style>\n    .cGitButtonContainer {\n        display: inline-block;\n        width: 100%;\n        margin-bottom: 0px;\n    }\n\n    #iGitStarText {\n        height: 20px;\n        float: left;\n        padding: 0;\n        margin: 0;\n    }\n    #iGitStarIframe , #iGitWatchIframe {\n        height: 20px;\n        width: 100px;\n        float: left;\n    }\n</style>\n\n</body>\n</html>\n\n\n","id":"jdbc2-complex-type-queries"},"__N_SSG":true}