{"pageProps":{"frontmatter":{},"content":"<!DOCTYPE html>\n<html>\n\n<head>\n    <meta charset=\"utf-8\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"/>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0\">\n    <meta name=\"description\" content=\"This module is designed to support input and output operations via channels in a canonical way, either in a blocking,\nor non-blocking manner.\n\">\n    <meta name=\"keywords\" content=\"ballerina,ballerina lang,api docs,io\">\n\n    <title>API Docs - Functions : io</title>\n    <script src=\"../html-template-resources/jquery.min.js\"></script>\n\n    <!-- BIO THEME START -->\n<link rel=\"stylesheet\" href=\"/css/latest-bootstrap.css\">\n<!-- Optional theme -->\n<link rel=\"stylesheet\" href=\"/css/latest-bootstrap-theme.css\">\n<!-- Latest compiled and minified JavaScript -->\n<script src=\"/js/latest-bootstrap.js\"></script>\n\n<script type=\"text/javascript\" src=\"/js/api-doc-template.js\"></script>\n<script type=\"text/javascript\" src=\"/js/ballerina-common.js\"></script>\n<link rel=\"stylesheet\" href=\"/css/ballerina-io.css\">\n<link rel=\"stylesheet\" href=\"/css/ballerina-io-docs.css\">\n<link rel=\"stylesheet\" href=\"/css/ballerina-io-api-new.css\">\n\n<style>\n    .line-numbers-wrap {\n        display: none;\n    }\n     .cVersionChangeBanner{\n    color: #000000;\n    background-color: #fcdf4a !important;\n    width: 100%;\n    display: inline-block;\n    padding: 10px 0px;\n    text-align: center;\n    font-weight: 500;\n    font-size: 20px;\n    transition : all 0.3s;\n    position: fixed;\n    top: 0;\n    width: 100%;\n    height: 50px;\n    z-index: 9;\n    }\n    .cInfoBannerLink{\n        color: #000000;\n        text-decoration: underline;\n    }\n     .cInfoBannerLink:hover{\n        color: #545454 !important;\n        text-decoration: underline !important;\n    }\n   \n    .content-wrapper{\n        padding-top: 2em !important;\n    }\n    @media only screen and (max-width: 992px) {\n        .content-wrapper {padding-top: 7em !important}\n\n    }\n</style>\n<!-- BIO THEME END -->\n\n    <link rel=\"stylesheet\" href=\"../html-template-resources/semantic.min.css\">\n    <link rel=\"stylesheet\" href=\"../html-template-resources/styles/css/styles.css\">\n    <link rel=\"stylesheet\" href=\"../html-template-resources/styles/css/font.css\">\n    <script src=\"../html-template-resources/semantic.min.js\"></script>\n    <script src=\"../syntax-highlighter/highlighter.js\"></script>\n\n</head>\n\n\n<body class=\"cBallerina-io\">\n    <div class=\"row cBallerina-io-top-row\">\n    <div class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\"></div>\n    <div class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6 cTopLineContainer\">\n        <div class=\"cTopLine\"></div>\n    </div>\n</div>\n<div class=\"cVersionChangeBanner\">\n       This API documentation is for Ballerina 1.2.0. <a href=\"https://lib.ballerina.io\" class=\"cInfoBannerLink\">View API documentation for the latest release</a>.\n    </div>\n    <div class=\"row cBallerina-io-Nav\" id=\"iMainNavigation\" style=\"top:50px\">\n\n</div>\n<div class=\"clearfix\"></div>\n    <div class=\"navi-wrapper\">\n        <div class=\"navi-wrapper-content\">\n            <a href=\"\n    ../index.html\">\n    <img class=\"logo\" src=\"../html-template-resources/images/ballerina-logo.png\">\n</a>\n\n            <div class=\"primary-list\">\n                <h3>Functions</h3>\n                <ul>\n                    \n                        <li >\n                            <a href=\"#createReadableChannel\" onclick=\"menuLinkClick()\">createReadableChannel</a>\n                        </li>\n                    \n                        <li >\n                            <a href=\"#openReadableCsvFile\" onclick=\"menuLinkClick()\">openReadableCsvFile</a>\n                        </li>\n                    \n                        <li >\n                            <a href=\"#openReadableFile\" onclick=\"menuLinkClick()\">openReadableFile</a>\n                        </li>\n                    \n                        <li >\n                            <a href=\"#openWritableCsvFile\" onclick=\"menuLinkClick()\">openWritableCsvFile</a>\n                        </li>\n                    \n                        <li >\n                            <a href=\"#openWritableFile\" onclick=\"menuLinkClick()\">openWritableFile</a>\n                        </li>\n                    \n                        <li >\n                            <a href=\"#print\" onclick=\"menuLinkClick()\">print</a>\n                        </li>\n                    \n                        <li >\n                            <a href=\"#println\" onclick=\"menuLinkClick()\">println</a>\n                        </li>\n                    \n                        <li >\n                            <a href=\"#readln\" onclick=\"menuLinkClick()\">readln</a>\n                        </li>\n                    \n                        <li >\n                            <a href=\"#sprintf\" onclick=\"menuLinkClick()\">sprintf</a>\n                        </li>\n                    \n                </ul>\n            </div>\n            <div class=\"ui divider\"></div>\n            \n\n    \n        <div class=\"version\">v1.2.14</div>\n    \n\n\n<div class=\"primary-list module\">\n    \n        <a href=\"../io/index.html\" onclick=\"menuLinkClick()\">\n            <h3>io</h3>\n        </a>\n    \n    <ul>\n        \n        <li>\n            <a data=\"records\" href=\"../io/index.html#records\" onclick=\"menuLinkClick()\">Records</a>\n        </li>\n        \n        \n            <li>\n                <a  data=\"objects\" href=\"../io/index.html#objects\" onclick=\"menuLinkClick()\">Objects</a>\n            </li>\n        \n        \n        \n        \n            <li>\n                <a data=\"functions\" href=\"../io/index.html#functions\" onclick=\"menuLinkClick()\">Functions</a>\n            </li>\n        \n        \n            <li>\n                <a data=\"constants\" href=\"../io/index.html#constants\" onclick=\"menuLinkClick()\">Constants</a>\n            </li>\n        \n        \n        \n            <li>\n                <a data=\"types\" href=\"../io/index.html#types\" onclick=\"menuLinkClick()\">Types</a>\n            </li>\n        \n        \n            <li>\n                <a data=\"errors\" href=\"../io/index.html#errors\" onclick=\"menuLinkClick()\">Errors</a>\n            </li>\n        \n    </ul>\n    <div class=\"ui divider\"></div>\n</div>\n\n            <div class=\"primary-list module-list\">\n    \n        <h3>All Modules</h3>\n        <ul>\n            \n                <li>\n                    <a href=\"../auth/index.html\">auth</a>\n                </li>\n            \n                <li>\n                    <a href=\"../cache/index.html\">cache</a>\n                </li>\n            \n                <li>\n                    <a href=\"../config/index.html\">config</a>\n                </li>\n            \n                <li>\n                    <a href=\"../crypto/index.html\">crypto</a>\n                </li>\n            \n                <li>\n                    <a href=\"../email/index.html\">email</a>\n                </li>\n            \n                <li>\n                    <a href=\"../encoding/index.html\">encoding</a>\n                </li>\n            \n                <li>\n                    <a href=\"../file/index.html\">file</a>\n                </li>\n            \n                <li>\n                    <a href=\"../filepath/index.html\">filepath</a>\n                </li>\n            \n                <li>\n                    <a href=\"../grpc/index.html\">grpc</a>\n                </li>\n            \n                <li>\n                    <a href=\"../http/index.html\">http</a>\n                </li>\n            \n                <li>\n                    <a href=\"../io/index.html\">io</a>\n                </li>\n            \n                <li>\n                    <a href=\"../java/index.html\">java</a>\n                </li>\n            \n                <li>\n                    <a href=\"../java.arrays/index.html\">java.arrays</a>\n                </li>\n            \n                <li>\n                    <a href=\"../java.jdbc/index.html\">java.jdbc</a>\n                </li>\n            \n                <li>\n                    <a href=\"../jsonutils/index.html\">jsonutils</a>\n                </li>\n            \n                <li>\n                    <a href=\"../jwt/index.html\">jwt</a>\n                </li>\n            \n                <li>\n                    <a href=\"../kafka/index.html\">kafka</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.array/index.html\">lang.array</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.boolean/index.html\">lang.boolean</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.decimal/index.html\">lang.decimal</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.error/index.html\">lang.error</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.float/index.html\">lang.float</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.future/index.html\">lang.future</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.int/index.html\">lang.int</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.map/index.html\">lang.map</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.object/index.html\">lang.object</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.stream/index.html\">lang.stream</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.string/index.html\">lang.string</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.table/index.html\">lang.table</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.typedesc/index.html\">lang.typedesc</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.value/index.html\">lang.value</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.xml/index.html\">lang.xml</a>\n                </li>\n            \n                <li>\n                    <a href=\"../ldap/index.html\">ldap</a>\n                </li>\n            \n                <li>\n                    <a href=\"../log/index.html\">log</a>\n                </li>\n            \n                <li>\n                    <a href=\"../math/index.html\">math</a>\n                </li>\n            \n                <li>\n                    <a href=\"../mime/index.html\">mime</a>\n                </li>\n            \n                <li>\n                    <a href=\"../nats/index.html\">nats</a>\n                </li>\n            \n                <li>\n                    <a href=\"../oauth2/index.html\">oauth2</a>\n                </li>\n            \n                <li>\n                    <a href=\"../observe/index.html\">observe</a>\n                </li>\n            \n                <li>\n                    <a href=\"../openapi/index.html\">openapi</a>\n                </li>\n            \n                <li>\n                    <a href=\"../rabbitmq/index.html\">rabbitmq</a>\n                </li>\n            \n                <li>\n                    <a href=\"../reflect/index.html\">reflect</a>\n                </li>\n            \n                <li>\n                    <a href=\"../runtime/index.html\">runtime</a>\n                </li>\n            \n                <li>\n                    <a href=\"../socket/index.html\">socket</a>\n                </li>\n            \n                <li>\n                    <a href=\"../stringutils/index.html\">stringutils</a>\n                </li>\n            \n                <li>\n                    <a href=\"../system/index.html\">system</a>\n                </li>\n            \n                <li>\n                    <a href=\"../task/index.html\">task</a>\n                </li>\n            \n                <li>\n                    <a href=\"../test/index.html\">test</a>\n                </li>\n            \n                <li>\n                    <a href=\"../time/index.html\">time</a>\n                </li>\n            \n                <li>\n                    <a href=\"../transactions/index.html\">transactions</a>\n                </li>\n            \n                <li>\n                    <a href=\"../websub/index.html\">websub</a>\n                </li>\n            \n                <li>\n                    <a href=\"../xmlutils/index.html\">xmlutils</a>\n                </li>\n            \n                <li>\n                    <a href=\"../xslt/index.html\">xslt</a>\n                </li>\n            \n        </ul>\n        <div class=\"ui divider\"></div>\n    \n</div>\n        </div>\n    </div>\n    <div class=\"content-wrapper pusher\">\n        <div>\n    <a id=\"toc\" class=\"toc item\" onclick=\"displayMenu()\">\n        <img src=\"../html-template-resources/images/menu.svg\">\n    </a>\n</div>\n        <div class=\"main-wrapper\">\n            <h1>\n                <a class=\"breadcrumb-home\" href=\"\n    ../index.html\">\n    <img class=\"breadcrumb-home-icon\" src=\"../html-template-resources/images/home.svg\">\n</a>\n                <span class=\"title-type\">Functions - </span>\n                \n                    <a href=\"../io/index.html\">io</a>\n                \n            </h1>\n            <div class=\"constants\">\n                <table class=\"ui table row-border details-table\">\n                    <tbody>\n                        \n                            <tr>\n                                <td width=\"30%\"><a class=\"functions \" href=\"#createReadableChannel\">createReadableChannel</a></td>\n                                <td width=\"70%\">\n                                    <div class=\"function-desc\">\n                                        \n                                        <p>Creates an in-memory channel, which will be a reference stream of bytes.\n                                    </div>\n                                </td>\n                            </tr>\n                        \n                            <tr>\n                                <td width=\"30%\"><a class=\"functions \" href=\"#openReadableCsvFile\">openReadableCsvFile</a></td>\n                                <td width=\"70%\">\n                                    <div class=\"function-desc\">\n                                        \n                                        <p>Retrieves a readable CSV channel from a given file path.\n                                    </div>\n                                </td>\n                            </tr>\n                        \n                            <tr>\n                                <td width=\"30%\"><a class=\"functions \" href=\"#openReadableFile\">openReadableFile</a></td>\n                                <td width=\"70%\">\n                                    <div class=\"function-desc\">\n                                        \n                                        <p>Retrieves a <code>ReadableByteChannel</code> from a given file path.\n                                    </div>\n                                </td>\n                            </tr>\n                        \n                            <tr>\n                                <td width=\"30%\"><a class=\"functions \" href=\"#openWritableCsvFile\">openWritableCsvFile</a></td>\n                                <td width=\"70%\">\n                                    <div class=\"function-desc\">\n                                        \n                                        <p>Retrieves a writable CSV channel from a given file path.\n                                    </div>\n                                </td>\n                            </tr>\n                        \n                            <tr>\n                                <td width=\"30%\"><a class=\"functions \" href=\"#openWritableFile\">openWritableFile</a></td>\n                                <td width=\"70%\">\n                                    <div class=\"function-desc\">\n                                        \n                                        <p>Retrieves a <code>WritableByteChannel</code> from a given file path.\n                                    </div>\n                                </td>\n                            </tr>\n                        \n                            <tr>\n                                <td width=\"30%\"><a class=\"functions \" href=\"#print\">print</a></td>\n                                <td width=\"70%\">\n                                    <div class=\"function-desc\">\n                                        \n                                        <p>Prints <code>any</code> or <code>error</code> value(s) to the STDOUT.\n                                    </div>\n                                </td>\n                            </tr>\n                        \n                            <tr>\n                                <td width=\"30%\"><a class=\"functions \" href=\"#println\">println</a></td>\n                                <td width=\"70%\">\n                                    <div class=\"function-desc\">\n                                        \n                                        <p>Prints <code>any</code> or <code>error</code> value(s) to the STDOUT followed by a new line.\n                                    </div>\n                                </td>\n                            </tr>\n                        \n                            <tr>\n                                <td width=\"30%\"><a class=\"functions \" href=\"#readln\">readln</a></td>\n                                <td width=\"70%\">\n                                    <div class=\"function-desc\">\n                                        \n                                        <p>Retrieves the input read from the STDIN.\n                                    </div>\n                                </td>\n                            </tr>\n                        \n                            <tr>\n                                <td width=\"30%\"><a class=\"functions \" href=\"#sprintf\">sprintf</a></td>\n                                <td width=\"70%\">\n                                    <div class=\"function-desc\">\n                                        \n                                        <p>Returns a formatted string using the specified format string and arguments.\n                                    </div>\n                                </td>\n                            </tr>\n                        \n                    </tbody>\n                </table>\n                <div>\n                    \n                        <div>\n                            \n                                <div class=\"method-content\">\n    <div class=\"main-method-title here\" id=\"createReadableChannel\" title=\"createReadableChannel\">\n             <a class=\"url-link\" href=\"#createReadableChannel\">\n                <img class=\"url-link-img\" src=\"../html-template-resources/images/link.svg\">\n            </a>\n            <h2 > createReadableChannel </h2>\n        <span class=\"method-types\">\n            <p>(<span class=\"array-type\"><span class=\"builtin-type\">byte</span>[]</span> content)</p>\n            \n                <b> returns </b><a href=\"../io/objects/ReadableByteChannel.html\">ReadableByteChannel</a> | <a href=\"../io/types.html#Error\">Error</a> \n            \n        </span>\n    </div>\n    <div class=\"function-desc\">\n        \n        <p>Creates an in-memory channel, which will be a reference stream of bytes.</p>\n<pre><code class=\"language-ballerina\"> var byteChannel = io:createReadableChannel(content);\n</code></pre>\n\n    </div>\n    \n        <div class=\"data-wrapper\">\n            <h3 class=\"param-title\">Parameters</h3>\n                \n            <div class=\"params-listing\">\n                <ul>\n                    <li>\n                        <span >content</span>\n                        <span class=\"type\">  <span class=\"array-type\"><span class=\"builtin-type\">byte</span>[]</span> </span>\n                        \n                    </li>\n                    <li>\n                        <p>\n                            \n                            <p>Content, which should be exposed as a channel</p>\n\n                        </p>\n                    </li>\n                </ul>\n            </div>\n            \n        </div>\n    \n\n    \n        \n        <div class=\"returns-listing\">\n            <ul>\n                <li> <h3 class=\"type\">Return Type</h3> (<span class=\"type\"><a href=\"../io/objects/ReadableByteChannel.html\">ReadableByteChannel</a> | <a href=\"../io/types.html#Error\">Error</a></span>)</li>\n                <li><p>The <code>ByteChannel</code> representation to read the memory content or else an <code>io:Error</code> if any error occurred</p>\n</li>\n            </ul>\n        </div>\n        \n    \n</div>\n                            \n                                <div class=\"method-content\">\n    <div class=\"main-method-title here\" id=\"openReadableCsvFile\" title=\"openReadableCsvFile\">\n             <a class=\"url-link\" href=\"#openReadableCsvFile\">\n                <img class=\"url-link-img\" src=\"../html-template-resources/images/link.svg\">\n            </a>\n            <h2 > openReadableCsvFile </h2>\n        <span class=\"method-types\">\n            <p>(<span class=\"builtin-type\">string</span> path, <a href=\"../io/types.html#Separator\">Separator</a> fieldSeparator, <span class=\"builtin-type\">string</span> charset, <span class=\"builtin-type\">int</span> skipHeaders)</p>\n            \n                <b> returns </b><a href=\"../io/objects/ReadableCSVChannel.html\">ReadableCSVChannel</a> | <a href=\"../io/types.html#Error\">Error</a> \n            \n        </span>\n    </div>\n    <div class=\"function-desc\">\n        \n        <p>Retrieves a readable CSV channel from a given file path.</p>\n<pre><code class=\"language-ballerina\"> io:ReadableCSVChannel rCsvChannel = check io:openReadableCsvFile(srcFileName);\n</code></pre>\n\n    </div>\n    \n        <div class=\"data-wrapper\">\n            <h3 class=\"param-title\">Parameters</h3>\n                \n            <div class=\"params-listing\">\n                <ul>\n                    <li>\n                        <span >path</span>\n                        <span class=\"type\">  <span class=\"builtin-type\">string</span> </span>\n                        \n                    </li>\n                    <li>\n                        <p>\n                            \n                            <p>File path, which describes the location of the CSV</p>\n\n                        </p>\n                    </li>\n                </ul>\n            </div>\n                \n            <div class=\"params-listing\">\n                <ul>\n                    <li>\n                        <span >fieldSeparator</span>\n                        <span class=\"type\">  <a href=\"../io/types.html#Separator\">Separator</a> </span>\n                        <span class=\"default\"> (default ,)</span>\n                    </li>\n                    <li>\n                        <p>\n                            \n                            <p>CSV record separator (i.e., comma or tab)</p>\n\n                        </p>\n                    </li>\n                </ul>\n            </div>\n                \n            <div class=\"params-listing\">\n                <ul>\n                    <li>\n                        <span >charset</span>\n                        <span class=\"type\">  <span class=\"builtin-type\">string</span> </span>\n                        <span class=\"default\"> (default UTF-8)</span>\n                    </li>\n                    <li>\n                        <p>\n                            \n                            <p>Representation of the encoding characters in the file</p>\n\n                        </p>\n                    </li>\n                </ul>\n            </div>\n                \n            <div class=\"params-listing\">\n                <ul>\n                    <li>\n                        <span >skipHeaders</span>\n                        <span class=\"type\">  <span class=\"builtin-type\">int</span> </span>\n                        <span class=\"default\"> (default 0)</span>\n                    </li>\n                    <li>\n                        <p>\n                            \n                            <p>Number of headers, which should be skipped</p>\n\n                        </p>\n                    </li>\n                </ul>\n            </div>\n            \n        </div>\n    \n\n    \n        \n        <div class=\"returns-listing\">\n            <ul>\n                <li> <h3 class=\"type\">Return Type</h3> (<span class=\"type\"><a href=\"../io/objects/ReadableCSVChannel.html\">ReadableCSVChannel</a> | <a href=\"../io/types.html#Error\">Error</a></span>)</li>\n                <li><p>The <code>ReadableCSVChannel</code>, which could be used to iterate through the CSV records or else an <code>io:Error</code> if any error occurred.</p>\n</li>\n            </ul>\n        </div>\n        \n    \n</div>\n                            \n                                <div class=\"method-content\">\n    <div class=\"main-method-title here\" id=\"openReadableFile\" title=\"openReadableFile\">\n             <a class=\"url-link\" href=\"#openReadableFile\">\n                <img class=\"url-link-img\" src=\"../html-template-resources/images/link.svg\">\n            </a>\n            <h2 > openReadableFile </h2>\n        <span class=\"method-types\">\n            <p>(<span class=\"builtin-type\">string</span> path)</p>\n            \n                <b> returns </b><a href=\"../io/objects/ReadableByteChannel.html\">ReadableByteChannel</a> | <a href=\"../io/types.html#Error\">Error</a> \n            \n        </span>\n    </div>\n    <div class=\"function-desc\">\n        \n        <p>Retrieves a <code>ReadableByteChannel</code> from a given file path.</p>\n<pre><code class=\"language-ballerina\"> io:ReadableByteChannel readableFieldResult = check io:openReadableFile(&quot;./files/sample.txt&quot;);\n</code></pre>\n\n    </div>\n    \n        <div class=\"data-wrapper\">\n            <h3 class=\"param-title\">Parameters</h3>\n                \n            <div class=\"params-listing\">\n                <ul>\n                    <li>\n                        <span >path</span>\n                        <span class=\"type\">  <span class=\"builtin-type\">string</span> </span>\n                        \n                    </li>\n                    <li>\n                        <p>\n                            \n                            <p>Relative/absolute path string to locate the file</p>\n\n                        </p>\n                    </li>\n                </ul>\n            </div>\n            \n        </div>\n    \n\n    \n        \n        <div class=\"returns-listing\">\n            <ul>\n                <li> <h3 class=\"type\">Return Type</h3> (<span class=\"type\"><a href=\"../io/objects/ReadableByteChannel.html\">ReadableByteChannel</a> | <a href=\"../io/types.html#Error\">Error</a></span>)</li>\n                <li><p>The <code>ByteChannel</code> representation of the file resource or else an <code>io:Error</code> if any error occurred</p>\n</li>\n            </ul>\n        </div>\n        \n    \n</div>\n                            \n                                <div class=\"method-content\">\n    <div class=\"main-method-title here\" id=\"openWritableCsvFile\" title=\"openWritableCsvFile\">\n             <a class=\"url-link\" href=\"#openWritableCsvFile\">\n                <img class=\"url-link-img\" src=\"../html-template-resources/images/link.svg\">\n            </a>\n            <h2 > openWritableCsvFile </h2>\n        <span class=\"method-types\">\n            <p>(<span class=\"builtin-type\">string</span> path, <a href=\"../io/types.html#Separator\">Separator</a> fieldSeparator, <span class=\"builtin-type\">string</span> charset, <span class=\"builtin-type\">int</span> skipHeaders)</p>\n            \n                <b> returns </b><a href=\"../io/objects/WritableCSVChannel.html\">WritableCSVChannel</a> | <a href=\"../io/types.html#Error\">Error</a> \n            \n        </span>\n    </div>\n    <div class=\"function-desc\">\n        \n        <p>Retrieves a writable CSV channel from a given file path.</p>\n<pre><code class=\"language-ballerina\"> io:WritableCSVChannel wCsvChannel = check io:openWritableCsvFile(srcFileName);\n</code></pre>\n\n    </div>\n    \n        <div class=\"data-wrapper\">\n            <h3 class=\"param-title\">Parameters</h3>\n                \n            <div class=\"params-listing\">\n                <ul>\n                    <li>\n                        <span >path</span>\n                        <span class=\"type\">  <span class=\"builtin-type\">string</span> </span>\n                        \n                    </li>\n                    <li>\n                        <p>\n                            \n                            <p>File path, which describes the location of the CSV</p>\n\n                        </p>\n                    </li>\n                </ul>\n            </div>\n                \n            <div class=\"params-listing\">\n                <ul>\n                    <li>\n                        <span >fieldSeparator</span>\n                        <span class=\"type\">  <a href=\"../io/types.html#Separator\">Separator</a> </span>\n                        <span class=\"default\"> (default ,)</span>\n                    </li>\n                    <li>\n                        <p>\n                            \n                            <p>CSV record separator (i.e., comma or tab)</p>\n\n                        </p>\n                    </li>\n                </ul>\n            </div>\n                \n            <div class=\"params-listing\">\n                <ul>\n                    <li>\n                        <span >charset</span>\n                        <span class=\"type\">  <span class=\"builtin-type\">string</span> </span>\n                        <span class=\"default\"> (default UTF-8)</span>\n                    </li>\n                    <li>\n                        <p>\n                            \n                            <p>Representation of the encoding characters in the file</p>\n\n                        </p>\n                    </li>\n                </ul>\n            </div>\n                \n            <div class=\"params-listing\">\n                <ul>\n                    <li>\n                        <span >skipHeaders</span>\n                        <span class=\"type\">  <span class=\"builtin-type\">int</span> </span>\n                        <span class=\"default\"> (default 0)</span>\n                    </li>\n                    <li>\n                        <p>\n                            \n                            <p>Number of headers, which should be skipped</p>\n\n                        </p>\n                    </li>\n                </ul>\n            </div>\n            \n        </div>\n    \n\n    \n        \n        <div class=\"returns-listing\">\n            <ul>\n                <li> <h3 class=\"type\">Return Type</h3> (<span class=\"type\"><a href=\"../io/objects/WritableCSVChannel.html\">WritableCSVChannel</a> | <a href=\"../io/types.html#Error\">Error</a></span>)</li>\n                <li><p>The <code>WritableCSVChannel</code>, which could be used to write the CSV records or else an <code>io:Error</code> if any error occurred</p>\n</li>\n            </ul>\n        </div>\n        \n    \n</div>\n                            \n                                <div class=\"method-content\">\n    <div class=\"main-method-title here\" id=\"openWritableFile\" title=\"openWritableFile\">\n             <a class=\"url-link\" href=\"#openWritableFile\">\n                <img class=\"url-link-img\" src=\"../html-template-resources/images/link.svg\">\n            </a>\n            <h2 > openWritableFile </h2>\n        <span class=\"method-types\">\n            <p>(<span class=\"builtin-type\">string</span> path, <span class=\"builtin-type\">boolean</span> append)</p>\n            \n                <b> returns </b><a href=\"../io/objects/WritableByteChannel.html\">WritableByteChannel</a> | <a href=\"../io/types.html#Error\">Error</a> \n            \n        </span>\n    </div>\n    <div class=\"function-desc\">\n        \n        <p>Retrieves a <code>WritableByteChannel</code> from a given file path.</p>\n<pre><code class=\"language-ballerina\"> io:WritableByteChannel writableFileResult = check io:openWritableFile(&quot;./files/sampleResponse.txt&quot;);\n</code></pre>\n\n    </div>\n    \n        <div class=\"data-wrapper\">\n            <h3 class=\"param-title\">Parameters</h3>\n                \n            <div class=\"params-listing\">\n                <ul>\n                    <li>\n                        <span >path</span>\n                        <span class=\"type\">  <span class=\"builtin-type\">string</span> </span>\n                        \n                    </li>\n                    <li>\n                        <p>\n                            \n                            <p>Relative/absolute path string to locate the file</p>\n\n                        </p>\n                    </li>\n                </ul>\n            </div>\n                \n            <div class=\"params-listing\">\n                <ul>\n                    <li>\n                        <span >append</span>\n                        <span class=\"type\">  <span class=\"builtin-type\">boolean</span> </span>\n                        <span class=\"default\"> (default false)</span>\n                    </li>\n                    <li>\n                        <p>\n                            \n                            <p>Whether to append to the end of file</p>\n\n                        </p>\n                    </li>\n                </ul>\n            </div>\n            \n        </div>\n    \n\n    \n        \n        <div class=\"returns-listing\">\n            <ul>\n                <li> <h3 class=\"type\">Return Type</h3> (<span class=\"type\"><a href=\"../io/objects/WritableByteChannel.html\">WritableByteChannel</a> | <a href=\"../io/types.html#Error\">Error</a></span>)</li>\n                <li><p>The <code>ByteChannel</code> representation of the file resource or else an <code>io:Error</code> if any error occurred</p>\n</li>\n            </ul>\n        </div>\n        \n    \n</div>\n                            \n                                <div class=\"method-content\">\n    <div class=\"main-method-title here\" id=\"print\" title=\"print\">\n             <a class=\"url-link\" href=\"#print\">\n                <img class=\"url-link-img\" src=\"../html-template-resources/images/link.svg\">\n            </a>\n            <h2 > print </h2>\n        <span class=\"method-types\">\n            <p>(<span class=\"array-type\"><span class=\"builtin-type\">any</span> | <span class=\"builtin-type\">error</span>...</span> values)</p>\n            \n        </span>\n    </div>\n    <div class=\"function-desc\">\n        \n        <p>Prints <code>any</code> or <code>error</code> value(s) to the STDOUT.</p>\n<pre><code class=\"language-ballerina\">io:print(&quot;Start processing the CSV file from &quot;, srcFileName);\n</code></pre>\n\n    </div>\n    \n        <div class=\"data-wrapper\">\n            <h3 class=\"param-title\">Parameters</h3>\n                \n            <div class=\"params-listing\">\n                <ul>\n                    <li>\n                        <span >values</span>\n                        <span class=\"type\">  <span class=\"array-type\"><span class=\"builtin-type\">any</span> | <span class=\"builtin-type\">error</span>...</span> </span>\n                        \n                    </li>\n                    <li>\n                        <p>\n                            \n                            <p>The value(s) to be printed.</p>\n\n                        </p>\n                    </li>\n                </ul>\n            </div>\n            \n        </div>\n    \n\n    \n</div>\n                            \n                                <div class=\"method-content\">\n    <div class=\"main-method-title here\" id=\"println\" title=\"println\">\n             <a class=\"url-link\" href=\"#println\">\n                <img class=\"url-link-img\" src=\"../html-template-resources/images/link.svg\">\n            </a>\n            <h2 > println </h2>\n        <span class=\"method-types\">\n            <p>(<span class=\"array-type\"><span class=\"builtin-type\">any</span> | <span class=\"builtin-type\">error</span>...</span> values)</p>\n            \n        </span>\n    </div>\n    <div class=\"function-desc\">\n        \n        <p>Prints <code>any</code> or <code>error</code> value(s) to the STDOUT followed by a new line.</p>\n<pre><code class=\"language-ballerina\">io:println(&quot;Start processing the CSV file from &quot;, srcFileName);\n</code></pre>\n\n    </div>\n    \n        <div class=\"data-wrapper\">\n            <h3 class=\"param-title\">Parameters</h3>\n                \n            <div class=\"params-listing\">\n                <ul>\n                    <li>\n                        <span >values</span>\n                        <span class=\"type\">  <span class=\"array-type\"><span class=\"builtin-type\">any</span> | <span class=\"builtin-type\">error</span>...</span> </span>\n                        \n                    </li>\n                    <li>\n                        <p>\n                            \n                            <p>The value(s) to be printed.</p>\n\n                        </p>\n                    </li>\n                </ul>\n            </div>\n            \n        </div>\n    \n\n    \n</div>\n                            \n                                <div class=\"method-content\">\n    <div class=\"main-method-title here\" id=\"readln\" title=\"readln\">\n             <a class=\"url-link\" href=\"#readln\">\n                <img class=\"url-link-img\" src=\"../html-template-resources/images/link.svg\">\n            </a>\n            <h2 > readln </h2>\n        <span class=\"method-types\">\n            <p>(<span class=\"builtin-type\">any</span> a)</p>\n            \n                <b> returns </b><span class=\"builtin-type\">string</span> \n            \n        </span>\n    </div>\n    <div class=\"function-desc\">\n        \n        <p>Retrieves the input read from the STDIN.</p>\n<pre><code class=\"language-ballerina\"> string choice = io:readln(&quot;Enter choice 1 - 5: &quot;);\n</code></pre>\n\n    </div>\n    \n        <div class=\"data-wrapper\">\n            <h3 class=\"param-title\">Parameters</h3>\n                \n            <div class=\"params-listing\">\n                <ul>\n                    <li>\n                        <span >a</span>\n                        <span class=\"type\">  <span class=\"builtin-type\">any</span> </span>\n                        \n                    </li>\n                    <li>\n                        <p>\n                            \n                            <p>Any value to be printed</p>\n\n                        </p>\n                    </li>\n                </ul>\n            </div>\n            \n        </div>\n    \n\n    \n        \n        <div class=\"returns-listing\">\n            <ul>\n                <li> <h3 class=\"type\">Return Type</h3> (<span class=\"type\"><span class=\"builtin-type\">string</span></span>)</li>\n                <li><p>Input read from the STDIN</p>\n</li>\n            </ul>\n        </div>\n        \n    \n</div>\n                            \n                                <div class=\"method-content\">\n    <div class=\"main-method-title here\" id=\"sprintf\" title=\"sprintf\">\n             <a class=\"url-link\" href=\"#sprintf\">\n                <img class=\"url-link-img\" src=\"../html-template-resources/images/link.svg\">\n            </a>\n            <h2 > sprintf </h2>\n        <span class=\"method-types\">\n            <p>(<span class=\"builtin-type\">string</span> format, <span class=\"array-type\"><span class=\"builtin-type\">any</span> | <span class=\"builtin-type\">error</span>...</span> args)</p>\n            \n                <b> returns </b><span class=\"builtin-type\">string</span> \n            \n        </span>\n    </div>\n    <div class=\"function-desc\">\n        \n        <p>Returns a formatted string using the specified format string and arguments. Following format specifiers are allowed.</p>\n<p>b - boolean</p>\n<p>B - boolean (ALL_CAPS)</p>\n<p>d - int</p>\n<p>f - float</p>\n<p>x - hex</p>\n<p>X - HEX (ALL_CAPS)</p>\n<p>s - string (This specifier is applicable for any of the supported types in Ballerina.\nThese values will be converted to their string representation.)</p>\n<pre><code class=\"language-ballerina\"> string s8 = io:sprintf(&quot;%s scored %d for %s and has an average of %.2f.&quot;, name, marks, subjects[0], average);\n</code></pre>\n\n    </div>\n    \n        <div class=\"data-wrapper\">\n            <h3 class=\"param-title\">Parameters</h3>\n                \n            <div class=\"params-listing\">\n                <ul>\n                    <li>\n                        <span >format</span>\n                        <span class=\"type\">  <span class=\"builtin-type\">string</span> </span>\n                        \n                    </li>\n                    <li>\n                        <p>\n                            \n                            <p>A format string</p>\n\n                        </p>\n                    </li>\n                </ul>\n            </div>\n                \n            <div class=\"params-listing\">\n                <ul>\n                    <li>\n                        <span >args</span>\n                        <span class=\"type\">  <span class=\"array-type\"><span class=\"builtin-type\">any</span> | <span class=\"builtin-type\">error</span>...</span> </span>\n                        \n                    </li>\n                    <li>\n                        <p>\n                            \n                            <p>Arguments referred by the format specifiers in the format string</p>\n\n                        </p>\n                    </li>\n                </ul>\n            </div>\n            \n        </div>\n    \n\n    \n        \n        <div class=\"returns-listing\">\n            <ul>\n                <li> <h3 class=\"type\">Return Type</h3> (<span class=\"type\"><span class=\"builtin-type\">string</span></span>)</li>\n                <li><p>The formatted string</p>\n</li>\n            </ul>\n        </div>\n        \n    \n</div>\n                            \n                        </div>\n                    \n                </div>\n            </div>\n        </div>\n    </div>\n</body>\n\n<script>\nlet mainNavLinks = document.querySelectorAll(\".primary-list.module ul li a\");\nlet mainSections = document.querySelectorAll(\".main-wrapper section.method-content\");\n\nlet lastId;\nlet cur = [];\n\nlet contentWrapper = document.querySelector(\".content-wrapper\");\ncontentWrapper.addEventListener(\"scroll\", event => {\n  let fromTop = contentWrapper.scrollTop;\n\n  mainNavLinks.forEach(link => {\n    let section = document.querySelector(\"#\" + link.attributes.getNamedItem(\"data\").textContent);\n\n    if (\n      section.offsetTop <= fromTop &&\n      section.offsetTop + section.offsetHeight > fromTop\n    ) {\n      link.classList.add(\"current\");\n    } else {\n      link.classList.remove(\"current\");\n    }\n  });\n});\n\n</script>\n<script>\nfunction menuLinkClick() {\n  if(window.matchMedia(\"(max-width: 600px)\").matches) {\n    document.getElementsByClassName(\"navi-wrapper\")[0].style.display = \"none\";\n  }\n}\nfunction displayMenu() {\n  var nav = document.getElementsByClassName(\"navi-wrapper\")[0];\n  var content = document.getElementsByClassName(\"content-wrapper\")[0];\n  if (nav.style.display === \"none\" || nav.style.display === \"\") {\n    nav.style.display = \"block\";\n    content.style.marginLeft = \"210px\";\n  } else {\n    nav.style.display = \"none\";\n    content.style.marginLeft = \"0px\";\n  }\n}\n</script>\n<script>\nfunction menuLinkClick() {\n  if(window.matchMedia(\"(max-width: 600px)\").matches) {\n    document.getElementsByClassName(\"navi-wrapper\")[0].style.display = \"none\";\n  }\n}\nfunction displayMenu() {\n  var nav = document.getElementsByClassName(\"navi-wrapper\")[0];\n  var content = document.getElementsByClassName(\"content-wrapper\")[0];\n  if (nav.style.display === \"none\" || nav.style.display === \"\") {\n    nav.style.display = \"block\";\n    content.style.marginLeft = \"210px\";\n  } else {\n    nav.style.display = \"none\";\n    content.style.marginLeft = \"0px\";\n  }\n}\n</script>\n\n<script>\n    window.onload = (event) => {\n        ballerinaHighlighter.highlightSnippets();\n    };\n</script>\n\n\n","id":"functions"},"__N_SSG":true}