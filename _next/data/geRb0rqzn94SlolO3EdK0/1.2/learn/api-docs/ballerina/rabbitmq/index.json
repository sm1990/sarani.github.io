{"pageProps":{"frontmatter":{},"content":"<!DOCTYPE html>\n<html>\n\n<head>\n    <meta charset=\"utf-8\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"/>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0\">\n    <meta name=\"description\" content=\"RabbitMQ is one of the most popular open-source enterprise messaging systems modelled on the Advanced Message Queuing Protocol (AMQP) standard. This guide covers the Ballerina RabbitMQ module and its public API. This module contains the functionality to support messaging with the RabbitMQ broker (AMQP 0-9-1). It assumes that the most recent version of Ballerina is used and is built on top of the basics.\n\">\n    <meta name=\"keywords\" content=\"ballerina,ballerina lang,api docs,rabbitmq\">\n\n    <title>API Docs - ballerina/rabbitmq</title>\n    <script src=\"../html-template-resources/jquery.min.js\"></script>\n\n    <!-- BIO THEME START -->\n<link rel=\"stylesheet\" href=\"/css/latest-bootstrap.css\">\n<!-- Optional theme -->\n<link rel=\"stylesheet\" href=\"/css/latest-bootstrap-theme.css\">\n<!-- Latest compiled and minified JavaScript -->\n<script src=\"/js/latest-bootstrap.js\"></script>\n\n<script type=\"text/javascript\" src=\"/js/api-doc-template.js\"></script>\n<script type=\"text/javascript\" src=\"/js/ballerina-common.js\"></script>\n<link rel=\"stylesheet\" href=\"/css/ballerina-io.css\">\n<link rel=\"stylesheet\" href=\"/css/ballerina-io-docs.css\">\n<link rel=\"stylesheet\" href=\"/css/ballerina-io-api-new.css\">\n\n<style>\n    .line-numbers-wrap {\n        display: none;\n    }\n     .cVersionChangeBanner{\n    color: #000000;\n    background-color: #fcdf4a !important;\n    width: 100%;\n    display: inline-block;\n    padding: 10px 0px;\n    text-align: center;\n    font-weight: 500;\n    font-size: 20px;\n    transition : all 0.3s;\n    position: fixed;\n    top: 0;\n    width: 100%;\n    height: 50px;\n    z-index: 9;\n    }\n    .cInfoBannerLink{\n        color: #000000;\n        text-decoration: underline;\n    }\n     .cInfoBannerLink:hover{\n        color: #545454 !important;\n        text-decoration: underline !important;\n    }\n   \n    .content-wrapper{\n        padding-top: 2em !important;\n    }\n    @media only screen and (max-width: 992px) {\n        .content-wrapper {padding-top: 7em !important}\n\n    }\n</style>\n<!-- BIO THEME END -->\n\n    <link rel=\"stylesheet\" href=\"../html-template-resources/semantic.min.css\">\n    <link rel=\"stylesheet\" href=\"../html-template-resources/styles/css/styles.css\">\n    <link rel=\"stylesheet\" href=\"../html-template-resources/styles/css/font.css\">\n    <script src=\"../html-template-resources/semantic.min.js\"></script>\n    <script src=\"../syntax-highlighter/highlighter.js\"></script>\n\n</head>\n\n\n<body class=\"cBallerina-io\">\n    <div class=\"row cBallerina-io-top-row\">\n    <div class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\"></div>\n    <div class=\"col-xs-12 col-sm-12 col-md-6 col-lg-6 cTopLineContainer\">\n        <div class=\"cTopLine\"></div>\n    </div>\n</div>\n<div class=\"cVersionChangeBanner\">\n       This API documentation is for Ballerina 1.2.0. <a href=\"https://lib.ballerina.io\" class=\"cInfoBannerLink\">View API documentation for the latest release</a>.\n    </div>\n    <div class=\"row cBallerina-io-Nav\" id=\"iMainNavigation\" style=\"top:50px\">\n\n</div>\n<div class=\"clearfix\"></div>\n    <div class=\"navi-wrapper\">\n        <div class=\"navi-wrapper-content\">\n            <a href=\"\n    ../index.html\">\n    <img class=\"logo\" src=\"../html-template-resources/images/ballerina-logo.png\">\n</a>\n\n            \n\n    \n        <div class=\"version\">v1.2.14</div>\n    \n\n\n<div class=\"primary-list module\">\n    \n        <a href=\"../rabbitmq/index.html\" onclick=\"menuLinkClick()\">\n            <h3>rabbitmq</h3>\n        </a>\n    \n    <ul>\n        \n        <li>\n            <a data=\"records\" href=\"../rabbitmq/index.html#records\" onclick=\"menuLinkClick()\">Records</a>\n        </li>\n        \n        \n            <li>\n                <a  data=\"objects\" href=\"../rabbitmq/index.html#objects\" onclick=\"menuLinkClick()\">Objects</a>\n            </li>\n        \n        \n            <li>\n                <a data=\"clients\" href=\"../rabbitmq/index.html#clients\" onclick=\"menuLinkClick()\">Clients</a>\n            </li>\n        \n        \n            <li>\n                <a data=\"listeners\" href=\"../rabbitmq/index.html#listeners\" onclick=\"menuLinkClick()\">Listeners</a>\n            </li>\n        \n        \n        \n            <li>\n                <a data=\"constants\" href=\"../rabbitmq/index.html#constants\" onclick=\"menuLinkClick()\">Constants</a>\n            </li>\n        \n        \n            <li>\n                <a data=\"annotations\" href=\"../rabbitmq/index.html#annotations\" onclick=\"menuLinkClick()\">Annotations</a>\n            </li>\n        \n        \n            <li>\n                <a data=\"types\" href=\"../rabbitmq/index.html#types\" onclick=\"menuLinkClick()\">Types</a>\n            </li>\n        \n        \n            <li>\n                <a data=\"errors\" href=\"../rabbitmq/index.html#errors\" onclick=\"menuLinkClick()\">Errors</a>\n            </li>\n        \n    </ul>\n    <div class=\"ui divider\"></div>\n</div>\n\n            <div class=\"primary-list module-list\">\n    \n        <h3>All Modules</h3>\n        <ul>\n            \n                <li>\n                    <a href=\"../auth/index.html\">auth</a>\n                </li>\n            \n                <li>\n                    <a href=\"../cache/index.html\">cache</a>\n                </li>\n            \n                <li>\n                    <a href=\"../config/index.html\">config</a>\n                </li>\n            \n                <li>\n                    <a href=\"../crypto/index.html\">crypto</a>\n                </li>\n            \n                <li>\n                    <a href=\"../email/index.html\">email</a>\n                </li>\n            \n                <li>\n                    <a href=\"../encoding/index.html\">encoding</a>\n                </li>\n            \n                <li>\n                    <a href=\"../file/index.html\">file</a>\n                </li>\n            \n                <li>\n                    <a href=\"../filepath/index.html\">filepath</a>\n                </li>\n            \n                <li>\n                    <a href=\"../grpc/index.html\">grpc</a>\n                </li>\n            \n                <li>\n                    <a href=\"../http/index.html\">http</a>\n                </li>\n            \n                <li>\n                    <a href=\"../io/index.html\">io</a>\n                </li>\n            \n                <li>\n                    <a href=\"../java/index.html\">java</a>\n                </li>\n            \n                <li>\n                    <a href=\"../java.arrays/index.html\">java.arrays</a>\n                </li>\n            \n                <li>\n                    <a href=\"../java.jdbc/index.html\">java.jdbc</a>\n                </li>\n            \n                <li>\n                    <a href=\"../jsonutils/index.html\">jsonutils</a>\n                </li>\n            \n                <li>\n                    <a href=\"../jwt/index.html\">jwt</a>\n                </li>\n            \n                <li>\n                    <a href=\"../kafka/index.html\">kafka</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.array/index.html\">lang.array</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.boolean/index.html\">lang.boolean</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.decimal/index.html\">lang.decimal</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.error/index.html\">lang.error</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.float/index.html\">lang.float</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.future/index.html\">lang.future</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.int/index.html\">lang.int</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.map/index.html\">lang.map</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.object/index.html\">lang.object</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.stream/index.html\">lang.stream</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.string/index.html\">lang.string</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.table/index.html\">lang.table</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.typedesc/index.html\">lang.typedesc</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.value/index.html\">lang.value</a>\n                </li>\n            \n                <li>\n                    <a href=\"../lang.xml/index.html\">lang.xml</a>\n                </li>\n            \n                <li>\n                    <a href=\"../ldap/index.html\">ldap</a>\n                </li>\n            \n                <li>\n                    <a href=\"../log/index.html\">log</a>\n                </li>\n            \n                <li>\n                    <a href=\"../math/index.html\">math</a>\n                </li>\n            \n                <li>\n                    <a href=\"../mime/index.html\">mime</a>\n                </li>\n            \n                <li>\n                    <a href=\"../nats/index.html\">nats</a>\n                </li>\n            \n                <li>\n                    <a href=\"../oauth2/index.html\">oauth2</a>\n                </li>\n            \n                <li>\n                    <a href=\"../observe/index.html\">observe</a>\n                </li>\n            \n                <li>\n                    <a href=\"../openapi/index.html\">openapi</a>\n                </li>\n            \n                <li>\n                    <a href=\"../rabbitmq/index.html\">rabbitmq</a>\n                </li>\n            \n                <li>\n                    <a href=\"../reflect/index.html\">reflect</a>\n                </li>\n            \n                <li>\n                    <a href=\"../runtime/index.html\">runtime</a>\n                </li>\n            \n                <li>\n                    <a href=\"../socket/index.html\">socket</a>\n                </li>\n            \n                <li>\n                    <a href=\"../stringutils/index.html\">stringutils</a>\n                </li>\n            \n                <li>\n                    <a href=\"../system/index.html\">system</a>\n                </li>\n            \n                <li>\n                    <a href=\"../task/index.html\">task</a>\n                </li>\n            \n                <li>\n                    <a href=\"../test/index.html\">test</a>\n                </li>\n            \n                <li>\n                    <a href=\"../time/index.html\">time</a>\n                </li>\n            \n                <li>\n                    <a href=\"../transactions/index.html\">transactions</a>\n                </li>\n            \n                <li>\n                    <a href=\"../websub/index.html\">websub</a>\n                </li>\n            \n                <li>\n                    <a href=\"../xmlutils/index.html\">xmlutils</a>\n                </li>\n            \n                <li>\n                    <a href=\"../xslt/index.html\">xslt</a>\n                </li>\n            \n        </ul>\n        <div class=\"ui divider\"></div>\n    \n</div>\n        </div>\n    </div>\n    <div class=\"content-wrapper pusher\">\n        <div>\n    <a id=\"toc\" class=\"toc item\" onclick=\"displayMenu()\">\n        <img src=\"../html-template-resources/images/menu.svg\">\n    </a>\n</div>\n        <div class=\"main-wrapper module-wrapper\">\n                <h1>\n                    <a class=\"breadcrumb-home\" href=\"\n    ../index.html\">\n    <img class=\"breadcrumb-home-icon\" src=\"../html-template-resources/images/home.svg\">\n</a>\n                    \n                        Module : <span class=\"modules\">rabbitmq</span>\n                    \n                </h1>\n                    <h2>Module Overview</h2>\n<p><a href=\"https://www.rabbitmq.com/\">RabbitMQ</a> is one of the most popular open-source enterprise messaging systems modelled on the Advanced Message Queuing Protocol (AMQP) standard. This guide covers the Ballerina RabbitMQ module and its public API. This module contains the functionality to support messaging with the RabbitMQ broker (AMQP 0-9-1). It assumes that the most recent version of Ballerina is used and is built on top of the basics.</p>\n<p>Key sections include:</p>\n<ul>\n<li>Connecting to RabbitMQ</li>\n<li>Using Exchanges and Queues</li>\n<li>Publishing Messages</li>\n<li>Consuming Messages Using Consumer Services</li>\n<li>Client Acknowledgements</li>\n</ul>\n<h3>Connecting to RabbitMQ</h3>\n<p>The core APIs are the <code>rabbitmq:Connection</code>, <code>rabbitmq:Channel</code>, and <code>rabbitmq:Message</code> representing an AMQP 0-9-1 Connection, a Channel, and a Ballerina RabbitMQ Message respectively. The following code connects to a RabbitMQ node using the given parameters (host name, port number, etc.):</p>\n<pre><code class=\"language-ballerina\">   rabbitmq:Connection newConnection = new({ host: &quot;localhost&quot;, \n                                            port: 5672, \n                                            username: “guest”, \n                                            password: “guest” });\n</code></pre>\n<p>The <code>rabbitmq:Connection</code> created above can then be used to open a <code>rabbitmq:Channel</code>.</p>\n<pre><code class=\"language-ballerina\">   rabbitmq:Channel newChannel = new(connection);\n</code></pre>\n<p>The <code>rabbitmq:Channel</code> can now be used to send and receive messages as described in the subsequent sections.</p>\n<h4>Enabling TLS</h4>\n<p>It is possible to encrypt the communication between the Ballerina client and the broker by using TLS-enabled connections. Client and server authentication (peer verification) is also supported. To enable the TLS support in the RabbitMQ broker, the node has to be <a href=\"https://www.rabbitmq.com/ssl.html#enabling-tls\">configured</a> to know the location of the Certificate Authority bundle, the server's certificate file, and the server's key. A TLS listener should also be configured to know which port to listen for TLS-enabled client connections.</p>\n<p>Connecting to a TLS-enabled RabbitMQ node using the Ballerina client can be done by passing a <code>rabbitmq:SecureSocket</code> record with the appropriate values to the <code>rabbitmq:ConnectionConfiguration</code> record when initializing the connection.</p>\n<pre><code class=\"language-ballerina\">   rabbitmq:Connection connection = new({ host: &quot;localhost&quot;, \n                                    \t    port: 5671, \n                                            secureSocket: { trustStore: { path: &quot;/path/to/trustStore&quot;,\n                                                                        password: &quot;rabbitstore&quot; },\n                                                          keystore: { path: &quot;/path/to/client_key.p12&quot;,\n                                                                      password: &quot;MySecretPassword&quot; },\n                                                          verifyHostname: true }});\n</code></pre>\n<h4>Disconnecting from RabbitMQ</h4>\n<p>To disconnect, simply close the open channels and the connections:</p>\n<pre><code class=\"language-ballerina\">   rabbitmq:Error? closeResult = newChannel.close();\n   rabbitmq:Error? closeResult = newConnection.close();\n</code></pre>\n<blockquote>\n<p>Note: Closing the <code>Channel</code> may be a good practice. However, it isn’t strictly necessary in this case as it will be done automatically when the underlying <code>Connection</code> is closed.</p>\n</blockquote>\n<h3>Using exchanges and queues</h3>\n<p>Client applications work with exchanges and queues, which are the high-level building blocks of the AMQP protocol. These must be declared before they can be used. The following code declares an exchange and a server-named queue and then binds them together.</p>\n<pre><code class=\"language-ballerina\">   rabbitmq:Error? exchangeResult = newChannel-&gt;exchangeDeclare({ exchangeName: &quot;MyExchange&quot;,\n                                                      exchangeType: rabbitmq:DIRECT_EXCHANGE,\n                                                      durable: true,\n                                                      autoDelete: true });\n   \n   string|rabbitmq:Error? queueResult = newChannel-&gt;queueDeclare();\n   if (queueResult is string) {\n        rabbitmq:Error? bindResult = newChannel.queueBind(queueResult, &quot;MyExchange&quot;, &quot;routing-key&quot;);\n   }\n</code></pre>\n<p>This sample code will declare,</p>\n<ul>\n<li>a durable auto-delete exchange of the type <code>rabbitmq:DIRECT_EXCHANGE</code></li>\n<li>a non-durable, exclusive auto-delete queue with an auto-generated name</li>\n</ul>\n<p>Next, the above function is called to bind the queue to the exchange with the given routing key.</p>\n<pre><code class=\"language-ballerina\">   rabbitmq:Error? exchangeResult = newChannel-&gt;exchangeDeclare({ exchangeName: &quot;MyExchange&quot;,\n                                                      exchangeType: rabbitmq:DIRECT_EXCHANGE,\n                                                      durable: true,\n                                                      autoDelete: true });\n   \n   string|rabbitmq:Error? queueResult = newChannel-&gt;queueDeclare({ queueName: &quot;MyQueue&quot;, \n                                                durable: true,\n                                                exclusive: false,\n                                                autoDelete: false });\n\n   rabbitmq:Error? bindResult = newChannel.queueBind(&quot;MyQueue&quot;, &quot;MyExchange&quot;, &quot;routing-key&quot;);\n</code></pre>\n<p>This sample code will declare,</p>\n<ul>\n<li>a durable auto-delete exchange of the type <code>rabbitmq:DIRECT_EXCHANGE</code></li>\n<li>a durable, non-exclusive non-auto-delete queue with a well-known name</li>\n</ul>\n<h4>Deleting entities and purging queues</h4>\n<ul>\n<li>Delete a queue:</li>\n</ul>\n<pre><code class=\"language-ballerina\">   rabbitmq:Error? deleteResult = newChannel-&gt;queueDelete(&quot;MyQueue&quot;);\n</code></pre>\n<ul>\n<li>Delete a queue only if it is empty:</li>\n</ul>\n<pre><code class=\"language-ballerina\">   rabbitmq:Error? deleteResult = newChannel-&gt;queueDelete(&quot;MyQueue&quot;, false, true);\n</code></pre>\n<ul>\n<li>Delete a queue only if it is unused (does not have any consumers):</li>\n</ul>\n<pre><code class=\"language-ballerina\">   rabbitmq:Error? deleteResult = newChannel-&gt;queueDelete(&quot;MyQueue&quot;, true, false);\n</code></pre>\n<ul>\n<li>Delete an exchange:</li>\n</ul>\n<pre><code class=\"language-ballerina\">   rabbitmq:Error? deleteResult = newChannel-&gt;exchangeDelete(&quot;MyExchange&quot;);\n</code></pre>\n<ul>\n<li>Purge a queue (delete all of its messages):</li>\n</ul>\n<pre><code class=\"language-ballerina\">   rabbitmq:Error? purgeResult = newChannel-&gt;queuePurge(&quot;MyQueue&quot;);\n</code></pre>\n<h3>Publishing messages</h3>\n<p>To publish a message to an exchange, use the <code>basicPublish()</code> function as follows:</p>\n<pre><code class=\"language-ballerina\">   rabbitmq:Error? sendResult = newChannel-&gt;basicPublish(&quot;Hello from Ballerina&quot;, &quot;MyQueue&quot;);\n</code></pre>\n<p>Setting other properties of the message such as routing headers can be done by using the <code>BasicProperties</code> record with the appropriate values.</p>\n<h3>Consuming messages using consumer services</h3>\n<p>The most efficient way to receive messages is to set up a subscription using a Ballerina RabbitMQ <code>rabbitmq:Listener</code> and any number of consumer services. The messages will then be delivered automatically as they arrive rather than having to be explicitly requested.</p>\n<p>Multiple consumer services can be bound to one Ballerina RabbitMQ <code>rabbitmq:Listener</code>. The queue to which the service is listening is configured in the <code>rabbitmq:ServiceConfig</code> annotation of the service.</p>\n<pre><code class=\"language-ballerina\">listener rabbitmq:Listener channelListener= new(newConnection);\n\n@rabbitmq:ServiceConfig {\n    queueConfig: {\n        queueName: &quot;MyQueue&quot;\n    }\n}\nservice rabbitmqConsumer on channelListener {\n    resource function onMessage(rabbitmq:Message message) {\n        string|rabbitmq:Error? messageContent = message.getTextContent();\n    }\n}\n</code></pre>\n<p>The <code>rabbitmq:Message</code> object received can be used to retrieve its contents and for manual client acknowledgements.</p>\n<h3>Client acknowledgements</h3>\n<p>The message consuming is supported by mainly two types of acknowledgement modes, which are auto acknowledgements and client acknowledgements.\nClient acknowledgements can further be divided into to two different types as positive and negative acknowledgements.\nThe default acknowledgement mode is auto-ack (messages are acknowledged immediately after consuming).</p>\n<blockquote>\n<p>WARNING: To ensure the reliability of receiving messages, use the client-ack mode.</p>\n</blockquote>\n<p>The negatively-acknowledged (rejected) messages can be re-queued.</p>\n<blockquote>\n<p><strong>Note:</strong> The default thread pool size used in Ballerina is the number of processors available * 2. You can configure the thread pool size by using the <code>BALLERINA_MAX_POOL_SIZE</code> environment variable.</p>\n</blockquote>\n<p>For information on the operations, which you can perform with this module, see the below <strong>Functions</strong>.</p>\n<p>For examples on the usage of the connector, see the following.</p>\n<ul>\n<li><a href=\"https://ballerina.io/1.2/learn/by-example/rabbitmq-producer.html\">Producer Example</a>.</li>\n<li><a href=\"https://ballerina.io/1.2/learn/by-example/rabbitmq-consumer.html\">Consumer Example</a></li>\n<li><a href=\"https://ballerina.io/1.2/learn/by-example/rabbitmq-consumer-with-client-acknowledgement.html\">Client Acknowledgements Example</a></li>\n<li><a href=\"https://ballerina.io/1.2/learn/by-example/rabbitmq-consumer-with-qos-settings.html\">QoS Settings Example</a></li>\n</ul>\n\n\n            \n            <section class=\"method-content\" id=\"records\">\n                <div class=\"main-method-title here\">\n                    <a class=\"url-link\" href=\"#records\">\n                        <img class=\"url-link-img\" src=\"../html-template-resources/images/link.svg\">\n                    </a>\n                <h2> Records </h2>\n                </div>\n                <table>\n                    \n                        <tr>\n                            <td class=\"module-title truncate records\" id=\"BasicProperties\" title=\"BasicProperties\">\n                                <a class=\"records \" href=\"records/BasicProperties.html\">BasicProperties</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Basic properties of the message - routing headers etc.\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate records\" id=\"ConnectionConfiguration\" title=\"ConnectionConfiguration\">\n                                <a class=\"records \" href=\"records/ConnectionConfiguration.html\">ConnectionConfiguration</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Configurations used to create a <code>rabbitmq:Connection</code>.\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate records\" id=\"Detail\" title=\"Detail\">\n                                <a class=\"records \" href=\"records/Detail.html\">Detail</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>The details of an error.\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate records\" id=\"ExchangeConfiguration\" title=\"ExchangeConfiguration\">\n                                <a class=\"records \" href=\"records/ExchangeConfiguration.html\">ExchangeConfiguration</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Configurations used to declare an exchange.\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate records\" id=\"QueueConfiguration\" title=\"QueueConfiguration\">\n                                <a class=\"records \" href=\"records/QueueConfiguration.html\">QueueConfiguration</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Configurations used to declare a queue.\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate records\" id=\"RabbitMQServiceConfig\" title=\"RabbitMQServiceConfig\">\n                                <a class=\"records \" href=\"records/RabbitMQServiceConfig.html\">RabbitMQServiceConfig</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Configurations required to create a subscription.\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate records\" id=\"SecureSocket\" title=\"SecureSocket\">\n                                <a class=\"records \" href=\"records/SecureSocket.html\">SecureSocket</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Configurations for facilitating secure connections.\n                            </td>\n                        </tr>\n                    \n                </table>\n            </section>\n            \n\n            \n            <section class=\"method-content\" id=\"objects\">\n                <div class=\"main-method-title here\">\n                    <a class=\"url-link\" href=\"#objects\">\n                        <img class=\"url-link-img\" src=\"../html-template-resources/images/link.svg\">\n                    </a>\n                <h2> Objects </h2>\n                </div>\n                <table>\n                    \n                        <tr>\n                            <td class=\"module-title truncate objects\" id=\"Connection\" title=\"Connection\">\n                                <a class=\"objects \" href=\"objects/Connection.html\">Connection</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Represents a single network connection to the RabbitMQ broker.\n                            </td>\n                        </tr>\n                    \n                </table>\n             </section>\n            \n\n            \n             <section class=\"method-content\" id=\"clients\">\n                <div class=\"main-method-title here\">\n                    <a class=\"url-link\" href=\"#clients\">\n                        <img class=\"url-link-img\" src=\"../html-template-resources/images/link.svg\">\n                    </a>\n                <h2> Clients </h2>\n                </div>\n                <table>\n                    \n                        <tr>\n                            <td class=\"module-title truncate clients\" id=\"Channel\" title=\"Channel\">\n                                <a class=\"clients \" href=\"clients/Channel.html\">Channel</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>The Ballerina interface to provide AMQP Channel related functionality.\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate clients\" id=\"Message\" title=\"Message\">\n                                <a class=\"clients \" href=\"clients/Message.html\">Message</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Provides the functionality to manipulate the messages received by the consumer services.\n                            </td>\n                        </tr>\n                    \n                </table>\n             </section>\n            \n\n            \n             <section class=\"method-content\" id=\"listeners\">\n                <div class=\"main-method-title here\">\n                    <a class=\"url-link\" href=\"#listeners\">\n                        <img class=\"url-link-img\" src=\"../html-template-resources/images/link.svg\">\n                    </a>\n                <h2> Listeners </h2>\n                </div>\n                <table>\n                    \n                        <tr>\n                            <td class=\"module-title truncate listeners\" id=\"Listener\" title=\"Listener\">\n                                <a class=\"listeners \" href=\"listeners/Listener.html\">Listener</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Ballerina RabbitMQ Message Listener.\n                            </td>\n                        </tr>\n                    \n                </table>\n            </section>\n            \n           \n\n            \n\n\n            \n            <section class=\"method-content\" id=\"constants\">\n                <div class=\"main-method-title here\">\n                    <a class=\"url-link\" href=\"#constants\">\n                        <img class=\"url-link-img\" src=\"../html-template-resources/images/link.svg\">\n                    </a>\n                <h2> Constants </h2>\n                </div>\n                <table>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"DIRECT_EXCHANGE\" title=\"DIRECT_EXCHANGE\">\n                                <a class=\"constant \" href=\"constants.html#DIRECT_EXCHANGE\">DIRECT_EXCHANGE</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Constant for the RabbitMQ Direct Exchange type.\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"FANOUT_EXCHANGE\" title=\"FANOUT_EXCHANGE\">\n                                <a class=\"constant \" href=\"constants.html#FANOUT_EXCHANGE\">FANOUT_EXCHANGE</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Constant for the RabbitMQ Fan-out Exchange type.\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"TOPIC_EXCHANGE\" title=\"TOPIC_EXCHANGE\">\n                                <a class=\"constant \" href=\"constants.html#TOPIC_EXCHANGE\">TOPIC_EXCHANGE</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Constant for the RabbitMQ Topic Exchange type.\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"AUTO_ACK\" title=\"AUTO_ACK\">\n                                <a class=\"constant \" href=\"constants.html#AUTO_ACK\">AUTO_ACK</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Constant for the RabbitMQ auto acknowledgement mode.\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"CLIENT_ACK\" title=\"CLIENT_ACK\">\n                                <a class=\"constant \" href=\"constants.html#CLIENT_ACK\">CLIENT_ACK</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Constant for the RabbitMQ client acknowledgement mode.\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate constant\" id=\"RABBITMQ_ERROR\" title=\"RABBITMQ_ERROR\">\n                                <a class=\"constant \" href=\"constants.html#RABBITMQ_ERROR\">RABBITMQ_ERROR</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Represents the reason for the RabbitMQ module related errors.\n                            </td>\n                        </tr>\n                    \n                </table>\n            </section>\n            \n\n\n            \n            <section class=\"method-content\" id=\"annotations\">\n                <div class=\"main-method-title here\">\n                    <a class=\"url-link\" href=\"#annotations\">\n                        <img class=\"url-link-img\" src=\"../html-template-resources/images/link.svg\">\n                    </a>\n                <h2> Annotations </h2>\n                </div>\n                <table>\n                    \n                        <tr>\n                            <td class=\"module-title truncate annotations\" id=\"ServiceConfig\" title=\"ServiceConfig\">\n                                <a class=\"annotations \" href=\"annotations.html#ServiceConfig\">ServiceConfig</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>The annotation, which is used to configure the subscription.\n                            </td>\n                        </tr>\n                    \n                </table>\n            </section>\n            \n\n            \n            <section class=\"method-content\" id=\"types\">\n                <div class=\"main-method-title here\">\n                    <a class=\"url-link\" href=\"#types\">\n                        <img class=\"url-link-img\" src=\"../html-template-resources/images/link.svg\">\n                    </a>\n                <h2> Types </h2>\n                </div>\n                <table>\n                    \n                        <tr>\n                            <td class=\"module-title truncate types\" id=\"AcknowledgementMode\" title=\"AcknowledgementMode\">\n                                <a class=\"types \" href=\"types.html#AcknowledgementMode\">AcknowledgementMode</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Types of acknowledgement modes supported by the Ballerina RabbitMQ Connector.\n                            </td>\n                        </tr>\n                    \n                        <tr>\n                            <td class=\"module-title truncate types\" id=\"MessageContent\" title=\"MessageContent\">\n                                <a class=\"types \" href=\"types.html#MessageContent\">MessageContent</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Types of message content that can be published.\n                            </td>\n                        </tr>\n                    \n                </table>\n            </section>\n            \n\n            \n             <section class=\"method-content\" id=\"errors\">\n                <div class=\"main-method-title here\">\n                    <a class=\"url-link\" href=\"#errors\">\n                        <img class=\"url-link-img\" src=\"../html-template-resources/images/link.svg\">\n                    </a>\n                <h2> Errors </h2>\n                </div>\n                <table>\n                    \n                        <tr>\n                            <td class=\"module-title truncate errors\" id=\"Error\" title=\"Error\">\n                                <a class=\"errors \" href=\"errors.html#Error\">Error</a>\n                            </td>\n                            <td class=\"module-desc\">\n                                \n                                <p>Represents the RabbitMQ module related errors.\n                            </td>\n                        </tr>\n                    \n                </table>\n            </section>\n            \n        </div>\n    </div>\n\n</body>\n\n<script>\nlet mainNavLinks = document.querySelectorAll(\".primary-list.module ul li a\");\nlet mainSections = document.querySelectorAll(\".main-wrapper section.method-content\");\n\nlet lastId;\nlet cur = [];\n\nlet contentWrapper = document.querySelector(\".content-wrapper\");\ncontentWrapper.addEventListener(\"scroll\", event => {\n  let fromTop = contentWrapper.scrollTop;\n\n  mainNavLinks.forEach(link => {\n    let section = document.querySelector(\"#\" + link.attributes.getNamedItem(\"data\").textContent);\n\n    if (\n      section.offsetTop <= fromTop &&\n      section.offsetTop + section.offsetHeight > fromTop\n    ) {\n      link.classList.add(\"current\");\n    } else {\n      link.classList.remove(\"current\");\n    }\n  });\n});\n\n</script>\n<script>\nfunction menuLinkClick() {\n  if(window.matchMedia(\"(max-width: 600px)\").matches) {\n    document.getElementsByClassName(\"navi-wrapper\")[0].style.display = \"none\";\n  }\n}\nfunction displayMenu() {\n  var nav = document.getElementsByClassName(\"navi-wrapper\")[0];\n  var content = document.getElementsByClassName(\"content-wrapper\")[0];\n  if (nav.style.display === \"none\" || nav.style.display === \"\") {\n    nav.style.display = \"block\";\n    content.style.marginLeft = \"210px\";\n  } else {\n    nav.style.display = \"none\";\n    content.style.marginLeft = \"0px\";\n  }\n}\n</script>\n<script>\nfunction menuLinkClick() {\n  if(window.matchMedia(\"(max-width: 600px)\").matches) {\n    document.getElementsByClassName(\"navi-wrapper\")[0].style.display = \"none\";\n  }\n}\nfunction displayMenu() {\n  var nav = document.getElementsByClassName(\"navi-wrapper\")[0];\n  var content = document.getElementsByClassName(\"content-wrapper\")[0];\n  if (nav.style.display === \"none\" || nav.style.display === \"\") {\n    nav.style.display = \"block\";\n    content.style.marginLeft = \"210px\";\n  } else {\n    nav.style.display = \"none\";\n    content.style.marginLeft = \"0px\";\n  }\n}\n</script>\n\n<script>\n    window.onload = (event) => {\n        ballerinaHighlighter.highlightSnippets();\n    };\n</script>\n\n\n","id":"index"},"__N_SSG":true}